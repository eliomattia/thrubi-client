{"version":3,"sources":["actions/config/flare.js","reducers/customMiddleware/thunkWrap.js","reducers/config/actionTypes.js","actions/flare.js","actions/config/thrubi.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","actions/config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStats.js","components/Titlebar.js","classes/Channel.js","components/_ActionButton.js","actions/env/server.js","actions/config/http.js","actions/server.js","actions/config/server.js","actions/userMenu.js","actions/market.js","actions/config/market.js","components/MemberOptions.js","components/MemberInfo.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","actions/config/blockchain_ethereum.js","actions/env/blockchain_ethereum.js","actions/user.js","actions/config/facebook.js","actions/config/auth.js","actions/env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","actions/env/redirect.js","components/Auth.js","components/Info.js","components/_UserIcon.js","components/_UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/_CcyRow.js","components/DeclareIncome.js","components/Claim.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/SelectPopulation.js","components/Countries.js","actions/adminMenu.js","components/Ccys.js","components/AddPopulation.js","components/_DeletePopulation.js","components/TunePopulation.js","components/User.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","components/redirect/LinkedInRedirect.js","components/redirect/GoogleRedirect.js","index.js"],"names":["exports","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","errorFlare","UNEXPECTED_FLARE","message","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","infoFlare","DETECTED_ETH_NETWORK_CHANGE","DETECTED_ETH_ADDRESS_CHANGE","thunkWrap","_ref","dispatch","getState","next","action","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","LOGIN","UPDATE_USER_ACTIVATION","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CLEAR_POPULATION","CHANGE_POPULATION","RECEIVE_POPULATIONS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","SELECT_POPULATION","POPULATION_EXISTS","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_SWITCHPOPULATION","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","type","asyncToGenerator","regenerator_default","a","mark","_callee","index","fallbackFlare","displayMessage","displayDetails","wrap","_context","prev","abrupt","Promise","resolve","then","session","serverError","JSON","stringify","strDetails","payload","setTimeout","deleteFlare","deleteTimeout","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","clearTimeout","flares","_x3","_x4","flareWrap","catch","error","blockchainInit","thrubiContract","blockchain","state","length","undefined","assign","flareInit","deactivated","defineProperty","concat","toConsumableArray","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","user","claim","transform","userMenu","adminMenu","switchPopulation","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","passport","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","channels","BLOCKCHAIN_ETHEREUM","KEYBOARD","FACEBOOK","LINKEDIN","GOOGLE","PAYPAL","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleState","accessJwt","refreshJwt","userAccess","googleCode","populationInit","exists","lastId","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","parseFloat","config","populationId","memberInit","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","thrubiSilverRedeem","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStats","connect","react_default","createElement","className","Titlebar","src","process","alt","height","width","components_GlobalStats","Channel","channelMode","Math","abs","channelName","_ActionButton","text","buttonType","_ref$disabled","disabled","_ref$channel","channel","onClick","event","preventDefault","channelColor","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","endpoint","finally","fetchThrubiPriceSilverNext","_ref3","_callee3","_context3","_x5","_x6","fetchStats","_ref4","_callee4","_context4","_x7","_x8","fetchConfig","_ref5","_callee5","_context5","_x9","_x10","changePopulation","_ref6","_callee6","_context6","deselectPopulation","_x11","_x12","selectPopulation","_ref7","_callee7","_context7","setInterval","activity","fetchMember","data","amount","_x13","_x14","_ref8","_callee8","_context8","clearInterval","_x15","_x16","createMember","_ref9","_callee9","_context9","sent","_x17","_x18","_ref10","_callee10","_context10","_x19","_x20","mDeclared","_ref11","_callee11","_context11","_x21","_x22","_ref12","_callee12","_context12","_x23","_x24","advancedMode","_ref13","_callee13","_context13","_x25","_x26","viewHistory","_ref14","_callee14","_context14","_x27","_x28","_MemberOptions","_this$props","props","_this$props2","react","components_ActionButton","Component","MemberOptions","MemberInfo","toFixed","MemberBar","components_MemberOptions","components_MemberInfo","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","username","password","ref","input","placeholder","required","value","ethEventType","THRUBI_ABI","constant","inputs","outputs","payable","stateMutability","signature","anonymous","indexed","switchOptionUserMenu","fetchDetails","detail","i","detailName","detailValue","storeDetails","overwrite","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","FBlogout","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","fetchUserChannels","deleteChannel","setPayChannel","channelIsOpen","newPayChannel","finalizeLogin","loginData","loginError","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","_ref15","_callee15","_context15","createKeyboardForm","_ref16","_callee16","_context16","_x29","_x30","loginKeyboardForm","_ref17","_callee17","_context17","_x31","_x32","addKeyboardForm","_ref18","_callee18","_context18","abandonKeyboard","_x33","_x34","updateKeyboardForm","_ref19","_callee19","_context19","_x35","_x36","_ref20","_callee20","_context20","_x37","_x38","chooseKeyboard","_ref21","_callee21","_context21","_x39","_x40","createKeyboard","_ref22","_callee22","_context22","_x41","_x42","loginKeyboard","_ref23","_callee23","_context23","_x43","_x44","addKeyboard","_ref24","_callee24","_context24","_x45","_x46","updateKeyboard","_ref25","_callee25","_context25","_x47","_x48","receiveFacebookLoginStatus","loginStatus","_ref26","_callee26","facebookLoginStatus","_context26","status","authResponse","userID","accessToken","_x49","_x50","FBgetLoginStatus","resolveFBlogin","_ref27","_callee27","_context27","window","FB","resolveFBgetLoginStatus","getLoginStatus","_x51","_x52","_ref29","_callee29","_context29","resolveFBlogout","_x55","_x56","connectFacebook","_ref30","_callee30","_context30","_ref28","_callee28","_context28","login","scope","_x53","_x54","_x57","_x58","fetchFacebookDetails","_ref31","_callee31","_context31","api","facebookDetails","first_name","last_name","_x59","_x60","createFacebook","_ref32","_callee32","_context32","fbLoginPackage","_x61","_x62","loginFacebook","_ref33","_callee33","_context33","_x63","_x64","addFacebook","_ref34","_callee34","_context34","_x65","_x66","updateFacebook","_ref35","_callee35","_context35","_x67","_x68","processLinkedInLogin","waitingHandleResolve","_ref36","_callee36","_context36","origin","pjRenamed","removeEventListener","close","_x69","_x70","sendLinkedInLogin","_ref37","_callee37","_context37","location","search","params","parse","decodeURI","replace","pJson","code","opener","postMessage","_x71","_x72","startupLinkedInLogin","_ref38","_callee38","linkedInInterval","waitingHandle","_context38","closed","openNewWindow","open","focus","addEventListener","_x73","_x74","createLinkedIn","_ref39","_callee39","_context39","liLoginPackage","_x75","_x76","loginLinkedIn","_ref40","_callee40","_context40","_x77","_x78","addLinkedIn","_ref41","_callee41","_context41","_x79","_x80","updateLinkedIn","_ref42","_callee42","_context42","_x81","_x82","processGoogleLogin","_ref43","_callee43","_context43","_x83","_x84","sendGoogleLogin","_ref44","_callee44","_context44","_x85","_x86","startupGoogleLogin","_ref45","_callee45","googleInterval","_context45","_x87","_x88","createGoogle","_ref46","_callee46","_context46","gLoginPackage","_x89","_x90","loginGoogle","_ref47","_callee47","_context47","_x91","_x92","addGoogle","_ref48","_callee48","_context48","_x93","_x94","updateGoogle","_ref49","_callee49","_context49","_x95","_x96","createPayPal","_ref50","_callee50","_context50","_x97","_x98","loginPayPal","_ref51","_callee51","_context51","_x99","_x100","addPayPal","_ref52","_callee52","_context52","_x101","_x102","updatePayPal","_ref53","_callee53","_context53","_x103","_x104","_Auth","toLowerCase","channelAuthFunctionName","_this","_this$props3","components_KeyboardChannel","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","_RadioButtons","disabledFilter","channelIsForPay","mode","actions","Auth","_Info","style","backgroundImage","Info","_UserIcon","_UserDetails","_UserView","components_UserIcon","components_UserDetails","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_CcyRow","bold","muted","isNaN","DeclareIncome","declareIncomeBusy","components_CcyRow","_Claim","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","claimProcedureActive","_this2","claimBusy","onSubmit","setState","Claim","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","userLoggedIn","components_MemberBlue","components_Claim","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","onChange","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","components_MemberSilver","components_Transform","ThrubiSilver","_MemberGold","_ThrubiGold","components_MemberGold","ThrubiGold","Populations","lastPopulationId","isMember","_SelectPopulation","reload","populationsBusy","populationsNotAvailable","components_Populations","SelectPopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_AddPopulation","verifyExists","populationExists","createPopulation","components_Countries","components_Ccys","AddPopulation","_DeletePopulation","_TunePopulation","newBrake","newWarperMincome","newWarperEquality","tunePopulation","TunePopulation","_User","deletePopulation","components_UserView","components_Auth","components_UserManageDetails","components_UserActivation","components_SelectPopulation","components_AddPopulation","components_MemberBar","components_DeclareIncome","components_ThrubiBlue","components_ThrubiSilver","components_ThrubiGold","components_DeletePopulation","components_TunePopulation","components_Info","User","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","data-dismiss","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","components_Titlebar","components_User","components_Footer","components_Flare","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","_LinkedInRedirect","LinkedInRedirect","_GoogleRedirect","GoogleRedirect","store","ReactDOM","render","es","react_router_dom","basename","react_router","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.5d360a47.chunk.js","sourcesContent":["exports.flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    errorFlare: {\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0016\",message:\"Error updating user pay channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0016\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0016\",message:\"Error fetching channels\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n    },\r\n};","const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    LOGIN: null,\r\n    UPDATE_USER_ACTIVATION: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CLEAR_POPULATION: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_SWITCHPOPULATION:   {busyType:\"action\",busyId:\"switchPopulation\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import {TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from './config/thrubi';\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const emitFlare = (type,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    return Promise.resolve()\r\n        .then(()            => index = getState().session.flare.next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,type,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER=30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER=1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER=1000;\r\nexport const INTERVAL_MEMBER_WORKER=1000;\r\nexport const INTERVAL_MARKET_WORKER=1000;\r\nexport const INTERVAL_POPULATION_WORKER=1000;\r\n\r\nexport const TIMEOUT_FLARE_DELETE=7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG=30000;\r\n\r\nexport const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","import {flareBook} from \"../../actions/config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           action.payload.type,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           state.flares[action.payload.index].type,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:{},});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:{},});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:{},});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:{},});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:{},});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:{},});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:{},});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        switchPopulation:   true,\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","const userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../actions/config/user\";\r\n\r\nconst userInit = {\r\n    id: -1,\r\n    role: -1,\r\n    deactivated: 1,\r\n    name: null,\r\n    surname: null,\r\n    email: null,\r\n    passport: null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate: userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu: userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory: false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.UPDATE_USER_ACTIVATION:\r\n            return Object.assign({},state, {\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name         ? action.payload.name       : state.name,\r\n                surname:                action.payload.surname      ? action.payload.surname    : state.surname,\r\n                email:                  action.payload.email        ? action.payload.email      : state.email,\r\n                passport:               action.payload.passport     ? action.payload.passport   : state.passport,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                passport:               null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    channels: {\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        KEYBOARD:               0,\r\n        FACEBOOK:               0,\r\n        LINKEDIN:               0,\r\n        GOOGLE:                 0,\r\n        PAYPAL:                 0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleState:            null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.linkedInCode,\r\n                linkedInState:          action.payload.linkedInState,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.googleCode,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                autoLogin:              true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations: [],\r\n    exists: 0,\r\n    id: -1,\r\n    lastId: -1,\r\n    countryId: '',\r\n    countryName: '',\r\n    ccyId: '',\r\n    ccyName: '',\r\n    ccySymbol: '',\r\n    thrubiPriceSilver: 0,\r\n    thrubiPriceSilverNext: 0,\r\n    thrubiPriceGold: 1.5,\r\n    brake: 0,\r\n    mincome: 0,\r\n    equality: 0,\r\n    warperMincome: 0,\r\n    warperEquality: 0,\r\n    thrubiFees: 0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                lastId: state.lastId,\r\n            });\r\n        case actionType.CHANGE_POPULATION:\r\n            return Object.assign({},state,{\r\n                lastId: state.id,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:             action.payload.populations,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver: action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext: action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                 parseFloat(action.payload.stats.mincome),\r\n                equality:                parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                   parseFloat(action.payload.config.brake),\r\n                warperMincome:           parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:          parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                      parseInt(action.payload.population.populationId),\r\n                countryId:               action.payload.population.countryId,\r\n                countryName:             action.payload.population.countryName,\r\n                ccyId:                   action.payload.population.ccyId,\r\n                ccyName:                 action.payload.population.ccyName,\r\n                ccySymbol:               action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                  action.payload.exists,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverRedeem:         parseFloat(action.payload.member.thrubiSilverRedeem),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _GlobalStats = ({\r\n    nUser,\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary d-none d-lg-inline-block text-center small mr-2 alignBottom\">\r\n        {nUser} {nUser===1?\"user\":\"users\"} using Thrubi in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nUser: state.global.stats.nUser,\r\n    nCountry: state.global.stats.nCountry,\r\n    nCcy: state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStats = connect(mapStateToProps,{})(_GlobalStats);\r\n\r\nexport default GlobalStats;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Titlebar = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right ethBadges\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Titlebar = connect(mapStateToProps)(_Titlebar);\r\n\r\nexport default Titlebar;","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelColor (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"blockchain-ethereum\";\r\n            case \"KEYBOARD\":            return \"keyboard\";\r\n            case \"FACEBOOK\":            return \"facebook\";\r\n            case \"LINKEDIN\":            return \"linkedin\";\r\n            case \"GOOGLE\":              return \"google\";\r\n            case \"PAYPAL\":              return \"paypal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"BlockchainEthereum\";\r\n            case \"KEYBOARD\":            return \"Keyboard\";\r\n            case \"FACEBOOK\":            return \"Facebook\";\r\n            case \"LINKEDIN\":            return \"LinkedIn\";\r\n            case \"GOOGLE\":              return \"Google\";\r\n            case \"PAYPAL\":              return \"PayPal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName (channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Use my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Use my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Using my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Using my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet to use it\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account to use it\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign in with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign in with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign in with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign in with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign in with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign up with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign up with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign up with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign up with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign up with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Enable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Connect a Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect a LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect a Google account\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Disable access via my Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Disable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Disconnect my Facebook account\";\r\n                case \"LINKEDIN\":            return \"Disconnect my LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Disconnect my Google account\";\r\n                case \"PAYPAL\":              return \"Disconnect my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect another Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Update username/password\";\r\n                case \"FACEBOOK\":            return \"Connect another Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect another LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect another Google account\";\r\n                case \"PAYPAL\":              return \"Connect another PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            default: return \"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({action,payload,text,buttonType,disabled=false,channel=false}) => (\r\n    <button disabled={disabled}\r\n            onClick={(event) => {event.preventDefault(); action(payload); }}\r\n            className={\"btn btn-sm btn-block rounded-0 my-2 py-\"+(channel?\"2 \":\"2 \")+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n        <div className={\"container-fluid row p-0 m-0\"+(channel?\"\":\" fullWidth\")}>\r\n            <div className={(channel?\"\":\"fullWidth\")}>\r\n                {\r\n                    !channel ? \"\" :\r\n                        <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                }\r\n                <div className={(channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(channel?\"left\":\"center\")}>{text}</div>\r\n            </div>\r\n        </div>\r\n    </button>\r\n);\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"./env/server\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType,headers} from \"./config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USER:                                   \"/user\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {fetchExrate} from \"./market\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {INTERVAL_MARKET_WORKER,INTERVAL_MEMBER_WORKER,INTERVAL_POPULATION_WORKER} from \"./config/thrubi\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    //dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    if (getState().client.user.id!==-1) {\r\n        processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)(dispatch,getState)\r\n            .then(populations => {\r\n                dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}});\r\n            })\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n            .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n    }\r\n};\r\n\r\nconst fetchThrubiPriceSilver = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(stats => {\r\n            dispatch({type:actionType.RECEIVE_STATS,payload:{stats}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(config => {\r\n            dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.CHANGE_POPULATION,payload:{}});\r\n    deselectPopulation()(dispatch,getState);\r\n};\r\n\r\nexport const selectPopulation = (population) => async (dispatch,getState) => {\r\n    deselectPopulation()(dispatch,getState);\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchMember(population.populationId,getState().client.user.id)(dispatch,getState);\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchThrubiPriceSilver(population.populationId)(dispatch,getState);\r\n            fetchThrubiPriceSilverNext(population.populationId)(dispatch,getState);\r\n            if (getState().client.user.auth) {\r\n                fetchStats(population.populationId)(dispatch,getState);\r\n                fetchConfig(population.populationId)(dispatch,getState);\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n    dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_MEMBER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const createMember = (population) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+population.populationId,null))\r\n        .then(() => dispatch(fetchPopulations()))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    if ((getState().client.population.id!==-1)&&(getState().client.user.loggedIn)) {\r\n        return await dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null))\r\n            .then(packet => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n    }\r\n};\r\n\r\nexport const declareIncome = (mDeclared) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const claim = () => async (dispatch, getState) => {\r\n    const ethAddress=getState().client.userAccess.ethAddress;\r\n    const populationId=getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId, null));\r\n};\r\n\r\nexport const advancedMode = (optionAdvancedMode) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = (optionViewHistory) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import request from \"request\";\r\nimport {uri,spotApi} from \"./config/market\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","import React, {Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nclass _MemberOptions extends Component {\r\n\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory,changePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Advanced\":\"Basic\"}/>\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType={\"p-0 btn-\"+(optionViewHistory?\"primary\":\"light\")} disabled={!optionAdvancedMode} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"History\":\"History\"} />\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={changePopulation} text=\"Back\" />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,userMenu)(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    populationId,\r\n    countryName,\r\n    ccyId,\r\n    ccyName,\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"col-lg-9 py-3\">\r\n            <span>{countryName}/{ccyName}({ccyId}) <span className=\"small\">(pid#{populationId})</span></span>\r\n            <span>&nbsp;| 1.00Ξ = {exrate.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilver.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next)</span>\r\n            <span>&nbsp;| 1.00₲₮ = {thrubiPriceGold.toFixed(2)}{ccySymbol}</span>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    countryName: state.client.population.countryName,\r\n    ccyId: state.client.population.ccyId,\r\n    ccyName: state.client.population.ccyName,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext: state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport MemberOptions from \"./MemberOptions\";\r\nimport MemberInfo from \"./MemberInfo\";\r\n\r\nconst _Viewport = ({\r\n    busy,\r\n    loggedIn,\r\n    populationId,\r\n}) => (\r\n    <div className=\"container text-primary text-center small m-0 p-2\">\r\n        {\r\n            busy ? \"Viewport loading...\" :\r\n                <div className=\"row\">\r\n                    {\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <MemberOptions />\r\n                                <MemberInfo />\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.viewport,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{})(_Viewport);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _ActionButton;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from './_ActionButton';\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = '0xb198482C48Ef0e89df3597b0f7250F88c51D6759';\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x199cf6ad2e6ce4f20f4f77bf95042862858fe7b5fb2240b17ec190107e6b41e8\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x6b8d5104af05a3749790a02190abe69665e450a2af5f4dd52ac361f9a8a22bd5\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3259af21\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xf92b929f\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:0}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n    processRequest(requestType.POST,endpoint.USER_DEACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()             => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","const linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\n\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://eliomattia.github.io/thrubi-client/linkedInRedirect\";\r\n    envGoogleRedirectUri      = \"https://eliomattia.github.io/thrubi-client/googleRedirect\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000/linkedInRedirect\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000/googleRedirect\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"./config/thrubi\";\r\nimport {endpoint} from \"./config/server\";\r\nimport {facebook} from \"./config/facebook\";\r\nimport {\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams\r\n} from \"./config/auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport userOptions from \"./config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"./env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"./env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = (payload) => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = (intervalTime) => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (()           => dispatch(logout({autoLogin:true})));\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const setPayChannel = (payChannel) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = (loginData) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nexport const sendLinkedInLogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({linkedInCode:pJson.code,linkedInState:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nexport const sendGoogleLogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({googleCode:pJson.code,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\n\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER,INTERVAL_ETH_NETWORK_WORKER} from \"./config/thrubi\";\r\nimport {ethEventType} from \"./config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"./env/blockchain_ethereum\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:true})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = (transformEth) => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        transformContract(ethAddress,populationId,userId)\r\n            .send({from:ethAddress,value:transformEth*1e18})\r\n            .once(ethEventType.confirmation,() => {\r\n                    // Thrubi will automatically process the transform via its workers on the backend\r\n                    resolve();\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\n\r\n","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../actions/config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"I am new to Thrubi\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        <div className=\"my-4\">\r\n                                                            My payment method:\r\n                                                            <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                       activeFilter={payChannel}\r\n                                                                       checkedFilter={payChannel}\r\n                                                                       action={setPayChannel}\r\n                                                                       elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                            if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                key:key,\r\n                                                                                channel:key,\r\n                                                                                color:\"btn-\" + (Channel.channelIsOpen(channels[key]) ? \"\" : \"outline-\")+Channel.channelColor(key),\r\n                                                                                disabledFilter:(key === payChannel),\r\n                                                                                text:Channel.channelUserFriendlyName(key, (key === payChannel ? \"USING\" : (Channel.channelIsOpen(channels[key]) ? \"USE\" : \"LINK\")))\r\n                                                                            }); else return null;\r\n                                                                       }).filter(element=>element!==null)}/>\r\n                                                        </div>\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key, actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiBlue\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 everybody\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-primary\"><div className=\"opaque\">\r\n                                <h3>Everybody</h3>\r\n                                <p>\r\n                                    Be part of the sustainable societies of the future. If your country has adhered to a Thrubi plan,\r\n                                    you will be awarded Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will in turn give you the rights to regular payments.\r\n                                    Nobody can be extremely poor or extremely rich with Thrubi.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-primary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiSilver\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 wealthy\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-secondary\"><div className=\"opaque\">\r\n                                <h3>Wealthy individuals</h3>\r\n                                <p>\r\n                                    If you are an investor, choose a sustainable future. As a wealthy individual,\r\n                                    you will have access to purchasing Thrubi Gold, the investment tool of sustainable societies.\r\n                                    Thrubi Gold can only be purchased by redeeming Thrubi Silver, which you will be awarded according\r\n                                    to your current income. Governments are accepting Thrubi Gold to pay tax duties.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-secondary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiGold\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 societies\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-success\"><div className=\"opaque\">\r\n                                <h3>Thriving societies</h3>\r\n                                <p>\r\n                                    If you are a sovereign government, you want your people to be at their best.\r\n                                    Thrubi stabilizes a country's income distribution. Growth is shared amongst all participants\r\n                                    of a society in a non-equal fashion: people with a higher net worth will stay richer.\r\n                                    Thrubi, however, will ensure that a society becomes richer as a whole.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-success\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nconst _UserIcon = ({role,deactivated}) =>\r\n    <img className=\"mt-3 rounded-lg\" alt={role+deactivated} height=\"128\" width=\"128\" src={process.env.PUBLIC_URL+\"/jpg/elio.jpg\"}/> /* +\"/icons/\"+role+deactivated+\".png\" */\r\n;\r\n\r\nexport default _UserIcon;","import React from 'react';\r\n\r\nconst _UserDetails = ({user}) => { return (\r\n    <div className=\"text-center mb-2\">\r\n        <div className=\"text-primary displayInlineBlock p-0\"><b>{(user.name||user.surname) ? (user.name?user.name:\"\") + \" \" + (user.surname?user.surname:\"\") : \"No user data\"}</b>&nbsp;</div><div className=\"text-secondary displayInlineBlock small\">uid#{user.id}</div>\r\n        <div className=\"text-secondary small\">email: {user.email ? user.email : \"not found\"}&nbsp;<span className=\"badge badge-info\">Verified</span></div>\r\n        <div className=\"text-secondary small\">passport#{user.passport ? user.passport : \"not found\"}&nbsp;<span className=\"badge badge-danger\">Pending verification</span></div>\r\n    </div>\r\n)};\r\n\r\nexport default _UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _UserIcon from './_UserIcon';\r\nimport _UserDetails from './_UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,role,deactivated,loggedIn,user} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <_UserIcon role={role?\"admin\":\"user\"} deactivated={deactivated?\"_deactivated\":\"\" } />\r\n                                <_UserDetails user={user} />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    role: state.client.user.role,\r\n    deactivated: state.client.user.deactivated,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    user: state.client.user,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <div className=\"small\">\r\n                            Account currently deactivated<br/>\r\n                            <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        </div>\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,userMenu)(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,passport,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email,passport};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"newUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"newUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"newUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"newUserPassport\" ref={(input) => refs.passport = input}  type=\"text\" className={fieldClassName} placeholder={passport?passport:\"Enter passport number\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            if (refs.passport.value)    userDetails[\"passport\"]=refs.passport.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    passport:       state.client.user.passport,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    muted,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"row ccyRowContainer\">\r\n        <span className=\"text-secondary small text-left ccyRowElement col-lg-6\">{text}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/userMenu\";\r\n\r\nconst _DeclareIncome = ({deactivated,populationId,mCurrent,ccySymbol,declareIncomeBusy,declareIncome}) => {\r\n    let mDeclared;\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {\r\n                deactivated ? \"User deactivated, please activate user to declare income\" :\r\n                    populationId===-1 ? \"No population selected, please select a population to declare income\" :\r\n                        declareIncomeBusy ? \"Busy processing income declaration\" :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-4 py-3\">\r\n                                    <_CcyRow text=\"Declared income\" muted={false} bold={false} value={mCurrent} ccySymbol={ccySymbol} />\r\n                                </div>\r\n                                <div className=\"col-lg-4 py-1\">\r\n                                    <input id=\"newUserDeclaredM\" ref={(input) => mDeclared = input}\r\n                                           type=\"text\" className=\"form-control form-control-sm rounded-0 my-1\"\r\n                                           placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required />\r\n                                </div>\r\n                                <div className=\"col-lg-4\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)} buttonType=\"btn-primary\" />\r\n                                </div>\r\n                            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    populationId: state.client.population.id,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    mCurrent: state.client.member.mCurrent,\r\n    declareIncomeBusy: state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst DeclareIncome = connect(mapStateToProps,{declareIncome})(_DeclareIncome);\r\n\r\nexport default DeclareIncome;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport { claim } from \"../actions/userMenu\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             muted={false} bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} muted={false} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <form onSubmit={(event) => {\r\n                                                    event.preventDefault();\r\n                                                    claim();\r\n                                                }}>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!thrubiBlueEth}\r\n                                                           value={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({claimProcedureActive: !this.state.claimProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateClaimProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.claimProcedureActive?\"secondary\":(thrubiBlueEth?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                               value={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.claim,\r\n    populationId: state.client.population.id,\r\n    claimBusy: state.session.busy.action.claim,\r\n    thrubiBlueEth: state.client.member.thrubiBlueEth,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Next month ₿₮\"               muted={true}  bold={false} value={ member.thrubiBlueNext} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 muted={false} bold={false} value={ member.thrubiBlueEth} ccySymbol={\"Ξ\"} />\r\n                    <_CcyRow text=\"₿₮ awards\"                   muted={false} bold={false} value={ member.thrubiBlueAward} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                muted={true}  bold={false} value={member.thrubiBlueAwardTotal} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               muted={true}  bold={false} value={member.thrubiBlueClaimTotal} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from './_MemberBlue';\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiBlue)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Blue Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberBlue\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Claim />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"Your Ξ balance\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={0 /* add a worker that constantly checks Ξ balance from blockchain for account */ }\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             muted={false} bold={false}\r\n                                                             value={(this.state.transformEthValue * exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees * 100).toFixed(1)+\"%)\"}\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * thrubiFees)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * (1-thrubiFees) / thrubiPriceSilver)}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <form onSubmit={async (event) => {\r\n                                                    event.preventDefault();\r\n                                                    transform(this.state.transformEthValue);\r\n                                                }}>\r\n                                                    <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!this.state.transformEthValue}\r\n                                                           value={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({transformProcedureActive: !this.state.transformProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateTransformProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformProcedureActive?\"secondary\":(thrubiSilver?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiSilver)&&(!this.state.transformProcedureActive))}\r\n                                               value={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Next month $₮\" muted={true} bold={false} value={ member.thrubiSilverNext} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\" muted={false} bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\" muted={true} bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from './_MemberSilver';\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiSilver)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Silver Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberSilver\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceSilver={thrubiPriceSilver}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Transform />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"Gold ₲₮\"         muted={false} bold={true}  value={ member.thrubiGold} ccySymbol={\"₲₮\"} />\r\n            <_CcyRow text=\"Market value\"    muted={false} bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n        }}>\r\n            <input type=\"submit\" value=\"Find gold Thrubi marketplace\" className=\"btn btn-sm p-0 btn-block btn-light\" />\r\n        </form>\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _MemberGold from './_MemberGold';\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiGold)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Gold Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberGold\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                        />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createMember,selectPopulation} from \"../actions/userMenu\";\r\n\r\nconst _Populations = ({populations,auth,populationId,lastPopulationId,selectPopulation,createMember}) => {\r\n    return (\r\n        populations.map((population,index) => {\r\n            return (\r\n                <div key={index} className=\"population p-0 m-0\">\r\n                    <button\r\n                        className={\"btn btn-sm p-0 rounded-0 border-0 btn-block btn-outline-\"+\r\n                            ((!population.isMember&&!auth)?\"secondary\":\"primary\")+\r\n                            ((lastPopulationId===population.populationId)?\" active\":\"\")}\r\n                        value={(population.isMember||auth)?\"Select\":\"Become member\"}\r\n                        onClick={(population.isMember||auth)\r\n                            ? ((event) => {selectPopulation(population);})\r\n                            : ((event) => {createMember(population);})\r\n                        }\r\n                    >\r\n                        <div className=\"container-fluid row p-0 m-0\">\r\n                            <div className=\"small col-lg-2 p-0 m-0 text-center\">\r\n                                {(!population.isMember&&!auth)?\"Become member\":\r\n                                (lastPopulationId===population.populationId)?\"Last selected: #\"+population.populationId:\"Select #\"+population.populationId}\r\n                            </div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.countryId}</div>\r\n                            <div className=\"small col-lg-3 p-0 m-0 text-left\">{population.countryName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccyId}</div>\r\n                            <div className=\"small col-lg-4 p-0 m-0 text-left\">{population.ccyName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth:               state.client.user.auth,\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    lastPopulationId:   state.client.population.lastId,\r\n    populations:        state.client.population.populations,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,createMember})(_Populations);\r\n\r\nexport default Populations;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/userMenu\";\r\n\r\nclass _SelectPopulation extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if (!populationsBusy) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,deactivated,populationsNotAvailable} = this.props;\r\n\r\n        return (\r\n            <div className=\"populationTable\">\r\n                {\r\n                    busy ? <div className=\"text-center\">Loading...</div> :\r\n                        deactivated ? \"User deactivated, please activate user to select population\" :\r\n                            populationsBusy ? <div>User populations loading...</div> :\r\n                                populationsNotAvailable ? \"No populations found, we are working on this...\"\r\n                                    :\r\n                                    <Populations />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    userId:                     state.client.user.id,\r\n    deactivated:                state.client.user.deactivated,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n});\r\n\r\nconst SelectPopulation = connect(mapStateToProps,{fetchPopulations})(_SelectPopulation);\r\n\r\nexport default SelectPopulation;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _AddPopulation extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst AddPopulation = connect(mapStateToProps,{populationExists,createPopulation})(_AddPopulation);\r\n\r\nexport default AddPopulation;","import React from 'react';\r\n\r\nconst _DeletePopulation = ({action,text,buttonType}) => (\r\n    <button type=\"submit\" className={buttonType+\" px-0 mx-0\"}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                action();\r\n            }\r\n        }>\r\n        {text}\r\n    </button>\r\n);\r\n\r\nexport default _DeletePopulation;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _TunePopulation extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" muted={false} bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" muted={false} bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" muted={false} bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" muted={false} bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" muted={false} bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst TunePopulation = connect(mapStateToProps,{tunePopulation})(_TunePopulation);\r\n\r\nexport default TunePopulation;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport DeclareIncome from \"./DeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport SelectPopulation from \"./SelectPopulation\";\r\nimport AddPopulation from \"./AddPopulation\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _DeletePopulation from \"./_DeletePopulation\";\r\nimport TunePopulation from \"./TunePopulation\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,populationId} = this.props;\r\n        const {deletePopulation,close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        populationId===-1 ?\r\n                                            <Fragment>\r\n                                                <SelectPopulation />\r\n                                                {\r\n                                                    auth!==1 ? \"\" : <AddPopulation />\r\n                                                }\r\n                                            </Fragment>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    auth!==1 ?\r\n                                                        <Fragment>\r\n                                                            <DeclareIncome />\r\n                                                            <div className=\"container-fluid\">\r\n                                                                <div className=\"row p-0 userContent\">\r\n                                                                    <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                        <ThrubiBlue />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                        <ThrubiSilver />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                        <ThrubiGold />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <_DeletePopulation action={deletePopulation} text=\"Delete Population\" buttonType=\"btn btn-sm p-0 btn-block btn-secondary\"/>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <TunePopulation />\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"d-none container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport {flareBook} from \"../actions/config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].type===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].type===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <b>{flares[key].type}</b>&nbsp;\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../config/thrubi\";\r\nimport {flareBook} from \"../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchGlobalStats())\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Titlebar from \"./Titlebar\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        this.reload();\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary\">\n                <Titlebar />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h3 className=\"displayInlineBlock\">Rising inequality is toxic to growth</h3>\n                                    <i className=\"displayInlineBlock\">&nbsp;(Nick Hanauer)</i>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain})(_App);\n\nexport default App;\n\n\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendLinkedInLogin} from \"../../actions/auth\";\r\n\r\nclass _LinkedInRedirect extends Component {\r\n    componentDidMount() {\r\n        const {sendLinkedInLogin} = this.props;\r\n        sendLinkedInLogin();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center small text-dark\">\r\n                Sending over LinkedIn login information to Thrubi...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst LinkedInRedirect = connect(mapStateToProps,{sendLinkedInLogin})(_LinkedInRedirect);\r\n\r\nexport default LinkedInRedirect;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendGoogleLogin} from \"../../actions/auth\";\r\n\r\nclass _GoogleRedirect extends Component {\r\n    componentDidMount() {\r\n        const {sendGoogleLogin} = this.props;\r\n        sendGoogleLogin();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center small text-dark\">\r\n                Sending over Google login information to Thrubi...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst GoogleRedirect = connect(mapStateToProps,{sendGoogleLogin})(_GoogleRedirect);\r\n\r\nexport default GoogleRedirect;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport LinkedInRedirect from \"./components/redirect/LinkedInRedirect\";\nimport GoogleRedirect from \"./components/redirect/GoogleRedirect\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={App} />\n            <Route       path=\"/linkedInRedirect\" component={LinkedInRedirect} />\n            <Route       path=\"/googleRedirect\" component={GoogleRedirect} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}