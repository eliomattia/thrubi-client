{"version":3,"sources":["actions/config/flare.js","reducers/customMiddleware/thunkWrap.js","reducers/config/actionTypes.js","actions/flare.js","actions/config/thrubi.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","actions/config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStats.js","components/Titlebar.js","classes/Channel.js","components/_ActionButton.js","actions/env/server.js","actions/config/http.js","actions/server.js","actions/config/server.js","actions/userMenu.js","actions/market.js","actions/config/market.js","components/MemberOptions.js","components/MemberInfo.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","actions/config/blockchain_ethereum.js","actions/env/blockchain_ethereum.js","actions/user.js","actions/config/facebook.js","actions/config/auth.js","actions/auth.js","actions/blockchain_ethereum.js","actions/env/auth.js","actions/env/redirect.js","components/Auth.js","components/Info.js","components/_UserIcon.js","components/_UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/_CcyRow.js","components/DeclareIncome.js","components/Claim.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/SelectPopulation.js","components/Countries.js","actions/adminMenu.js","components/Ccys.js","components/AddPopulation.js","components/_DeletePopulation.js","components/TunePopulation.js","components/User.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","components/redirect/LinkedInRedirect.js","components/redirect/GoogleRedirect.js","index.js"],"names":["exports","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","errorFlare","UNEXPECTED_FLARE","message","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","infoFlare","DETECTED_ETH_NETWORK_CHANGE","DETECTED_ETH_ADDRESS_CHANGE","thunkWrap","_ref","dispatch","getState","next","action","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","LOGIN","UPDATE_USER_ACTIVATION","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CLEAR_POPULATION","CHANGE_POPULATION","RECEIVE_POPULATIONS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","SELECT_POPULATION","POPULATION_EXISTS","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_SWITCHPOPULATION","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","type","asyncToGenerator","regenerator_default","a","mark","_callee","index","fallbackFlare","displayMessage","displayDetails","wrap","_context","prev","abrupt","Promise","resolve","then","session","serverError","JSON","stringify","strDetails","payload","setTimeout","deleteFlare","deleteTimeout","stop","_x","_x2","apply","this","arguments","_ref2","_callee2","_context2","clearTimeout","flares","_x3","_x4","flareWrap","catch","error","blockchainInit","thrubiContract","blockchain","state","length","undefined","assign","flareInit","deactivated","defineProperty","concat","toConsumableArray","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","user","claim","transform","userMenu","adminMenu","switchPopulation","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","passport","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","channels","BLOCKCHAIN_ETHEREUM","KEYBOARD","FACEBOOK","LINKEDIN","GOOGLE","PAYPAL","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleState","accessJwt","refreshJwt","userAccess","googleCode","populationInit","exists","lastId","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","parseFloat","config","populationId","memberInit","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","thrubiSilverRedeem","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStats","connect","react_default","createElement","className","Titlebar","src","process","alt","height","width","components_GlobalStats","Channel","channelMode","Math","abs","channelName","_ActionButton","text","buttonType","_ref$disabled","disabled","_ref$channel","channel","onClick","event","preventDefault","channelColor","console","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","endpoint","finally","fetchThrubiPriceSilverNext","_ref3","_callee3","_context3","_x5","_x6","fetchStats","_ref4","_callee4","_context4","_x7","_x8","fetchConfig","_ref5","_callee5","_context5","_x9","_x10","changePopulation","_ref6","_callee6","_context6","deselectPopulation","_x11","_x12","selectPopulation","_ref7","_callee7","_context7","setInterval","activity","fetchMember","data","amount","_x13","_x14","_ref8","_callee8","_context8","clearInterval","_x15","_x16","createMember","_ref9","_callee9","_context9","sent","_x17","_x18","_ref10","_callee10","_context10","_x19","_x20","mDeclared","_ref11","_callee11","_context11","_x21","_x22","_ref12","_callee12","_context12","_x23","_x24","advancedMode","_ref13","_callee13","_context13","_x25","_x26","viewHistory","_ref14","_callee14","_context14","_x27","_x28","_MemberOptions","_this$props","props","_this$props2","react","components_ActionButton","Component","MemberOptions","MemberInfo","toFixed","MemberBar","components_MemberOptions","components_MemberInfo","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","username","password","ref","input","placeholder","required","value","ethEventType","THRUBI_ABI","constant","inputs","outputs","payable","stateMutability","signature","anonymous","indexed","switchOptionUserMenu","fetchDetails","detail","i","detailName","detailValue","storeDetails","overwrite","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","FBlogout","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","fetchUserChannels","deleteChannel","setPayChannel","channelIsOpen","newPayChannel","finalizeLogin","loginData","loginError","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","_ref15","_callee15","_context15","createKeyboardForm","_ref16","_callee16","_context16","_x29","_x30","loginKeyboardForm","_ref17","_callee17","_context17","_x31","_x32","addKeyboardForm","_ref18","_callee18","_context18","abandonKeyboard","_x33","_x34","updateKeyboardForm","_ref19","_callee19","_context19","_x35","_x36","_ref20","_callee20","_context20","_x37","_x38","chooseKeyboard","_ref21","_callee21","_context21","_x39","_x40","createKeyboard","_ref22","_callee22","_context22","_x41","_x42","loginKeyboard","_ref23","_callee23","_context23","_x43","_x44","addKeyboard","_ref24","_callee24","_context24","_x45","_x46","updateKeyboard","_ref25","_callee25","_context25","_x47","_x48","receiveFacebookLoginStatus","loginStatus","_ref26","_callee26","facebookLoginStatus","_context26","status","authResponse","userID","accessToken","_x49","_x50","FBgetLoginStatus","resolveFBlogin","_ref27","_callee27","_context27","window","FB","resolveFBgetLoginStatus","getLoginStatus","_x51","_x52","_ref29","_callee29","_context29","resolveFBlogout","_x55","_x56","connectFacebook","_ref30","_callee30","_context30","_ref28","_callee28","_context28","login","scope","_x53","_x54","_x57","_x58","fetchFacebookDetails","_ref31","_callee31","_context31","api","facebookDetails","first_name","last_name","_x59","_x60","createFacebook","_ref32","_callee32","_context32","fbLoginPackage","_x61","_x62","loginFacebook","_ref33","_callee33","_context33","_x63","_x64","addFacebook","_ref34","_callee34","_context34","_x65","_x66","updateFacebook","_ref35","_callee35","_context35","_x67","_x68","processLinkedInLogin","waitingHandleResolve","_ref36","_callee36","_context36","origin","pjRenamed","removeEventListener","close","_x69","_x70","sendLinkedInLogin","_ref37","_callee37","_context37","location","search","params","parse","decodeURI","replace","pJson","code","opener","postMessage","_x71","_x72","startupLinkedInLogin","_ref38","_callee38","linkedInInterval","waitingHandle","_context38","closed","openNewWindow","open","focus","addEventListener","_x73","_x74","createLinkedIn","_ref39","_callee39","_context39","liLoginPackage","_x75","_x76","loginLinkedIn","_ref40","_callee40","_context40","_x77","_x78","addLinkedIn","_ref41","_callee41","_context41","_x79","_x80","updateLinkedIn","_ref42","_callee42","_context42","_x81","_x82","processGoogleLogin","_ref43","_callee43","_context43","_x83","_x84","sendGoogleLogin","_ref44","_callee44","_context44","_x85","_x86","startupGoogleLogin","_ref45","_callee45","googleInterval","_context45","_x87","_x88","createGoogle","_ref46","_callee46","_context46","gLoginPackage","_x89","_x90","loginGoogle","_ref47","_callee47","_context47","_x91","_x92","addGoogle","_ref48","_callee48","_context48","_x93","_x94","updateGoogle","_ref49","_callee49","_context49","_x95","_x96","createPayPal","_ref50","_callee50","_context50","_x97","_x98","loginPayPal","_ref51","_callee51","_context51","_x99","_x100","addPayPal","_ref52","_callee52","_context52","_x101","_x102","updatePayPal","_ref53","_callee53","_context53","_x103","_x104","_Auth","toLowerCase","channelAuthFunctionName","_this","_this$props3","components_KeyboardChannel","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","_RadioButtons","disabledFilter","channelIsForPay","mode","actions","Auth","_Info","style","background-image","Info","_UserIcon","_UserDetails","_UserView","components_UserIcon","components_UserDetails","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_CcyRow","bold","muted","isNaN","DeclareIncome","declareIncomeBusy","components_CcyRow","_Claim","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","claimProcedureActive","_this2","claimBusy","onSubmit","setState","Claim","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","userLoggedIn","components_MemberBlue","components_Claim","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","onChange","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","components_MemberSilver","components_Transform","ThrubiSilver","_MemberGold","_ThrubiGold","components_MemberGold","ThrubiGold","Populations","lastPopulationId","isMember","_SelectPopulation","reload","populationsBusy","populationsNotAvailable","components_Populations","SelectPopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_AddPopulation","verifyExists","populationExists","createPopulation","components_Countries","components_Ccys","AddPopulation","_DeletePopulation","_TunePopulation","newBrake","newWarperMincome","newWarperEquality","tunePopulation","TunePopulation","_User","deletePopulation","components_UserView","components_Auth","components_UserManageDetails","components_UserActivation","components_SelectPopulation","components_AddPopulation","components_MemberBar","components_DeclareIncome","components_ThrubiBlue","components_ThrubiSilver","components_ThrubiGold","components_DeletePopulation","components_TunePopulation","components_Info","User","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","data-dismiss","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","components_Titlebar","components_User","components_Footer","components_Flare","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","_LinkedInRedirect","LinkedInRedirect","_GoogleRedirect","GoogleRedirect","store","ReactDOM","render","es","react_router_dom","basename","react_router","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.d8fcc4af.chunk.js","sourcesContent":["exports.flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    errorFlare: {\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0016\",message:\"Error updating user pay channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0016\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0016\",message:\"Error fetching channels\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n    },\r\n};","const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    LOGIN: null,\r\n    UPDATE_USER_ACTIVATION: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CLEAR_POPULATION: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_SWITCHPOPULATION:   {busyType:\"action\",busyId:\"switchPopulation\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import {TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from './config/thrubi';\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const emitFlare = (type,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    return Promise.resolve()\r\n        .then(()            => index = getState().session.flare.next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,type,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER=30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER=1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER=1000;\r\nexport const INTERVAL_MEMBER_WORKER=1000;\r\nexport const INTERVAL_MARKET_WORKER=1000;\r\nexport const INTERVAL_POPULATION_WORKER=1000;\r\n\r\nexport const TIMEOUT_FLARE_DELETE=7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG=30000;\r\n\r\nexport const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","import {flareBook} from \"../../actions/config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           action.payload.type,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           state.flares[action.payload.index].type,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:{},});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:{},});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:{},});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:{},});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:{},});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:{},});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:{},});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        switchPopulation:   true,\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","const userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../actions/config/user\";\r\n\r\nconst userInit = {\r\n    id: -1,\r\n    role: -1,\r\n    deactivated: 1,\r\n    name: null,\r\n    surname: null,\r\n    email: null,\r\n    passport: null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate: userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu: userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory: false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.UPDATE_USER_ACTIVATION:\r\n            return Object.assign({},state, {\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name         ? action.payload.name       : state.name,\r\n                surname:                action.payload.surname      ? action.payload.surname    : state.surname,\r\n                email:                  action.payload.email        ? action.payload.email      : state.email,\r\n                passport:               action.payload.passport     ? action.payload.passport   : state.passport,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                passport:               null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    channels: {\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        KEYBOARD:               0,\r\n        FACEBOOK:               0,\r\n        LINKEDIN:               0,\r\n        GOOGLE:                 0,\r\n        PAYPAL:                 0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleState:            null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.linkedInCode,\r\n                linkedInState:          action.payload.linkedInState,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.googleCode,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                autoLogin:              true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations: [],\r\n    exists: 0,\r\n    id: -1,\r\n    lastId: -1,\r\n    countryId: '',\r\n    countryName: '',\r\n    ccyId: '',\r\n    ccyName: '',\r\n    ccySymbol: '',\r\n    thrubiPriceSilver: 0,\r\n    thrubiPriceSilverNext: 0,\r\n    thrubiPriceGold: 1.5,\r\n    brake: 0,\r\n    mincome: 0,\r\n    equality: 0,\r\n    warperMincome: 0,\r\n    warperEquality: 0,\r\n    thrubiFees: 0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                lastId: state.lastId,\r\n            });\r\n        case actionType.CHANGE_POPULATION:\r\n            return Object.assign({},state,{\r\n                lastId: state.id,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:             action.payload.populations,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver: action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext: action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                 parseFloat(action.payload.stats.mincome),\r\n                equality:                parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                   parseFloat(action.payload.config.brake),\r\n                warperMincome:           parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:          parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                      parseInt(action.payload.population.populationId),\r\n                countryId:               action.payload.population.countryId,\r\n                countryName:             action.payload.population.countryName,\r\n                ccyId:                   action.payload.population.ccyId,\r\n                ccyName:                 action.payload.population.ccyName,\r\n                ccySymbol:               action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                  action.payload.exists,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverRedeem:         parseFloat(action.payload.member.thrubiSilverRedeem),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _GlobalStats = ({\r\n    nUser,\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary d-none d-lg-inline-block text-center small mr-2 alignBottom\">\r\n        {nUser} {nUser===1?\"user\":\"users\"} using Thrubi in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nUser: state.global.stats.nUser,\r\n    nCountry: state.global.stats.nCountry,\r\n    nCcy: state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStats = connect(mapStateToProps,{})(_GlobalStats);\r\n\r\nexport default GlobalStats;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Titlebar = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right ethBadges\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Titlebar = connect(mapStateToProps)(_Titlebar);\r\n\r\nexport default Titlebar;","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelColor (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"blockchain-ethereum\";\r\n            case \"KEYBOARD\":            return \"keyboard\";\r\n            case \"FACEBOOK\":            return \"facebook\";\r\n            case \"LINKEDIN\":            return \"linkedin\";\r\n            case \"GOOGLE\":              return \"google\";\r\n            case \"PAYPAL\":              return \"paypal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"BlockchainEthereum\";\r\n            case \"KEYBOARD\":            return \"Keyboard\";\r\n            case \"FACEBOOK\":            return \"Facebook\";\r\n            case \"LINKEDIN\":            return \"LinkedIn\";\r\n            case \"GOOGLE\":              return \"Google\";\r\n            case \"PAYPAL\":              return \"PayPal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName (channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Use my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Use my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Using my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Using my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet to use it\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account to use it\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign in with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign in with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign in with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign in with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign in with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign up with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign up with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign up with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign up with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign up with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Enable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Connect a Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect a LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect a Google account\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Disable access via my Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Disable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Disconnect my Facebook account\";\r\n                case \"LINKEDIN\":            return \"Disconnect my LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Disconnect my Google account\";\r\n                case \"PAYPAL\":              return \"Disconnect my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect another Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Update username/password\";\r\n                case \"FACEBOOK\":            return \"Connect another Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect another LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect another Google account\";\r\n                case \"PAYPAL\":              return \"Connect another PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            default: return \"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({action,payload,text,buttonType,disabled=false,channel=false}) => (\r\n    <button disabled={disabled}\r\n            onClick={(event) => {event.preventDefault(); action(payload); }}\r\n            className={\"btn btn-sm btn-block rounded-0 my-2 py-\"+(channel?\"2 \":\"2 \")+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n        <div className={\"container-fluid row p-0 m-0\"+(channel?\"\":\" fullWidth\")}>\r\n            <div className={(channel?\"\":\"fullWidth\")}>\r\n                {\r\n                    !channel ? \"\" :\r\n                        <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                }\r\n                <div className={(channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(channel?\"left\":\"center\")}>{text}</div>\r\n            </div>\r\n        </div>\r\n    </button>\r\n);\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nconsole.error(\"process.env.NODE_ENV: \",process.env.NODE_ENV);\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"./env/server\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType,headers} from \"./config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USER:                                   \"/user\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {fetchExrate} from \"./market\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {INTERVAL_MARKET_WORKER,INTERVAL_MEMBER_WORKER,INTERVAL_POPULATION_WORKER} from \"./config/thrubi\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    //dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    if (getState().client.user.id!==-1) {\r\n        processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)(dispatch,getState)\r\n            .then(populations => {\r\n                dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}});\r\n            })\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n            .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n    }\r\n};\r\n\r\nconst fetchThrubiPriceSilver = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(stats => {\r\n            dispatch({type:actionType.RECEIVE_STATS,payload:{stats}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(config => {\r\n            dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.CHANGE_POPULATION,payload:{}});\r\n    deselectPopulation()(dispatch,getState);\r\n};\r\n\r\nexport const selectPopulation = (population) => async (dispatch,getState) => {\r\n    deselectPopulation()(dispatch,getState);\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchMember(population.populationId,getState().client.user.id)(dispatch,getState);\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchThrubiPriceSilver(population.populationId)(dispatch,getState);\r\n            fetchThrubiPriceSilverNext(population.populationId)(dispatch,getState);\r\n            if (getState().client.user.auth) {\r\n                fetchStats(population.populationId)(dispatch,getState);\r\n                fetchConfig(population.populationId)(dispatch,getState);\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n    dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_MEMBER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const createMember = (population) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+population.populationId,null))\r\n        .then(() => dispatch(fetchPopulations()))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    if ((getState().client.population.id!==-1)&&(getState().client.user.loggedIn)) {\r\n        return await dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null))\r\n            .then(packet => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n    }\r\n};\r\n\r\nexport const declareIncome = (mDeclared) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const claim = () => async (dispatch, getState) => {\r\n    const ethAddress=getState().client.userAccess.ethAddress;\r\n    const populationId=getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId, null));\r\n};\r\n\r\nexport const advancedMode = (optionAdvancedMode) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = (optionViewHistory) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import request from \"request\";\r\nimport {uri,spotApi} from \"./config/market\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","import React, {Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nclass _MemberOptions extends Component {\r\n\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory,changePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Advanced\":\"Basic\"}/>\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType={\"p-0 btn-\"+(optionViewHistory?\"primary\":\"light\")} disabled={!optionAdvancedMode} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"History\":\"History\"} />\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={changePopulation} text=\"Back\" />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,userMenu)(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    populationId,\r\n    countryName,\r\n    ccyId,\r\n    ccyName,\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"col-lg-9 py-3\">\r\n            <span>{countryName}/{ccyName}({ccyId}) <span className=\"small\">(pid#{populationId})</span></span>\r\n            <span>&nbsp;| 1.00Ξ = {exrate.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilver.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next)</span>\r\n            <span>&nbsp;| 1.00₲₮ = {thrubiPriceGold.toFixed(2)}{ccySymbol}</span>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    countryName: state.client.population.countryName,\r\n    ccyId: state.client.population.ccyId,\r\n    ccyName: state.client.population.ccyName,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext: state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport MemberOptions from \"./MemberOptions\";\r\nimport MemberInfo from \"./MemberInfo\";\r\n\r\nconst _Viewport = ({\r\n    busy,\r\n    loggedIn,\r\n    populationId,\r\n}) => (\r\n    <div className=\"container text-primary text-center small m-0 p-2\">\r\n        {\r\n            busy ? \"Viewport loading...\" :\r\n                <div className=\"row\">\r\n                    {\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <MemberOptions />\r\n                                <MemberInfo />\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.viewport,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{})(_Viewport);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _ActionButton;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from './_ActionButton';\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = '0xb198482C48Ef0e89df3597b0f7250F88c51D6759';\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x199cf6ad2e6ce4f20f4f77bf95042862858fe7b5fb2240b17ec190107e6b41e8\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x6b8d5104af05a3749790a02190abe69665e450a2af5f4dd52ac361f9a8a22bd5\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3259af21\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xf92b929f\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:0}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n    processRequest(requestType.POST,endpoint.USER_DEACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()             => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","const linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"./config/thrubi\";\r\nimport {endpoint} from \"./config/server\";\r\nimport {facebook} from \"./config/facebook\";\r\nimport {\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams\r\n} from \"./config/auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport userOptions from \"./config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"./env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"./env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = (payload) => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = (intervalTime) => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (()           => dispatch(logout({autoLogin:true})));\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const setPayChannel = (payChannel) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = (loginData) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nexport const sendLinkedInLogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({linkedInCode:pJson.code,linkedInState:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nexport const sendGoogleLogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({googleCode:pJson.code,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\n\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER,INTERVAL_ETH_NETWORK_WORKER} from \"./config/thrubi\";\r\nimport {ethEventType} from \"./config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"./env/blockchain_ethereum\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:true})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = (transformEth) => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        transformContract(ethAddress,populationId,userId)\r\n            .send({from:ethAddress,value:transformEth*1e18})\r\n            .once(ethEventType.confirmation,() => {\r\n                    // Thrubi will automatically process the transform via its workers on the backend\r\n                    resolve();\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\n\r\n","export const linkedInRedirectUri    = \"https://localhost:3000/linkedInRedirect\";\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = \"https://localhost:3000/googleRedirect\";\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../actions/config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"I am new to Thrubi\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        <div className=\"my-4\">\r\n                                                            My payment method:\r\n                                                            <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                       activeFilter={payChannel}\r\n                                                                       checkedFilter={payChannel}\r\n                                                                       action={setPayChannel}\r\n                                                                       elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                            if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                key:key,\r\n                                                                                channel:key,\r\n                                                                                color:\"btn-\" + (Channel.channelIsOpen(channels[key]) ? \"\" : \"outline-\")+Channel.channelColor(key),\r\n                                                                                disabledFilter:(key === payChannel),\r\n                                                                                text:Channel.channelUserFriendlyName(key, (key === payChannel ? \"USING\" : (Channel.channelIsOpen(channels[key]) ? \"USE\" : \"LINK\")))\r\n                                                                            }); else return null;\r\n                                                                       }).filter(element=>element!==null)}/>\r\n                                                        </div>\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key, actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiBlue\">\r\n                            <div style={{\"background-image\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 everybody\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-primary\"><div className=\"opaque\">\r\n                                <h3>Everybody</h3>\r\n                                <p>\r\n                                    Be part of the sustainable societies of the future. If your country has adhered to a Thrubi plan,\r\n                                    you will be awarded Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will in turn give you the rights to regular payments.\r\n                                    Nobody can be extremely poor or extremely rich with Thrubi.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-primary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiSilver\">\r\n                            <div style={{\"background-image\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 wealthy\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-secondary\"><div className=\"opaque\">\r\n                                <h3>Wealthy individuals</h3>\r\n                                <p>\r\n                                    If you are an investor, choose a sustainable future. As a wealthy individual,\r\n                                    you will have access to purchasing Thrubi Gold, the investment tool of sustainable societies.\r\n                                    Thrubi Gold can only be purchased by redeeming Thrubi Silver, which you will be awarded according\r\n                                    to your current income. Governments are accepting Thrubi Gold to pay tax duties.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-secondary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiGold\">\r\n                            <div style={{\"background-image\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 societies\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-success\"><div className=\"opaque\">\r\n                                <h3>Thriving societies</h3>\r\n                                <p>\r\n                                    If you are a sovereign government, you want your people to be at their best.\r\n                                    Thrubi stabilizes a country's income distribution. Growth is shared amongst all participants\r\n                                    of a society in a non-equal fashion: people with a higher net worth will stay richer.\r\n                                    Thrubi, however, will ensure that a society becomes richer as a whole.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-success\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nconst _UserIcon = ({role,deactivated}) =>\r\n    <img className=\"mt-3 rounded-lg\" alt={role+deactivated} height=\"128\" width=\"128\" src={process.env.PUBLIC_URL+\"/jpg/elio.jpg\"}/> /* +\"/icons/\"+role+deactivated+\".png\" */\r\n;\r\n\r\nexport default _UserIcon;","import React from 'react';\r\n\r\nconst _UserDetails = ({user}) => { return (\r\n    <div className=\"text-center mb-2\">\r\n        <div className=\"text-primary displayInlineBlock p-0\"><b>{(user.name||user.surname) ? (user.name?user.name:\"\") + \" \" + (user.surname?user.surname:\"\") : \"No user data\"}</b>&nbsp;</div><div className=\"text-secondary displayInlineBlock small\">uid#{user.id}</div>\r\n        <div className=\"text-secondary small\">email: {user.email ? user.email : \"not found\"}&nbsp;<span className=\"badge badge-info\">Verified</span></div>\r\n        <div className=\"text-secondary small\">passport#{user.passport ? user.passport : \"not found\"}&nbsp;<span className=\"badge badge-danger\">Pending verification</span></div>\r\n    </div>\r\n)};\r\n\r\nexport default _UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _UserIcon from './_UserIcon';\r\nimport _UserDetails from './_UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,role,deactivated,loggedIn,user} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <_UserIcon role={role?\"admin\":\"user\"} deactivated={deactivated?\"_deactivated\":\"\" } />\r\n                                <_UserDetails user={user} />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    role: state.client.user.role,\r\n    deactivated: state.client.user.deactivated,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    user: state.client.user,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <div className=\"small\">\r\n                            Account currently deactivated<br/>\r\n                            <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        </div>\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,userMenu)(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,passport,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email,passport};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"newUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"newUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"newUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"newUserPassport\" ref={(input) => refs.passport = input}  type=\"text\" className={fieldClassName} placeholder={passport?passport:\"Enter passport number\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            if (refs.passport.value)    userDetails[\"passport\"]=refs.passport.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    passport:       state.client.user.passport,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    muted,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"row ccyRowContainer\">\r\n        <span className=\"text-secondary small text-left ccyRowElement col-lg-6\">{text}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/userMenu\";\r\n\r\nconst _DeclareIncome = ({deactivated,populationId,mCurrent,ccySymbol,declareIncomeBusy,declareIncome}) => {\r\n    let mDeclared;\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {\r\n                deactivated ? \"User deactivated, please activate user to declare income\" :\r\n                    populationId===-1 ? \"No population selected, please select a population to declare income\" :\r\n                        declareIncomeBusy ? \"Busy processing income declaration\" :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-4 py-3\">\r\n                                    <_CcyRow text=\"Declared income\" muted={false} bold={false} value={mCurrent} ccySymbol={ccySymbol} />\r\n                                </div>\r\n                                <div className=\"col-lg-4 py-1\">\r\n                                    <input id=\"newUserDeclaredM\" ref={(input) => mDeclared = input}\r\n                                           type=\"text\" className=\"form-control form-control-sm rounded-0 my-1\"\r\n                                           placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required />\r\n                                </div>\r\n                                <div className=\"col-lg-4\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)} buttonType=\"btn-primary\" />\r\n                                </div>\r\n                            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    populationId: state.client.population.id,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    mCurrent: state.client.member.mCurrent,\r\n    declareIncomeBusy: state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst DeclareIncome = connect(mapStateToProps,{declareIncome})(_DeclareIncome);\r\n\r\nexport default DeclareIncome;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport { claim } from \"../actions/userMenu\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             muted={false} bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} muted={false} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <form onSubmit={(event) => {\r\n                                                    event.preventDefault();\r\n                                                    claim();\r\n                                                }}>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!thrubiBlueEth}\r\n                                                           value={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({claimProcedureActive: !this.state.claimProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateClaimProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.claimProcedureActive?\"secondary\":(thrubiBlueEth?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                               value={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.claim,\r\n    populationId: state.client.population.id,\r\n    claimBusy: state.session.busy.action.claim,\r\n    thrubiBlueEth: state.client.member.thrubiBlueEth,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Next month ₿₮\"               muted={true}  bold={false} value={ member.thrubiBlueNext} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 muted={false} bold={false} value={ member.thrubiBlueEth} ccySymbol={\"Ξ\"} />\r\n                    <_CcyRow text=\"₿₮ awards\"                   muted={false} bold={false} value={ member.thrubiBlueAward} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                muted={true}  bold={false} value={member.thrubiBlueAwardTotal} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               muted={true}  bold={false} value={member.thrubiBlueClaimTotal} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from './_MemberBlue';\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiBlue)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Blue Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberBlue\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Claim />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"Your Ξ balance\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={0 /* add a worker that constantly checks Ξ balance from blockchain for account */ }\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             muted={false} bold={false}\r\n                                                             value={(this.state.transformEthValue * exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees * 100).toFixed(1)+\"%)\"}\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * thrubiFees)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * (1-thrubiFees) / thrubiPriceSilver)}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <form onSubmit={async (event) => {\r\n                                                    event.preventDefault();\r\n                                                    transform(this.state.transformEthValue);\r\n                                                }}>\r\n                                                    <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!this.state.transformEthValue}\r\n                                                           value={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({transformProcedureActive: !this.state.transformProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateTransformProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformProcedureActive?\"secondary\":(thrubiSilver?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiSilver)&&(!this.state.transformProcedureActive))}\r\n                                               value={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Next month $₮\" muted={true} bold={false} value={ member.thrubiSilverNext} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\" muted={false} bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\" muted={true} bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from './_MemberSilver';\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiSilver)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Silver Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberSilver\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceSilver={thrubiPriceSilver}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Transform />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"Gold ₲₮\"         muted={false} bold={true}  value={ member.thrubiGold} ccySymbol={\"₲₮\"} />\r\n            <_CcyRow text=\"Market value\"    muted={false} bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n        }}>\r\n            <input type=\"submit\" value=\"Find gold Thrubi marketplace\" className=\"btn btn-sm p-0 btn-block btn-light\" />\r\n        </form>\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _MemberGold from './_MemberGold';\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiGold)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Gold Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberGold\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                        />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createMember,selectPopulation} from \"../actions/userMenu\";\r\n\r\nconst _Populations = ({populations,auth,populationId,lastPopulationId,selectPopulation,createMember}) => {\r\n    return (\r\n        populations.map((population,index) => {\r\n            return (\r\n                <div key={index} className=\"population p-0 m-0\">\r\n                    <button\r\n                        className={\"btn btn-sm p-0 rounded-0 border-0 btn-block btn-outline-\"+\r\n                            ((!population.isMember&&!auth)?\"secondary\":\"primary\")+\r\n                            ((lastPopulationId===population.populationId)?\" active\":\"\")}\r\n                        value={(population.isMember||auth)?\"Select\":\"Become member\"}\r\n                        onClick={(population.isMember||auth)\r\n                            ? ((event) => {selectPopulation(population);})\r\n                            : ((event) => {createMember(population);})\r\n                        }\r\n                    >\r\n                        <div className=\"container-fluid row p-0 m-0\">\r\n                            <div className=\"small col-lg-2 p-0 m-0 text-center\">\r\n                                {(!population.isMember&&!auth)?\"Become member\":\r\n                                (lastPopulationId===population.populationId)?\"Last selected: #\"+population.populationId:\"Select #\"+population.populationId}\r\n                            </div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.countryId}</div>\r\n                            <div className=\"small col-lg-3 p-0 m-0 text-left\">{population.countryName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccyId}</div>\r\n                            <div className=\"small col-lg-4 p-0 m-0 text-left\">{population.ccyName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth:               state.client.user.auth,\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    lastPopulationId:   state.client.population.lastId,\r\n    populations:        state.client.population.populations,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,createMember})(_Populations);\r\n\r\nexport default Populations;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/userMenu\";\r\n\r\nclass _SelectPopulation extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if (!populationsBusy) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,deactivated,populationsNotAvailable} = this.props;\r\n\r\n        return (\r\n            <div className=\"populationTable\">\r\n                {\r\n                    busy ? <div className=\"text-center\">Loading...</div> :\r\n                        deactivated ? \"User deactivated, please activate user to select population\" :\r\n                            populationsBusy ? <div>User populations loading...</div> :\r\n                                populationsNotAvailable ? \"No populations found, we are working on this...\"\r\n                                    :\r\n                                    <Populations />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    userId:                     state.client.user.id,\r\n    deactivated:                state.client.user.deactivated,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n});\r\n\r\nconst SelectPopulation = connect(mapStateToProps,{fetchPopulations})(_SelectPopulation);\r\n\r\nexport default SelectPopulation;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _AddPopulation extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst AddPopulation = connect(mapStateToProps,{populationExists,createPopulation})(_AddPopulation);\r\n\r\nexport default AddPopulation;","import React from 'react';\r\n\r\nconst _DeletePopulation = ({action,text,buttonType}) => (\r\n    <button type=\"submit\" className={buttonType+\" px-0 mx-0\"}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                action();\r\n            }\r\n        }>\r\n        {text}\r\n    </button>\r\n);\r\n\r\nexport default _DeletePopulation;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _TunePopulation extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" muted={false} bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" muted={false} bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" muted={false} bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" muted={false} bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" muted={false} bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst TunePopulation = connect(mapStateToProps,{tunePopulation})(_TunePopulation);\r\n\r\nexport default TunePopulation;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport DeclareIncome from \"./DeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport SelectPopulation from \"./SelectPopulation\";\r\nimport AddPopulation from \"./AddPopulation\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _DeletePopulation from \"./_DeletePopulation\";\r\nimport TunePopulation from \"./TunePopulation\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,populationId} = this.props;\r\n        const {deletePopulation,close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        populationId===-1 ?\r\n                                            <Fragment>\r\n                                                <SelectPopulation />\r\n                                                {\r\n                                                    auth!==1 ? \"\" : <AddPopulation />\r\n                                                }\r\n                                            </Fragment>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    auth!==1 ?\r\n                                                        <Fragment>\r\n                                                            <DeclareIncome />\r\n                                                            <div className=\"container-fluid\">\r\n                                                                <div className=\"row p-0 userContent\">\r\n                                                                    <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                        <ThrubiBlue />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                        <ThrubiSilver />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                        <ThrubiGold />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <_DeletePopulation action={deletePopulation} text=\"Delete Population\" buttonType=\"btn btn-sm p-0 btn-block btn-secondary\"/>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <TunePopulation />\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"d-none container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport {flareBook} from \"../actions/config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].type===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].type===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <b>{flares[key].type}</b>&nbsp;\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../config/thrubi\";\r\nimport {flareBook} from \"../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchGlobalStats())\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Titlebar from \"./Titlebar\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        this.reload();\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary\">\n                <Titlebar />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h3 className=\"displayInlineBlock\">Rising inequality is toxic to growth</h3>\n                                    <i className=\"displayInlineBlock\">&nbsp;(Nick Hanauer)</i>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain})(_App);\n\nexport default App;\n\n\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendLinkedInLogin} from \"../../actions/auth\";\r\n\r\nclass _LinkedInRedirect extends Component {\r\n    componentDidMount() {\r\n        const {sendLinkedInLogin} = this.props;\r\n        sendLinkedInLogin();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center small text-dark\">\r\n                Sending over LinkedIn login information to Thrubi...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst LinkedInRedirect = connect(mapStateToProps,{sendLinkedInLogin})(_LinkedInRedirect);\r\n\r\nexport default LinkedInRedirect;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendGoogleLogin} from \"../../actions/auth\";\r\n\r\nclass _GoogleRedirect extends Component {\r\n    componentDidMount() {\r\n        const {sendGoogleLogin} = this.props;\r\n        sendGoogleLogin();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center small text-dark\">\r\n                Sending over Google login information to Thrubi...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst GoogleRedirect = connect(mapStateToProps,{sendGoogleLogin})(_GoogleRedirect);\r\n\r\nexport default GoogleRedirect;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport LinkedInRedirect from \"./components/redirect/LinkedInRedirect\";\nimport GoogleRedirect from \"./components/redirect/GoogleRedirect\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={App} />\n            <Route       path=\"/linkedInRedirect\" component={LinkedInRedirect} />\n            <Route       path=\"/googleRedirect\" component={GoogleRedirect} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}