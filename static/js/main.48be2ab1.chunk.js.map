{"version":3,"sources":["reducers/customMiddleware/thunkWrap.js","config/flare.js","classes/FlareQueue.js","reducers/config/actionTypes.js","actions/flare.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","config/guest.js","reducers/client/guest.js","config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStatsUsers.js","components/Header.js","components/MemberInfo.js","components/_CcyRow.js","classes/Channel.js","components/_ActionButton.js","env/server.js","config/http.js","actions/server.js","config/blockchain_ethereum.js","env/blockchain_ethereum.js","actions/market.js","config/market.js","env/workers.js","config/server.js","actions/member.js","actions/population.js","config/facebook.js","config/auth.js","env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","config/redirect.js","env/redirect.js","actions/s3.js","actions/user.js","components/MemberDeclareIncome.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","actions/log.js","components/Auth.js","components/GuestFaq.js","actions/guest.js","components/Chart.js","actions/chart.js","components/UserProfilePicture.js","config/s3.js","components/UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/UserIdentity.js","components/Claim.js","components/MemberOptions.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/PopulationSelect.js","actions/adminMenu.js","components/Countries.js","components/Ccys.js","components/PopulationAdd.js","components/PopulationDelete.js","components/PopulationTune.js","components/GuestMenu.js","components/GuestInfographics.js","components/User.js","components/GlobalStatsCountryCcy.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/GuestBanner.js","components/App.js","index.js"],"names":["thunkWrap","dispatch","getState","next","action","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","infoFlare","CANNOT_SUBSCRIBE_NEWSLETTER","message","CANNOT_TOGGLE_FAQ_STATE","DETECTED_ETH_NETWORK_CHANGE","DETECTED_ETH_ADDRESS_CHANGE","DEACTIVATED_ON","DEACTIVATED_OFF","DEACTIVATED_PENDING","EMAIL_VERIFIED_ON","EMAIL_VERIFIED_OFF","EMAIL_VERIFIED_PENDING","IDENTITY_CERTIFIED_ON","IDENTITY_CERTIFIED_OFF","IDENTITY_CERTIFIED_PENDING","INCOME_APPROVED_ON","INCOME_APPROVED_OFF","INCOME_APPROVED_PENDING","errorFlare","USER_ACTIVATION","UNEXPECTED_FLARE","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","NO_ETHEREUM_CONFIG","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_USER_PROFILE_PICTURE","toFixed","S3_UPLOAD_ERROR","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_RECEIVE_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","ERR_USER_FLAGS","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","FlareQueue","f","this","queue","then","Promise","resolve","actionType","APP_SHUTDOWN","LOGOUT","SET_GUEST_SUBSCRIBED","RECEIVE_GUEST_MENU_OPTION","TOGGLE_FAQ_STATE","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_RECEIVE_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","RECEIVE_TWITTER_WINDOW_AND_LISTENER","CLEAR_TWITTER_WINDOW_AND_LISTENER","RECEIVE_TWITTER_LOGIN","LOGIN","RECEIVE_USER_FLAGS","SET_USER_ACTIVATED","SET_USER_DEACTIVATED","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","DELETE_PROFILE_PICTURE","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CHANGE_POPULATION","RECEIVE_POPULATIONS","CLEAR_POPULATION","SELECT_POPULATION","POPULATION_EXISTS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","RECEIVE_POPULATION_FILTER","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_USER_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_USER_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","a","console","error","waiter","waiterResolve","index","addToQueue","value","session","type","payload","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","user","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","userWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","claim","transform","userMenu","adminMenu","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","guestMenuOption","guestInit","subscribed","faqState","guest","guestSubscribed","actionValue","loggableActionType","loggableActionValue","VISION_IDENTITY","VISION_INCOME_DISCLOSE","VISION_INCOME_VERIFY","VISION_INCOME_FRAUD","VISION_UBI_MONTHLY","VISION_TAX_HAVENS","WEALTHY_GOLD","WEALTHY_COMPANY","WEALTHY_WORLDWIDE","WEALTHY_PUBLIC_INFO","WEALTHY_BUSINESS_MODEL","SOCIETIES_THRUBI_WHY","SOCIETIES_UBI_GOV","SOCIETIES_MODELS_PUBLIC","SOCIETIES_GOV_CONTRIBUTE","SOCIETIES_MODELS_ABOUT","SOCIETIES_FLAT_UBI","flags","emailVerified","identityCertified","incomeApproved","userFlags","flagFlare","newState","flag","activationState","detailName","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","document","profilePicture","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","receiveChannel","channels","TWITTER","FACEBOOK","GOOGLE","LINKEDIN","BLOCKCHAIN_ETHEREUM","PAYPAL","KEYBOARD","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleCode","twitterWindow","twitterListener","twitterRequestToken","twitterOAuthVerifier","accessJwt","refreshJwt","userAccess","code","populationInit","exists","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","populationId","parseFloat","config","memberInit","isMember","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStatsUsers","connect","className","Header","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundBlendMode","src","alt","height","width","MemberInfo","_CcyRow","text","bold","isNaN","Channel","channelMode","Math","abs","channelName","NOT_AVAILABLE","_ActionButton","props","buttonType","disabled","channel","noMargin","onClick","event","preventDefault","channelColor","includes","children","Component","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","ethEventType","THRUBI_ABI","startMarketWorker","setInterval","activity","data","amount","stopMarketWorker","clearInterval","endpoint","startMemberWorker","stopMemberWorker","selectPopulation","deselectPopulation","stopPopulationWorker","startPopulationWorker","fetchThrubiPriceSilver","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","twitterAuthUri","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","stopUserWorker","FBlogout","finally","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","i","fetchUserChannels","deleteChannel","getPayChannel","setPayChannel","channelIsOpen","switchOptionUserMenu","newPayChannel","getReceiveChannel","setReceiveChannel","newReceiveChannel","finalizeLogin","loginData","loginError","fetchDetails","activateUserWorker","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","username","password","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","fbDetails","api","d","first_name","last_name","picture","storeDetails","overwrite","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","processTwitterLogin","startupTwitterLogin","twitterInterval","token","requestToken","createTwitter","tLoginPackage","loginTwitter","addTwitter","updateTwitter","createPayPal","loginPayPal","addPayPal","updatePayPal","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","oauth_token","oauth_verifier","opener","postMessage","uploadS3","signedRequest","axios","put","e","detail","detailValue","currentFlag","incomingFlag","_MemberDeclareIncome","mDeclared","declareIncomeBusy","ref","input","placeholder","required","MemberDeclareIncome","_MemberBar","removeMembership","data-dismiss","MemberBar","_RadioButtons","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","logAction","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","disabledFilter","setter","o","channelIsForPay","mode","actions","Auth","_GuestFaq","visionText","wealthyText","societiesText","target","rel","href","toggleFaq","buttonText","image","bg","header","GuestFaq","_Chart","d3plot","svgChart","Chart","handleMouseOver","handleMouseOut","select","attr","circleRadius","x","y","remove","append","xScale","yScale","bootstrapColors","thrubiBlueChart","thrubiSilverChart","thrubiGoldChart","svg","innerWidth","margin","top","right","bottom","left","innerHeight","xValue","m","minxValue","min","maxxValue","max","scaleLinear","domain","rangeRound","nice","yValue","n","minyValue","maxyValue","scaleLog","g","xAxis","axisBottom","tickSize","tickPadding","xAxisG","call","selectAll","yAxis","axisLeft","ticks","tickFormat","format","yAxisG","enter","on","_UserProfilePicture","localProfilePicture","deleteProfilePicture","uploadProfilePicture","for","onChange","UserProfilePicture","fileRef","files","size","fileName","fileType","fileSize","awsPacket","signedPutUri","unsignedGetUri","_UserDetails","UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_UserIdentity","uploadDocument","UserIdentity","_Claim","claimProcedureActive","claimBusy","setState","Claim","_MemberOptions","advancedMode","viewHistory","MemberOptions","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","_Populations","p","Populations","_PopulationSelect","reload","populationsBusy","populationsNotAvailable","countryFilterXs","countryFilterLg","createMember","changeFilter","PopulationSelect","forEach","deletePopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_PopulationAdd","verifyExists","populationExists","createPopulation","PopulationAdd","_PopulationDelete","PopulationDelete","_PopulationTune","newBrake","newWarperMincome","newWarperEquality","tunePopulation","onSubmit","PopulationTune","_GuestMenu","selected","chooseGuestMenu","GuestMenu","_GuestInfographics","GuestInfographics","_User","guestOption","User","GlobalStatsCountryCcy","Footer","data-show-count","data-patreon-widget-type","allowTransparency","frameBorder","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","Flare","long","stopGlobalStatsWorker","_GuestBanner","guestEmail","guestSubscribeNewsletter","GuestBanner","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","process","exact","path","getElementById"],"mappings":"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","file":"static/js/main.48be2ab1.chunk.js","sourcesContent":["const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","import {AMAZON_S3_MAX_PICTURE_SIZE} from \"./s3\";\r\n\r\nconst flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    infoFlare: {\r\n        CANNOT_SUBSCRIBE_NEWSLETTER:{thrubiFlareId:\"I015\",message:\"Could not subscribe you to the newsletter, please try again\"},\r\n        CANNOT_TOGGLE_FAQ_STATE:    {thrubiFlareId:\"I016\",message:\"Something went wrong with toggling the content\"},\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n        DEACTIVATED_ON:             {thrubiFlareId:\"I003\",message:\"User account is deactivated\"},\r\n        DEACTIVATED_OFF:            {thrubiFlareId:\"I004\",message:\"User account is now active\"},\r\n        DEACTIVATED_PENDING:        {thrubiFlareId:\"I005\",message:\"User account is now pending activation\"},\r\n        EMAIL_VERIFIED_ON:          {thrubiFlareId:\"I006\",message:\"Email address has been verified\"},\r\n        EMAIL_VERIFIED_OFF:         {thrubiFlareId:\"I007\",message:\"Unverified email address detected. Please check your inbox.\"},\r\n        EMAIL_VERIFIED_PENDING:     {thrubiFlareId:\"I008\",message:\"Email address pending verification. Please check your inbox.\"},\r\n        IDENTITY_CERTIFIED_ON:      {thrubiFlareId:\"I009\",message:\"Identity document certified\"},\r\n        IDENTITY_CERTIFIED_OFF:     {thrubiFlareId:\"I010\",message:\"Non-certified identity document detected. Please certify.\"},\r\n        IDENTITY_CERTIFIED_PENDING: {thrubiFlareId:\"I011\",message:\"Identity certification procedure pending. Please wait.\"},\r\n        INCOME_APPROVED_ON:         {thrubiFlareId:\"I012\",message:\"Declared income has been officially approved\"},\r\n        INCOME_APPROVED_OFF:        {thrubiFlareId:\"I013\",message:\"Newly declared income is not approved, please check.\"},\r\n        INCOME_APPROVED_PENDING:    {thrubiFlareId:\"I014\",message:\"Newly declared income is pending approval. Please wait.\"},\r\n    },\r\n    errorFlare: {\r\n        USER_ACTIVATION:            {thrubiFlareId:\"0021\",message:\"User activation module error\"},\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        NO_ETHEREUM_CONFIG:         {thrubiFlareId:\"0022\",message:\"Ethereum wallet not found, please configure or enable MetaMask\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_USER_PROFILE_PICTURE:   {thrubiFlareId:\"0023\",message:\"Please upload a JPG or PNG file, max size: \"+((AMAZON_S3_MAX_PICTURE_SIZE/1000).toFixed(0))+\" kB\"},\r\n        S3_UPLOAD_ERROR:            {thrubiFlareId:\"0024\",message:\"Could not upload picture to Amazon S3\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0017\",message:\"Error updating user pay channel\"},\r\n        ERR_RECEIVE_CHANNEL_UPDATE: {thrubiFlareId:\"0023\",message:\"Error updating user receive channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0018\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0019\",message:\"Error fetching channels\"},\r\n        ERR_USER_FLAGS:             {thrubiFlareId:\"0020\",message:\"Could not update user flags\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n};\r\n\r\nexport default flareBook;\r\n\r\nexport const TIMEOUT_FLARE_DELETE = 7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG = 30000;","class FlareQueue {\r\n    static queue = Promise.resolve();\r\n\r\n    static addToQueue(f) {\r\n        this.queue = this.queue.then(f);\r\n    }\r\n}\r\n\r\nexport default FlareQueue;","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    SET_GUEST_SUBSCRIBED: null,\r\n    RECEIVE_GUEST_MENU_OPTION: null,\r\n    TOGGLE_FAQ_STATE: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_RECEIVE_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    RECEIVE_TWITTER_WINDOW_AND_LISTENER: null,\r\n    CLEAR_TWITTER_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_TWITTER_LOGIN: null,\r\n    LOGIN: null,\r\n    RECEIVE_USER_FLAGS: null,\r\n    SET_USER_ACTIVATED: null,\r\n    SET_USER_DEACTIVATED: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    DELETE_PROFILE_PICTURE: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    CLEAR_POPULATION: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    RECEIVE_POPULATION_FILTER: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_USER_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_USER_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import FlareQueue from \"../classes/FlareQueue\";\r\nimport flareBook,{TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const getFlareNext = () => async (dispatch,getState) => {\r\n    let waiterResolve;\r\n    let waiter = new Promise(resolve => waiterResolve=resolve);\r\n    let index = {};\r\n    FlareQueue.addToQueue(() => Promise.resolve()\r\n        .then(()            => index.value = getState().session.flare.next)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => waiterResolve(index.value))\r\n    );\r\n    return waiter;\r\n};\r\n\r\nexport const emitFlare = (flareType,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    console.error(\"flare: \",flare);\r\n    return Promise.resolve()\r\n        .then(()            => dispatch(getFlareNext()))\r\n        .then(next          => index = next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,flareType,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","import flareBook from \"../../config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      action.payload.flareType,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      state.flares[action.payload.index].flareType,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    user: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_USER_WORKER:\r\n            return Object.assign({},state,{user:action.payload.userWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:null,});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:null,});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:null,});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:null,});\r\n        case actionType.STOP_USER_WORKER:\r\n            return Object.assign({},state,{user:null,});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:null,});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:null,});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:null,});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","export const guestMenuOption = {\r\n    FAQ:            \"FAQ\",\r\n    INFOGRAPHICS:   \"INFOGRAPHICS\",\r\n};","import actionType from \"../config/actionTypes\";\r\nimport {guestMenuOption} from \"../../config/guest\";\r\n\r\nconst guestInit = {\r\n    subscribed:         false,\r\n    guestMenuOption:    guestMenuOption.INFOGRAPHICS,\r\n    faqState:           {},\r\n};\r\n\r\nconst guest = (state = guestInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},guestInit);\r\n        case actionType.SET_GUEST_SUBSCRIBED:\r\n            return Object.assign({},state,{\r\n                subscribed:                     action.payload.guestSubscribed,\r\n            });\r\n        case actionType.TOGGLE_FAQ_STATE:\r\n            return Object.assign({},state,{faqState:Object.assign({},state.faqState,{\r\n                [action.payload.actionValue]:   !state.faqState[action.payload.actionValue],\r\n            })});\r\n        case actionType.RECEIVE_GUEST_MENU_OPTION:\r\n            return Object.assign({},state,{\r\n                guestMenuOption:                action.payload.guestMenuOption,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default guest;\r\n","import flareBook from \"./flare\";\r\n\r\nexport const loggableActionType = {\r\n    clickChannel:       \"CLICK_CHANNEL\",\r\n    clickHomeButton:    \"CLICK_HOME_BUTTON\",\r\n    clickGuestMenu:     \"CLICK_GUEST_MENU\",\r\n};\r\nexport const loggableActionValue = {\r\n    VISION_IDENTITY:            \"VISION_IDENTITY\",\r\n    VISION_INCOME_DISCLOSE:     \"VISION_INCOME_DISCLOSE\",\r\n    VISION_INCOME_VERIFY:       \"VISION_INCOME_VERIFY\",\r\n    VISION_INCOME_FRAUD:        \"VISION_INCOME_FRAUD\",\r\n    VISION_UBI_MONTHLY:         \"VISION_UBI_MONTHLY\",\r\n    VISION_TAX_HAVENS:          \"VISION_TAX_HAVENS\",\r\n    WEALTHY_GOLD:               \"WEALTHY_GOLD\",\r\n    WEALTHY_COMPANY:            \"WEALTHY_COMPANY\",\r\n    WEALTHY_WORLDWIDE:          \"WEALTHY_WORLDWIDE\",\r\n    WEALTHY_PUBLIC_INFO:        \"WEALTHY_PUBLIC_INFO\",\r\n    WEALTHY_BUSINESS_MODEL:     \"WEALTHY_BUSINESS_MODEL\",\r\n    SOCIETIES_THRUBI_WHY:       \"SOCIETIES_THRUBI_WHY\",\r\n    SOCIETIES_UBI_GOV:          \"SOCIETIES_UBI_GOV\",\r\n    SOCIETIES_MODELS_PUBLIC:    \"SOCIETIES_MODELS_PUBLIC\",\r\n    SOCIETIES_GOV_CONTRIBUTE:   \"SOCIETIES_GOV_CONTRIBUTE\",\r\n    SOCIETIES_MODELS_ABOUT:     \"SOCIETIES_MODELS_ABOUT\",\r\n    SOCIETIES_FLAT_UBI:         \"SOCIETIES_FLAT_UBI\",\r\n};\r\n\r\nconst userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nconst flags = {\r\n    deactivated:null,\r\n    emailVerified:null,\r\n    identityCertified:null,\r\n    incomeApproved:null,\r\n};\r\n\r\nObject.keys(flags).map(key => flags[key]=key);\r\n\r\nexport const userFlags = flags;\r\n\r\nexport const flagFlare = (newState,flag) => {\r\n    if (newState<0) {\r\n        switch (flag) {\r\n            case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_PENDING;\r\n            case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_PENDING;\r\n            case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_PENDING;\r\n            case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_PENDING;\r\n            default: return null;\r\n        }\r\n    } else {\r\n        if (newState) {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_ON;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_ON;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_ON;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_ON;\r\n                default: return null;\r\n            }\r\n        } else {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_OFF;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_OFF;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_OFF;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_OFF;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const activationState = {\r\n    activated:              0,\r\n    userRequestDeactivated: 1,\r\n};\r\n\r\n\r\nexport const detailName = {\r\n    all:                \"all\",                  //special detailName used to delete all the other details\r\n    name:               \"name\",\r\n    surname:            \"surname\",\r\n    email:              \"email\",\r\n    profilePicture:     \"profilePicture\",\r\n    document:           \"document\",\r\n    submittedDocument:  \"submittedDocument\",\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../config/user\";\r\n\r\nconst userInit = {\r\n    id:                 null,\r\n    role:               null,\r\n    deactivated:        null,\r\n    emailVerified:      null,\r\n    identityCertified:  null,\r\n    incomeApproved:     null,\r\n    name:               null,\r\n    surname:            null,\r\n    email:              null,\r\n    document:           null,\r\n    profilePicture:     null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate:  userOptions.optionLoginCreate.CREATE,\r\n    optionUserMenu:     userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory:  false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.RECEIVE_USER_FLAGS:\r\n            return Object.assign({},state,{\r\n                deactivated:            parseInt(action.payload.deactivated)        === state.deactivated       ? state.deactivated         : parseInt(action.payload.deactivated),\r\n                emailVerified:          parseInt(action.payload.emailVerified)      === state.emailVerified     ? state.emailVerified       : parseInt(action.payload.emailVerified),\r\n                identityCertified:      parseInt(action.payload.identityCertified)  === state.identityCertified ? state.identityCertified   : parseInt(action.payload.identityCertified),\r\n                incomeApproved:         parseInt(action.payload.incomeApproved)     === state.incomeApproved    ? state.incomeApproved      : parseInt(action.payload.incomeApproved),\r\n            });\r\n        case actionType.SET_USER_ACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            0,\r\n            });\r\n        case actionType.SET_USER_DEACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            1,\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name             ? action.payload.name           : userInit.name,\r\n                surname:                action.payload.surname          ? action.payload.surname        : userInit.surname,\r\n                email:                  action.payload.email            ? action.payload.email          : userInit.email,\r\n                document:               action.payload.document         ? action.payload.document       : userInit.document,\r\n                profilePicture:         action.payload.profilePicture   ? action.payload.profilePicture : userInit.profilePicture,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                document:               null,\r\n                profilePicture:         null,\r\n            });\r\n        case actionType.DELETE_PROFILE_PICTURE:\r\n            return Object.assign({},state,{\r\n                profilePicture:         null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    receiveChannel:             null,\r\n    channels: {\r\n        TWITTER:                0,\r\n        FACEBOOK:               0,\r\n        GOOGLE:                 0,\r\n        LINKEDIN:               0,\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        PAYPAL:                 0,\r\n        KEYBOARD:               0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleCode:             null,\r\n    twitterWindow:          null,\r\n    twitterListener:        null,\r\n    twitterRequestToken:    null,\r\n    twitterOAuthVerifier:   null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                TWITTER:                action.payload.TWITTER              ? action.payload.TWITTER                : state.channels.TWITTER,\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_RECEIVE_CHANNEL:\r\n            return Object.assign({},state,{\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          action.payload.twitterWindow,\r\n                twitterListener:        action.payload.twitterListener,\r\n            });\r\n        case actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          null,\r\n                twitterListener:        null,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_LOGIN:\r\n            return Object.assign({},state,{\r\n                twitterRequestToken:    action.payload.twitterRequestToken,\r\n                twitterOAuthVerifier:   action.payload.twitterOAuthVerifier,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations:    [],\r\n    exists:         null,\r\n    id:             null,\r\n    countryId:      null,\r\n    countryName:    null,\r\n    ccyId:          null,\r\n    ccyName:        null,\r\n    ccySymbol:      null,\r\n    filter:         null,\r\n    thrubiPriceSilver:      0,\r\n    thrubiPriceSilverNext:  0,\r\n    thrubiPriceGold:        1.5,\r\n    brake:                  0,\r\n    mincome:                0,\r\n    equality:               0,\r\n    warperMincome:          0,\r\n    warperEquality:         0,\r\n    thrubiFees:             0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                populations:            state.populations,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:            action.payload.populations,\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.population.populationId),\r\n                countryId:              action.payload.population.countryId,\r\n                countryName:            action.payload.population.countryName,\r\n                ccyId:                  action.payload.population.ccyId,\r\n                ccyName:                action.payload.population.ccyName,\r\n                ccySymbol:              action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver:      action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext:  action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                parseFloat(action.payload.stats.mincome),\r\n                equality:               parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                  parseFloat(action.payload.config.brake),\r\n                warperMincome:          parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:         parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                 action.payload.exists,\r\n            });\r\n        case actionType.RECEIVE_POPULATION_FILTER:\r\n            return Object.assign({},state,{\r\n                filter:                 action.payload.filter,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    isMember: false,\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                isMember:                   true,\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import guest from \"./client/guest\";\r\nimport user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    guest,\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsUsers = ({\r\n    nUser,\r\n}) => (\r\n    <p className=\"text-primary text-center small my-0 mr-2\">\r\n        Thrubi is a {/*{nUser}-strong */}worldwide community where Universal Basic Income supply meets demand.\r\n    </p>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nUser:      state.global.stats.nUser,\r\n});\r\n\r\nconst GlobalStatsUsers = connect(mapStateToProps,{})(_GlobalStatsUsers);\r\n\r\nexport default GlobalStatsUsers;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\n\r\nconst _Header = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-8 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left bg-light\"\r\n             style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                    backgroundSize: \"50%\",\r\n                    backgroundPosition: \"left\",\r\n                    backgroundRepeat:\"no-repeat\",\r\n                    backgroundBlendMode:\"color-dodge\"}}>\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\"\r\n                  style={{filter:\"brightness(90%)\"}}  />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><h4><b>Thrubi</b></h4></span>\r\n            <div className=\"d-none d-lg-block alignBottom\"><GlobalStatsUsers/></div>\r\n        </div>\r\n        <div className=\"col-lg-4 d-none d-lg-block float-right mr-0 my-2 text-right consoleFont\">\r\n            <div className=\"navbar-nav small alignBottom\">\r\n                {\r\n                    !ethNetwork || !ethAddress ? \"\" :\r\n                    <div>\r\n                        <span className=\"badge badge-warning d-none d-xl-inline\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                        <span className=\"badge badge-info d-inline\">{ethAddress}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Header = connect(mapStateToProps)(_Header);\r\n\r\nexport default Header;","import React,{Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiSilver,\r\n    thrubiSilverNext,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <div className=\"container-fluid p-0 m-0 small consoleFont\">\r\n        <div className=\"col-sm-12 container-fluid row p-0 m-0\">\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-right\">\r\n                <div className=\"col-sm-12 p-0\">1.00Ξ</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">1.00₮S</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮S</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮G</div> */ }\r\n            </div>\r\n            <div className=\"col-2 container-fluid p-0 m-0 text-center\">\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">=</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n            </div>\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-left\">\r\n                <div className=\"col-sm-12 p-0\">{exrate.toFixed(2)}{ccySymbol}</div>\r\n                    { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">{thrubiPriceSilver.toFixed(2)}{ccySymbol}</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next month)</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceGold.toFixed(2)}{ccySymbol}</div> */ }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:              state.client.population.ccySymbol,\r\n    exrate:                 state.global.market.exrate,\r\n    thrubiSilver:           state.client.member.thrubiSilver,\r\n    thrubiSilverNext:       state.client.member.thrubiSilverNext,\r\n    thrubiPriceSilver:      state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext:  state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold:        state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"small row ccyRowContainer\">\r\n        <span className=\"text-left ccyRowElement col-6\">{text}</span>\r\n        <span className={\"text-right ccyRowElement col-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"text-right ccyRowElement col-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelName = {\r\n        NOT_AVAILABLE:          \"N/A\",\r\n        BLOCKCHAIN_ETHEREUM:    \"BLOCKCHAIN_ETHEREUM\",\r\n        KEYBOARD:               \"KEYBOARD\",\r\n        FACEBOOK:               \"FACEBOOK\",\r\n        LINKEDIN:               \"LINKEDIN\",\r\n        GOOGLE:                 \"GOOGLE\",\r\n        PAYPAL:                 \"PAYPAL\",\r\n        TWITTER:                \"TWITTER\",\r\n};\r\n    \r\n    static channelColor(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"blockchain-ethereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"linkedin\";\r\n            case Channel.channelName.GOOGLE:                return \"google\";\r\n            case Channel.channelName.PAYPAL:                return \"paypal\";\r\n            case Channel.channelName.TWITTER:               return \"twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"BlockchainEthereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"Keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"Facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"LinkedIn\";\r\n            case Channel.channelName.GOOGLE:                return \"Google\";\r\n            case Channel.channelName.PAYPAL:                return \"PayPal\";\r\n            case Channel.channelName.TWITTER:               return \"Twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default:        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName(channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Use my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Use my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Using my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Using my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet to use it\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account to use it\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign in with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign in with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign in with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign in with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign in with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign in with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign up with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign up with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign up with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign up with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign up with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign up with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Enable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect a Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect a LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect a Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect a Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Disconnect my Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Disable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Disconnect my Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Disconnect my LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Disconnect my Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Disconnect my PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Disconnect my Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect another Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Update username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect another Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect another LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect another Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect another PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect another Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            default: return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React,{Component} from \"react\";\r\nimport Channel from \"../classes/Channel\";\r\n\r\nclass _ActionButton extends Component {\r\n    render() {\r\n        const {action,payload,text,buttonType,disabled=false,channel=false,noMargin=false} = this.props;\r\n        return (\r\n            <button disabled={disabled}\r\n                    onClick={(event) => {event.preventDefault(); action(payload); }}\r\n                    className={\"btn btn-sm btn-block rounded-0 \"+(noMargin?noMargin:(\"my-2 py-\"+(channel?\"2 \":\"2 \")))+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n                <div className={\"container-fluid row p-0 m-0\"+(noMargin.toString().includes(\"small\")?\" small\":\"\")+(channel?\"\":\" fullWidth\")}>\r\n                    <div className={(channel?\"\":\"fullWidth\")}>\r\n                        {\r\n                            !channel ? \"\" :\r\n                                <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                        }\r\n                        <div className={(channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(channel?\"left\":\"center\")}>{ text ? text : this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"../env/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType,headers} from \"../config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = \"0xeC6020cd56349ED60512c9985BdC5F3B7098315d\";\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e3130195\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xd7d9057eeb8d77c85b055fd0a383e2cbb00c462d8d90a53f7dea6493d376661d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x723ed1db\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xd8875079\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import request from \"request\";\r\nimport {uri,spotApi} from \"../config/market\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {INTERVAL_MARKET_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const startMarketWorker = () => async (dispatch,getState) => {\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(getState().client.population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n};\r\n\r\nexport const stopMarketWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n};\r\n","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER = 30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER = 1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER = 1000;\r\nexport const INTERVAL_USER_WORKER = 1000;\r\nexport const INTERVAL_MEMBER_WORKER = 1000;\r\nexport const INTERVAL_MARKET_WORKER = 1000;\r\nexport const INTERVAL_POPULATION_WORKER = 1000;","export const endpoint = {\r\n    GUEST_SUBSCRIBENEWSLETTER:              \"/guest/subscribeNewsletter\",\r\n    ACTIONS_LOG:                            \"/actions/log\",\r\n    ACTIONS_AUTH:                           \"/actions/auth\",\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_TOKEN_TWITTER:                     \"/auth/token/twitter\",\r\n    AUTH_CREATE_TWITTER:                    \"/auth/create/twitter\",\r\n    AUTH_LOGIN_TWITTER:                     \"/auth/login/twitter\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_DELETE:                          \"/member/delete\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    REF_FETCHREF:                           \"/ref/fetchRef\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_GETFLAGS:                          \"/user/getFlags\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_PROFILEPICTURE_SIGN:               \"/user/profilePicture/sign\",\r\n    USER_CERTIFY:                           \"/user/certify\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_SETRECEIVECHANNEL:           \"/userAccess/setReceiveChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    USERACCESS_ADD_TWITTER:                  \"/userAccess/add/twitter\",\r\n    USERACCESS_UPDATE_TWITTER:               \"/userAccess/update/twitter\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport {startPopulationWorker,stopPopulationWorker} from \"./population\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_MEMBER_WORKER} from \"../env/workers\";\r\n\r\nexport const createMember = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()     => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()     => dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+populationId,null)))\r\n        .then   (()     => dispatch(startMemberWorker()))\r\n        .then   (()     => dispatch(startPopulationWorker()))\r\n        .then   (()     => dispatch(startMarketWorker()))\r\n        .catch  (error  => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()     => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null)))\r\n        .then (packet   => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n        .catch(error    => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const removeMembership = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(stopPopulationWorker()))\r\n        .then (()       => dispatch(stopMemberWorker()))\r\n        .then (()       => dispatch(stopMarketWorker()))\r\n        .then (()       => dispatch(processRequest(requestType.POST,endpoint.MEMBER_DELETE+\"/\"+getState().client.population.id,null)))\r\n        .then (()       => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then (()       => dispatch({type:actionType.CLEAR_MEMBER,payload:{}}));\r\n};\r\n\r\nexport const startMemberWorker = () => async (dispatch,getState) => {\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchMember());\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n};\r\n\r\nexport const stopMemberWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n};\r\n\r\nexport const claim = () => async (dispatch,getState) => {\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId,null));\r\n};\r\n\r\nexport const advancedMode = optionAdvancedMode => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = optionViewHistory => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import {processRequest} from \"./server\";\r\nimport {startMemberWorker,stopMemberWorker} from \"./member\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_POPULATION_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    let populations;\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)))\r\n        .then   (p              => populations=p)\r\n        .then   (()             => populations.forEach(population => {if (population.isMember) {\r\n            dispatch(selectPopulation(population));\r\n            dispatch(startPopulationWorker());\r\n            dispatch(startMemberWorker());\r\n            dispatch(startMarketWorker());\r\n        }}))\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()         => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const selectPopulation = population => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    dispatch(stopMemberWorker());\r\n    dispatch(stopPopulationWorker());\r\n    dispatch(stopMarketWorker());\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const startPopulationWorker = () => async (dispatch,getState) => {\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchThrubiPriceSilver(getState().client.population.id));\r\n            dispatch(fetchThrubiPriceSilverNext(getState().client.population.id));\r\n            if (getState().client.user.auth) {\r\n                dispatch(fetchStats(getState().client.population.id));\r\n                dispatch(fetchConfig(getState().client.population.id));\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n};\r\n\r\nexport const stopPopulationWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n};\r\n\r\nconst fetchThrubiPriceSilver = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)))\r\n        .then   (stats          => dispatch({type:actionType.RECEIVE_STATS,payload:{stats}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)))\r\n        .then   (config         => dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changeFilter = filter => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATION_FILTER,payload:{filter}}));\r\n};\r\n","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email,picture.type(large)\",\r\n    apiScope:           \"email\",\r\n};","// --------\r\n// LinkedIn\r\n// --------\r\nconst linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// ------\r\n// Google\r\n// ------\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// -------\r\n// Twitter\r\n// -------\r\nexport const twitterAuthUri =    twitterRequestToken =>\r\n    \"https://twitter.com/oauth/authenticate?oauth_token=\"+twitterRequestToken;\r\n\r\nexport const twitterWindowName = \"Login to Thrubi using your Twitter account\";\r\nexport const twitterWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\nlet envTwitterRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://www.thrubi.com\";\r\n    envGoogleRedirectUri      = \"https://www.thrubi.com\";\r\n    envTwitterRedirectUri     = \"https://www.thrubi.com\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n    envTwitterRedirectUri     = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n\r\nexport const twitterRedirectUri     = envTwitterRedirectUri; // not used","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails,activateUserWorker,stopUserWorker} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"../config/redirect\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {facebook} from \"../config/facebook\";\r\nimport {\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams,\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    twitterAuthUri,\r\n    twitterWindowName,\r\n    twitterWindowParams,\r\n} from \"../config/auth\";\r\nimport flareBook from \"../config/flare\";\r\nimport userOptions from \"../config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"../env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"../env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = payload => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(stopUserWorker()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = intervalTime => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (error        => {console.error(error);dispatch(logout({autoLogin:false}));});\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+\"/\"+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const getPayChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setPayChannel = payChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (payChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\nexport const getReceiveChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setReceiveChannel = receiveChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (receiveChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[receiveChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETRECEIVECHANNEL,{receiveChannel})))\r\n        .then   (newReceiveChannel=> dispatch({type:actionType.RECEIVE_RECEIVE_CHANNEL,payload:{receiveChannel:newReceiveChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = loginData => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(activateUserWorker()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethNetwork = getState().client.userAccess.ethNetwork;\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!ethNetwork || !ethAddress) throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    let fbDetails = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise(resolve => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result => resolve(result)));}))\r\n        .then   (d                => fbDetails={name:d.first_name,surname:d.last_name,email:d.email,profilePicture:d.picture.data.url})\r\n        .then   (()               => dispatch(storeDetails(fbDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processTwitterLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let twitterListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_TWITTER_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {twitterListener=getState().client.userAccess.twitterListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => getState().client.userAccess.twitterWindow)\r\n        .then   (twitterWindow     => {twitterWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupTwitterLogin = () => async (dispatch,getState) => {\r\n    let twitterRequestToken = null;\r\n    let twitterWindow = null;\r\n    let twitterListener = null;\r\n    let twitterInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_TOKEN_TWITTER,{})))\r\n        .then   (token            => twitterRequestToken=token.requestToken)\r\n        .then   (()               => {twitterWindow = getState().client.userAccess.twitterWindow;})\r\n        .then   (()               => ((twitterWindow===null)||(twitterWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) twitterWindow = window.open(twitterAuthUri(twitterRequestToken),twitterWindowName,twitterWindowParams);})\r\n        .then   (()               => twitterWindow.focus())\r\n        .then   (()               => {twitterInterval = setInterval(() => {if (twitterWindow.closed) {waitingHandleResolve(); clearInterval(twitterInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {twitterListener = event => dispatch(processTwitterLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER,payload:{twitterWindow,twitterListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({twitterRequestToken:getState().client.userAccess.twitterRequestToken,twitterOAuthVerifier:getState().client.userAccess.twitterOAuthVerifier}));\r\n};\r\n\r\nexport const createTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_TWITTER,tLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_TWITTER,tLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_TWITTER,tLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_TWITTER,tLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({\r\n            origin:                 EVENT_DATA_ORIGIN_THRUBI,\r\n            code:                   pJson.code,\r\n            state:                  pJson.state,\r\n            twitterRequestToken:    pJson.oauth_token,\r\n            twitterOAuthVerifier:   pJson.oauth_verifier,\r\n        }))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {ethEventType} from \"../config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport flareBook from \"../config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"../env/blockchain_ethereum\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER, INTERVAL_ETH_NETWORK_WORKER} from \"../env/workers\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:false})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = transformEth => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        try {\r\n            transformContract(userId,populationId,ethAddress)\r\n                .send({from:ethAddress,value:transformEth*1e18})\r\n                .once(ethEventType.confirmation,() => {\r\n                        // Thrubi will automatically process the transform via its workers on the backend\r\n                        resolve();\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n","export const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import axios from \"axios\";\r\nimport flareBook from \"../config/flare\";\r\n\r\nexport const uploadS3 = (signedRequest,picture) => async (dispatch,getState) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":     picture.type,\r\n        },\r\n    };\r\n    return Promise.resolve()\r\n        .then (()       => axios.put(signedRequest,picture,config))\r\n        .catch(e       => {throw flareBook.errorFlare.S3_UPLOAD_ERROR;});\r\n};","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {activationState,detailName,flagFlare,userFlags} from \"../config/user\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_USER_WORKER} from \"../env/workers\";\r\nimport {AMAZON_S3_MAX_PICTURE_SIZE,MIME_TYPE_JPEG,MIME_TYPE_PNG} from \"../config/s3\";\r\nimport {uploadS3} from \"./s3\";\r\n\r\nexport const switchOptionUserMenu = optionUserMenu => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,{userDetails:{[detailName.all]:true}})))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const deleteProfilePicture = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,{userDetails:{[detailName.profilePicture]:true}})))\r\n        .then   (()               => dispatch({type:actionType.DELETE_PROFILE_PICTURE,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const uploadProfilePicture = fileRef => async (dispatch,getState) => {\r\n    let awsPacket;\r\n    let picture=fileRef.files[0];\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!(picture.type===MIME_TYPE_JPEG||picture.type===MIME_TYPE_PNG)) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => {if (picture.size>AMAZON_S3_MAX_PICTURE_SIZE) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_PROFILEPICTURE_SIGN,{fileName:picture.name,fileType:picture.type,fileSize:picture.size})))\r\n        .then   (packet           => awsPacket=packet)\r\n        .then   (()               => dispatch(uploadS3(awsPacket.signedPutUri,picture)))\r\n        .then   (()               => dispatch(storeDetails({[detailName.profilePicture]:awsPacket.unsignedGetUri},{overwrite:true})))\r\n        .finally(()               => fileRef.value=null);\r\n};\r\n\r\nexport const uploadDocument = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(storeDetails({[detailName.submittedDocument]:true},{overwrite:true})))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_CERTIFY,{})));\r\n};\r\n\r\nconst flareUserFlags = flags => async (dispatch,getState) => {\r\n    Object.keys(userFlags).map(async flag => {\r\n            const currentFlag = getState().client.user[flag];\r\n            const incomingFlag = flags[flag];\r\n            if ((currentFlag!==null)&&(((currentFlag===0)^(incomingFlag===0))||(Math.sign(currentFlag)>0)^(Math.sign(incomingFlag)>0)))\r\n                return await dispatch(emitFlare(flareBook.flareType.INFO,flagFlare(incomingFlag,flag)));\r\n        }\r\n    );\r\n};\r\n\r\nexport const activateUserWorker = () => async (dispatch,getState) => {\r\n    let userWorker = setInterval((() => {\r\n        let userFlags;\r\n        const activity = async () => {\r\n            await Promise.resolve()\r\n                .then (()         => dispatch(processRequest(requestType.GET,endpoint.USER_GETFLAGS,null)))\r\n                .then (flags      => userFlags=flags)\r\n                .then (()         => dispatch(flareUserFlags(userFlags)))\r\n                .then (()         => dispatch({type:actionType.RECEIVE_USER_FLAGS,payload:userFlags}))\r\n                .catch(error      => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_FLAGS)));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_USER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_USER_WORKER,payload:{userWorker}});\r\n};\r\n\r\nexport const stopUserWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.user);\r\n    dispatch({type:actionType.STOP_USER_WORKER,payload:{}});\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_ACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_DEACTIVATE,{activationState:activationState.userRequestDeactivated})))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_DEACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const declareIncome = mDeclared => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then  (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}))\r\n        .then  (()              => dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null)))\r\n        .catch (error           => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/user\";\r\n\r\nclass _MemberDeclareIncome extends Component {\r\n    render() {\r\n        const {mCurrent,ccySymbol,declareIncomeBusy,incomeApproved} = this.props;\r\n        const {declareIncome} = this.props;\r\n        let mDeclared;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <_CcyRow text=\"Declared income\" bold={false} value={mCurrent} ccySymbol={ccySymbol}/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 small py-2\">\r\n                                    Your income of {mCurrent} {ccySymbol} is currently:&nbsp;\r\n                                    <span className={\"badge \"+(incomeApproved>0?\"badge-info\":\"badge-danger\")}>{incomeApproved>0?\"Officially approved\":(incomeApproved<0?\"Pending approval\":\"Not approved\")}</span>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"Busy processing income declaration\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"row\">\r\n                                        <input ref={input => mDeclared = input}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 m-0\"\r\n                                               placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-0 m-0\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)}\r\n                                                   buttonType=\"btn-primary m-0\"/>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    mCurrent:           state.client.member.mCurrent,\r\n    incomeApproved:     state.client.user.incomeApproved,\r\n    declareIncomeBusy:  state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst MemberDeclareIncome = connect(mapStateToProps,{declareIncome})(_MemberDeclareIncome);\r\n\r\nexport default MemberDeclareIncome;","import React,{Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberBar extends Component {\r\n    render() {\r\n        const {countryName,ccyId,busy,loggedIn,populationId,identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n\r\n        return (\r\n            <div className=\"container-fluid row p-0 m-0 text-primary text-center mt-3\">\r\n                {\r\n                    busy ? \"Viewport loading...\" :\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12 p-2 m-0 bg-primary text-light text-center mb-3\">\r\n                                    <span className=\"mt-3\"><b>{countryName}</b>&nbsp;<small>{ccyId}&nbsp;<i>pid#{populationId}</i></small></span>\r\n                                    <button className=\"close memberPaddingX text-light\" type=\"button\" onClick={() => removeMembership()} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                </div>\r\n                                {\r\n                                    identityCertified<=0\r\n                                        ?\r\n                                            <div className=\"col-sm-12\">\r\n                                                <MemberInfo />\r\n                                            </div>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <MemberInfo />\r\n                                                </div>\r\n                                                <MemberDeclareIncome />\r\n                                            </Fragment>\r\n                                }\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryName:        state.client.population.countryName,\r\n    ccyId:              state.client.population.ccyId,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    busy:               state.session.busy.component.viewport,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{removeMembership})(_MemberBar);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _RadioButtons = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _RadioButtons;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={input => refs.username = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={input => refs.password = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","import {processRequest} from \"./server\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const logAction = (actionType,actionValue) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => dispatch(processRequest(requestType.POST,endpoint.ACTIONS_LOG,{actionType,actionValue})))\r\n};\r\n\r\nexport const logAuthAction = (actionType,actionValue) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => dispatch(processRequest(requestType.POST,endpoint.ACTIONS_AUTH,{actionType,actionValue})))\r\n};","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport {logAction} from \"../actions/log\";\r\nimport userOptions,{loggableActionType} from \"../config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(actionType,channelName) {\r\n        const {logAction} = this.props;\r\n\r\n        return () => {\r\n            if (actionType===userOptions.optionLoginCreate.LOGIN||actionType===userOptions.optionLoginCreate.CREATE) {\r\n                logAction(loggableActionType.clickChannel,actionType+\"_\"+channelName);\r\n            }\r\n            this.props[actionType.toLowerCase()+Channel.channelAuthFunctionName(channelName)]();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,receiveChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,setReceiveChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy?\"Auth module busy...\":\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode===null?\"\":\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase()+\"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode!==null)||(loggedIn)?\"\":\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN?\"login\":\"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\"+(optionLoginCreate===userOptions.optionLoginCreate.LOGIN?\"outline-\":\"\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"Create a new Thrubi account\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        [\r\n                                                            {message:\"My payment method:\",          channel:payChannel,     setter:setPayChannel,},\r\n                                                            {message:\"My inbound payment method:\",  channel:receiveChannel, setter:setReceiveChannel,}\r\n                                                        ].map(o =>\r\n                                                            <div className=\"my-4\">\r\n                                                                {o.message}\r\n                                                                <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                           activeFilter={o.channel}\r\n                                                                           checkedFilter={o.channel}\r\n                                                                           action={o.setter}\r\n                                                                           elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                                if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                    key:(key===o.channel?Channel.channelName.NOT_AVAILABLE:key),\r\n                                                                                    channel:key,\r\n                                                                                    color:\"btn-\"+(key===o.channel?\"\":\"outline-\")+Channel.channelColor(key),\r\n                                                                                    disabledFilter:(key===o.channel),\r\n                                                                                    text:Channel.channelUserFriendlyName(key,(key===o.channel?\"USING\":(Channel.channelIsOpen(channels[key])?\"USE\":\"LINK\"))),\r\n                                                                                }); else return null;\r\n                                                                           }).filter(element=>element!==null)}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: key => this.authFunction(\"UPDATE\",key),\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: key => this.authFunction(\"ADD\",key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: key => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key,actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    receiveChannel:     state.client.userAccess.receiveChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{logAction,switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {toggleFaq} from \"../actions/guest\";\r\nimport {loggableActionValue} from \"../config/user\";\r\n\r\nclass _GuestFaq extends Component {\r\n    visionText = () => (\r\n        <Fragment>\r\n            <ul>\r\n                <li>Become a Thrubi member</li>\r\n                <li>Certify your identity</li>\r\n                <li>Declare and verify your income</li>\r\n                <li>Get your <b>Thrubi Blue</b> level assigned (the lower your income, the higher your level)</li>\r\n                <li>Receive your basic income</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n    wealthyText = () => (\r\n        <Fragment>\r\n            <ul>\r\n                <li>Become a Thrubi member</li>\r\n                <li>Certify your identity</li>\r\n                <li>Declare and verify your income</li>\r\n                <li>Get your <b>Thrubi Silver</b> level assigned (the higher your income, the higher your level)</li>\r\n                <li>Purchase <b>Thrubi Gold</b></li>\r\n                <li>The purchase proceedings will fund basic income in your country</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n    societiesText = () => (\r\n        <Fragment>\r\n            Thrubi is powered by:\r\n            <ul>\r\n                <li>In-house social models</li>\r\n                <li>Public <a\r\n                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    render() {\r\n        const {faqState} = this.props;\r\n        const {toggleFaq} = this.props;\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    {\r\n                        [\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_IDENTITY,\r\n                                        buttonText:\"How to certify my identity?\",\r\n                                        text:\"We are considering various partners for identity certification, from \" +\r\n                                             \"official government agencies to country-agnostic services such as Veriff.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_DISCLOSE,\r\n                                        buttonText:\"Should I disclose my income?\",\r\n                                        text:\"Yes, Thrubi needs to be informed of your earnings in order to calculate \" +\r\n                                             \"how to distribute basic income to you and to others in your country.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_VERIFY,\r\n                                        buttonText:\"How will Thrubi verify my income?\",\r\n                                        text:\"We are working to collaborate with government entities in order to gather \" +\r\n                                             \"current and trustworthy information regarding your income.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_FRAUD,\r\n                                        buttonText:\"What about those who declare a false income?\",\r\n                                        text:\"Our efforts will go towards reducing fraud as much as conceivable. Thrubi \" +\r\n                                             \"will work to cover the unavoidable remaining small percentage of fraudulent \" +\r\n                                             \"income declarations by an appropriate insurance policy. It should cover basic \" +\r\n                                             \"income unfairly attributed to fraudulent declarations and taken away from \" +\r\n                                             \"legitimate recipients. Those responsible would be banned from receiving \" +\r\n                                             \"basic income in the future.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_TAX_HAVENS,\r\n                                        buttonText:\"How does Thrubi deal with undeclared offshore incomes?\",\r\n                                        text:\"Tax havens are an ongoing issue for the realization of a fair universal basic \" +\r\n                                             \"income and will be until countries agree on common rules for income declaration \" +\r\n                                             \"and transparency on financial matters. It is still important to implement \" +\r\n                                             \"basic income plans to the extent of our capabilities, while governments work \" +\r\n                                             \"together to define more efficient schemes of financial cooperation.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_UBI_MONTHLY,\r\n                                        buttonText:\"Will I receive basic income every month?\",\r\n                                        text:\"No, initially you will receive basic income only whenever wealthy individuals \" +\r\n                                             \"in your country actively participate by transferring a sum of money. The \" +\r\n                                             \"periodicity of basic income payments could change in the future. We will keep \" +\r\n                                             \"you informed regarding that.\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiBlue\",    image:\"/jpg/crowd.jpg\",     bg:\"everybody\", color:\"primary\",     header:\"Vision\",                text:this.visionText(),},\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_GOLD,\r\n                                        buttonText:\"What about my Thrubi Gold?\",\r\n                                        text:\"At the moment, Thrubi Gold acquired in your country is only representative \" +\r\n                                             \"of the extent to which you have contributed towards basic income. While in the future \" +\r\n                                             \"it might become possible to freely trade Thrubi Gold, it is at the moment \" +\r\n                                             \"non-transferable. We also intend to gauge interest by government agencies \" +\r\n                                             \"to accept Thrubi Gold as a means to cover your tax duties, given that by purchasing \" +\r\n                                             \"Thrubi Gold, you will have directly contributed to growth in your society.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_COMPANY,\r\n                                        buttonText:\"I represent a company. Can I contribute?\",\r\n                                        text:\"Please get in touch at info@thrubi.com \\u2014 while at the moment Thrubi \" +\r\n                                             \"algorithms only support individuals and tax units (couples or families) \" +\r\n                                             \"that declare income together, our long-term plan is to include companies in the \" +\r\n                                             \"picture. We would be delighted to hear your intentions.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_WORLDWIDE,\r\n                                        buttonText:\"Benefiting just my country seems too restrictive. What about a worldwide basic income?\",\r\n                                        text:\"The long-term plans for Thrubi include extending our basic income scheme to the whole \" +\r\n                                             \"world's population. We have income distribution data to work towards that goal, already. \" +\r\n                                             \"Before it can become a reality, a few technicalities need to be covered first, such as \" +\r\n                                             \"ensuring universal identity certification and stronger income verification procedures.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_PUBLIC_INFO,\r\n                                        buttonText:\"I would like people to know that I contributed to Thrubi. Will my payments be made public?\",\r\n                                        text:\"Yes, all Thrubi Gold purchase proceedings go towards basic income and will be publicly \" +\r\n                                             \"available, unless you explicitly have us not reveal that information.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_BUSINESS_MODEL,\r\n                                        buttonText:\"How does Thrubi make money?\",\r\n                                        text:\"We are currently working on our business model. The current possibilities are: 1) advertisements, \" +\r\n                                             \"2) a small fee on Thrubi Gold purchases, 3) donations. Let us know your suggestions: info@thrubi.com\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiSilver\",  image:\"/jpg/hanauer.jpg\",   bg:\"wealthy\",   color:\"secondary\",   header:\"Wealthy individuals\",   text:this.wealthyText(),},\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_UBI_GOV,\r\n                                        buttonText:\"Shouldn't universal basic income be the government's responsibility?\",\r\n                                        text:\"Probably. However, it seems a target that is hard to agree upon as a government. That leaves \" +\r\n                                             \"the wealthy who protect their own interests able to do so, and other wealthy individuals \" +\r\n                                             \"advocating basic income and even willing to actively pay towards it unable to do so, \" +\r\n                                             \"for lack of a suitable platform, and left to blame the government. Enter Thrubi.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_THRUBI_WHY,\r\n                                        buttonText:\"What is the main goal for Thrubi?\",\r\n                                        text:\"Thrubi aims to create a global community where UBI can be achieved according to shared \" +\r\n                                             \"principles and rational mathematical models. The desired result is a fair, healthy society \" +\r\n                                             \"that people love being an active part of.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_MODELS_PUBLIC,\r\n                                        buttonText:\"Are the in-house models publicly available?\",\r\n                                        text:\"The in-house models underlying all basic income calculations will be made open source \" +\r\n                                             \"in the future. For the time being, they are not public. The rationale behind that decision \" +\r\n                                             \"is we have an edge and would like to keep that advantage to gain traction around the \" +\r\n                                             \"intended goal for Thrubi, which is to achieve positive social change around financial \" +\r\n                                             \"fairness in an evolving world.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_GOV_CONTRIBUTE,\r\n                                        buttonText:\"I represent a government. How can we implement Thrubi in our country?\",\r\n                                        text:\"Please get in touch at info@thrubi.com \\u2014 The starting point would be to provide \" +\r\n                                             \"a proven way of identifying your citizens and their incomes. It would be desirable for you \" +\r\n                                             \"to start thinking whether your would accept Thrubi Gold to fulfill tax duties in your country.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_FLAT_UBI,\r\n                                        buttonText:\"Prices will rise, so basic income is useless. Right?\",\r\n                                        text:\"Wrong, you are probably assuming that everybody should be paid a flat UBI amount. That is not sustainable. \" +\r\n                                             \"What needs to be addressed in any basic income scheme is not the basic income itself, as a number, but rather \" +\r\n                                             \"a country's income distribution. Given the latter, it is possible to calculate a target income \" +\r\n                                             \"distribution whereby anyone below a (variable) income threshold gets a basic income, higher for \" +\r\n                                             \"those with lower earnings. By periodically recalculating the target distribution and the individual \" +\r\n                                             \"basic incomes, it is possible to create a scheme that does not barely provide a fixed amount of money \" +\r\n                                             \"with an inevitably decreasing purchasing power, but rather connects all individuals in an overarching social \" +\r\n                                             \"scheme. Thrubi does exactly that with its inner models. By so doing, a society keeps its selfish incentives to \" +\r\n                                             \"innovate \\u2014 its citizens are still rewarded by much higher incomes for higher contributions \\u2014 but \" +\r\n                                             \"ensures its members that they will grow together. As an additional benefit, the extreme inequalities \" +\r\n                                             \"that put institutions at risk are smoothed out.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_MODELS_ABOUT,\r\n                                        buttonText:\"I am still curious. How do the social models used to determine basic income work exactly?\",\r\n                                        text:\"Here is a short summary, but please also read the answer to the question \\\"Prices will rise...\\\" if you \" +\r\n                                             \"haven't already. Capitalism has an inherent benefit \\u2014 selfish incentives to innovate, produce \" +\r\n                                             \"better goods and provide better services go at the heart of human nature \\u2014 and an inherent dangerous \" +\r\n                                             \"mechanics \\u2014 investment principles, as opposed to consumption, if applied at scale have the ability to \" +\r\n                                             \"starve the entire system, as is seen during financial crises. Without going into the important moral \" +\r\n                                             \"considerations of workers' rights and the consequences of owning entire sectors of a society, from the \" +\r\n                                             \"bare point of view of efficiency, it is not convenient to either the poor or the rich to have an economy \" +\r\n                                             \"swinging between periods of over-exploitation and periods of stagnation. Thrubi aims with its inner models \" +\r\n                                             \"to preserve the benefit of growth while inhibiting the dangerous mechanics of starvation. It recreates an \" +\r\n                                             \"optimal distribution that allows the poor to live a healthy life and contribute to a healthy society and \" +\r\n                                             \"the rich to keep on thriving.\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiGold\",    image:\"/jpg/futuristic.jpg\",bg:\"societies\", color:\"success\",     header:\"Thriving societies\",    text:this.societiesText(),},\r\n                        ].map(e => (\r\n                                <div className=\"col-xl-4 p-0 m-0 navbar-light\">\r\n                                    <h2 className={\"mr-0 mr-lg-3 mb-0 my-lg-0 text-center text-lg-center px-4 py-3 text-light bg-\"+e.color}\r\n                                        style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                                            backgroundSize:\"contain\",\r\n                                            backgroundPosition:\"left\",\r\n                                            backgroundRepeat:\"no-repeat\",\r\n                                            backgroundBlendMode:\"luminosity\"}}>{e.header}</h2>\r\n                                    <div className={\"mr-0 mr-lg-3 mb-4 my-lg-0 \"+e.style}>\r\n                                        <div style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+e.image,backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}}\r\n                                             className={\"border-0 container-fluid m-0 \"+e.bg+\" p-4 text-\"+e.color}>\r\n                                            <p>{e.text}</p>\r\n                                            {e.actions.map(a =>\r\n                                                <Fragment>\r\n                                                    <_ActionButton text={a.buttonText} buttonType={\"my-4 btn-outline-\"+e.color} action={null} />\r\n                                                    {\r\n                                                        !faqState[a.actionValue] ? \"\":\r\n                                                            <div className=\"p-0\">{a.text}</div>\r\n                                                    }\r\n                                                </Fragment>)}\r\n                                        </div>\r\n                                        <div className={\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-\"+e.color}>\r\n                                            <p>{e.text}</p>\r\n                                            {e.actions.map(a =>\r\n                                                <Fragment>\r\n                                                    <_ActionButton text={a.buttonText} buttonType={\"my-4 btn-outline-\"+e.color} action={() => {toggleFaq(a.actionValue)}} />\r\n                                                    {\r\n                                                        !faqState[a.actionValue] ? \"\":\r\n                                                            <div className=\"p-0\">{a.text}</div>\r\n                                                    }\r\n                                                </Fragment>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    faqState:   state.client.guest.faqState,\r\n});\r\n\r\nconst GuestFaq = connect(mapStateToProps,{toggleFaq})(_GuestFaq);\r\n\r\nexport default GuestFaq;","import {processRequest} from \"./server\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {logAction} from \"../actions/log\";\r\nimport {loggableActionType} from \"../config/user\";\r\n\r\nexport const chooseGuestMenu = guestMenuOption => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => dispatch(logAction(loggableActionType.clickGuestMenu,guestMenuOption)))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GUEST_MENU_OPTION,payload:{guestMenuOption}}));\r\n};\r\n\r\nexport const toggleFaq = actionValue => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => {if (!getState().client.guest.faqState[actionValue]) dispatch(logAction(loggableActionType.clickHomeButton,actionValue));})\r\n        .then   (()               => dispatch({type:actionType.TOGGLE_FAQ_STATE,payload:{actionValue}}))\r\n        .catch  (()               => {throw flareBook.infoFlare.CANNOT_TOGGLE_FAQ_STATE;});\r\n};\r\n\r\nexport const guestSubscribeNewsletter = guestEmail => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.GUEST_SUBSCRIBENEWSLETTER,{guestEmail})))\r\n        .then   (()               => dispatch({type:actionType.SET_GUEST_SUBSCRIBED,payload:{guestSubscribed:true}}))\r\n        .catch  (()               => {throw flareBook.infoFlare.CANNOT_SUBSCRIBE_NEWSLETTER;});\r\n};","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {d3plot} from \"../actions/chart\";\r\n\r\nclass _Chart extends Component {\r\n    // Chart objects\r\n    svgChart;\r\n    // -------------\r\n\r\n    componentDidMount() {\r\n        const {d3plot} = this.props;\r\n        d3plot(this.svgChart);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid m-0\">\r\n                <div className=\"row mr-0\">\r\n                    <div className=\"col-lg-12\">\r\n                        <svg width=\"700\" height=\"500\" ref={input => this.svgChart = input} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    //refRaw:   state.client.ref.raw,\r\n});\r\n\r\nconst Chart = connect(mapStateToProps,{d3plot})(_Chart);\r\n\r\nexport default Chart;","import {processRequest} from \"./server\";\r\nimport {select} from \"d3-selection\";\r\nimport {scaleLinear,scaleLog} from \"d3-scale\";\r\nimport {min,max} from \"d3-array\";\r\nimport {format} from \"d3-format\";\r\nimport {axisLeft,axisBottom,axisRight,axisTop} from \"d3-axis\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const d3plot = svgChart => async (dispatch,getState) => {\r\n    const bootstrapColors = {\r\n        //these are similar to Bootstrap, but not the same, until I find a way to get them directly from Bootstrap\r\n        thrubiBlueChart:    \"#3d5e73\",\r\n        thrubiSilverChart:  \"#cccccc\",\r\n        thrubiGoldChart:    \"#947a25\",\r\n    };\r\n\r\n    const ref = await dispatch(processRequest(requestType.GET,endpoint.REF_FETCHREF,{}));\r\n\r\n    const xAxisLabel = \"Income in $\";\r\n    const yAxisLabel = \"# of individuals earning a given income (or higher)\";\r\n    const circleRadius = 2;\r\n\r\n    const svg = select(svgChart);\r\n    const width = +svg.attr(\"width\");\r\n    const height = +svg.attr(\"height\");\r\n\r\n    const margin = {top:15,right:25,bottom:45,left:65};\r\n    const innerWidth = width-margin.left-margin.right;\r\n    const innerHeight = height-margin.top-margin.bottom;\r\n\r\n    const xValue = d => d.m;\r\n    const minxValue = +min(ref,xValue);\r\n    const maxxValue = +max(ref,xValue);\r\n    const xScale = scaleLinear()\r\n        .domain([minxValue,maxxValue])\r\n        .rangeRound([margin.left,margin.left+innerWidth])\r\n        .nice();\r\n\r\n    const yValue = d => d.n;\r\n    const minyValue = +min(ref,yValue);\r\n    const maxyValue = +max(ref,yValue);\r\n    const yScale = scaleLog()\r\n        .domain([minyValue,maxyValue])\r\n        .rangeRound([margin.top+innerHeight,margin.top])\r\n        .nice();\r\n\r\n    // main viewport\r\n    const g = svg\r\n        .append(\"g\")\r\n        .attr(\"width\",innerWidth)\r\n        .attr(\"height\",innerHeight);\r\n\r\n    // x axis\r\n    const xAxis = axisBottom(xScale)\r\n        .tickSize(innerHeight)\r\n        .tickPadding(10);\r\n    // x axis labels\r\n    const xAxisG = g\r\n        .append(\"g\")\r\n        .call(xAxis)\r\n        .attr(\"transform\",`translate(0,${margin.top})`)\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart); // x axis numbers\r\n    xAxisG.select(\".domain\")\r\n        .remove();\r\n    xAxisG.selectAll(\"line\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiSilverChart); // x axis vertical lines\r\n    xAxisG.append(\"text\")\r\n        .attr(\"class\",\"axis-label\")\r\n        .attr(\"y\",innerHeight+margin.top+15)\r\n        .attr(\"x\",margin.left+(innerWidth/2))\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart) // x axis label\r\n        .text(xAxisLabel);\r\n\r\n    // y axis\r\n    const yAxis = axisLeft(yScale)\r\n        .ticks(5)\r\n        .tickFormat(d => format(\".1s\")(d).replace(\"G\",\"B\"))\r\n        .tickSize(innerWidth)\r\n        .tickPadding(5);\r\n    // y axis labels\r\n    const yAxisG = g\r\n        .append(\"g\")\r\n        .call(yAxis)\r\n        .attr(\"transform\",`translate(${innerWidth+margin.left},0)`)\r\n        .attr(\"class\",\"tick\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart); // y axis numbers\r\n    yAxisG.selectAll(\".domain\")\r\n        .remove();\r\n    yAxisG.selectAll(\"line\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiSilverChart); // y axis horizontal lines\r\n    yAxisG.append(\"text\")\r\n        .attr(\"class\",\"axis-label\")\r\n        .attr(\"y\",-(innerWidth+margin.left-15))\r\n        .attr(\"x\",-innerHeight/2)\r\n        .attr(\"text-anchor\",\"middle\")\r\n        .attr(\"transform\",`rotate(-90)`)\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart) // y axis label\r\n        .text(yAxisLabel);\r\n\r\n    // scatter data\r\n    g.selectAll(\"circle\")\r\n        .data(ref)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"cy\",d => yScale(yValue(d)))\r\n        .attr(\"cx\",d => xScale(xValue(d)))\r\n        .attr(\"r\",circleRadius)\r\n        .attr(\"fill\",bootstrapColors.thrubiGoldChart)\r\n        .attr(\"stroke\",bootstrapColors.thrubiGoldChart)\r\n        .on(\"mouseover\",handleMouseOver)\r\n        .on(\"mouseout\",handleMouseOut); // data points: dots\r\n\r\n    // Create Event Handlers for mouse\r\n    function handleMouseOver(d,i) {  // Add interactivity\r\n        // Use D3 to select element, change color and size\r\n        select(this).attr(\"r\",circleRadius*2);\r\n\r\n        // Specify where to put label of text\r\n        select(this)\r\n            .append(\"text\")\r\n            .attr(\"id\",\"t\"+d.x+\"-\"+d.y+\"-\"+i)  // Create an id for text so we can select it later for removing on mouseout\r\n            .attr(\"x\",f => (xScale(d.x)-30))\r\n            .attr(\"y\",f => (yScale(d.y)-15))\r\n            .text(\"Label: \");  // Value of the text\r\n    }\r\n\r\n    function handleMouseOut(d,i) {\r\n        // Use D3 to select element, change color back to normal\r\n        select(this)\r\n            .attr(\"r\",circleRadius);\r\n\r\n        // Select text by id and then remove\r\n        select(\"#t\"+d.x+\"-\"+d.y+\"-\"+i)\r\n            .remove();  // Remove text location\r\n    }\r\n};\r\n","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProfilePicture,uploadProfilePicture} from \"../actions/user\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _UserProfilePicture extends Component {\r\n    render() {\r\n        let refs = {localProfilePicture:null};\r\n        const {role,deactivated,profilePicture} = this.props;\r\n        const {deleteProfilePicture,uploadProfilePicture} = this.props;\r\n\r\n        return (\r\n            <div className=\"mb-2\">\r\n                <label for=\"profilePictureInput\" className=\"m-0 p-0\">\r\n                    <img className=\"mt-3 rounded-circle\" alt=\"profilePicture\" height=\"128\" width=\"128\"\r\n                         src={profilePicture?profilePicture:(process.env.PUBLIC_URL+\"/icons/\"+role+deactivated+\".png\")}/>\r\n                </label>\r\n                <input id=\"profilePictureInput\" className=\"d-none\" ref={input => refs.localProfilePicture = input}\r\n                       type=\"file\" onChange={() => uploadProfilePicture(refs.localProfilePicture)} />\r\n                {\r\n                    profilePicture\r\n                        ?<_ActionButton noMargin=\"small m-0 mt-2 p-0\" buttonType={\"nav-link border-0 text-secondary\"} action={deleteProfilePicture} text=\"Delete my profile picture\" />\r\n                        :<div className=\"small text-secondary m-0 p-0\">Click on the user icon to upload a profile picture</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role:               state.client.user.role          ? \"admin\"        : \"user\",\r\n    deactivated:        state.client.user.deactivated   ? \"_deactivated\" : \"\",\r\n    profilePicture:     state.client.user.profilePicture,\r\n});\r\n\r\nconst UserProfilePicture = connect(mapStateToProps,{deleteProfilePicture,uploadProfilePicture})(_UserProfilePicture);\r\n\r\nexport default UserProfilePicture;","export const AMAZON_S3_MAX_PICTURE_SIZE=500000;\r\nexport const MIME_TYPE_JPEG=\"image/jpeg\";\r\nexport const MIME_TYPE_PNG=\"image/png\";","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserDetails extends Component {\r\n    render() {\r\n        const {id,name,surname,email,document,deactivated,emailVerified,identityCertified} = this.props;\r\n        return (\r\n            <div className=\"text-center mb-2\">\r\n                <div className=\"text-primary d-inline-block p-0\">\r\n                    <b>{(name || surname) ? (name ? name : \"\") + \" \" + (surname ? surname : \"\") : \"No user data\"}</b>&nbsp;\r\n                </div>\r\n                <div className=\"text-secondary d-inline-block small\">uid#{id}&nbsp;<span\r\n                    className={\"badge \"+(deactivated?\"badge-danger\":\"badge-info\")}>{deactivated?\"Deactivated\":\"Active account\"}</span></div>\r\n                <div className=\"text-secondary small\">email: {email ? email : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(emailVerified?\"badge-info\":\"badge-danger\")}>{emailVerified>0?\"Email verified\":(emailVerified<0?\"Pending verification\":\"Not verified\")}</span></div>\r\n                <div className=\"text-secondary small\">document: {document ? document : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(identityCertified>0?\"badge-info\":\"badge-danger\")}>{identityCertified>0?\"Identity certified\":(identityCertified<0?\"Pending certification\":\"Not certified\")}</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    id:                 state.client.user.id,\r\n    name:               state.client.user.name,\r\n    surname:            state.client.user.surname,\r\n    email:              state.client.user.email,\r\n    document:           state.client.user.document,\r\n    deactivated:        state.client.user.deactivated,\r\n    emailVerified:      state.client.user.emailVerified,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst UserDetails = connect(mapStateToProps)(_UserDetails);\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserProfilePicture from './UserProfilePicture';\r\nimport UserDetails from './UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,loggedIn} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <UserProfilePicture />\r\n                                <UserDetails />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    loggedIn:  state.client.userAccess.loggedIn,\r\n    role: state.client.user.role,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {activateUser,deactivateUser} from \"../actions/user\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,{activateUser,deactivateUser})(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,document,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"inputUserName\"     ref={input => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"inputUserSurname\"  ref={input => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"inputUserEmail\"    ref={input => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"inputUserDocument\" disabled                                                     type=\"text\" className={fieldClassName} placeholder={document?document:\"Identity not verified\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    document:       state.client.user.document,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {uploadDocument} from \"../actions/user\";\r\n\r\nclass _UserIdentity extends Component {\r\n    render() {\r\n        const {identityCertified,countryName} = this.props;\r\n        const {uploadDocument} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"m-3\">You are applying to become a Thrubi member in the following country: <b>{countryName}</b></div>\r\n                <_ActionButton text={identityCertified===0?\"Upload a document to start the identity certification procedure\":\"Thrubi is certifying your identity\"}\r\n                               disabled={identityCertified!==0} buttonType=\"btn-primary\" action={uploadDocument} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n    countryName:        state.client.population.countryName,\r\n});\r\n\r\nconst UserIdentity = connect(mapStateToProps,{uploadDocument})(_UserIdentity);\r\n\r\nexport default UserIdentity;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {claim} from \"../actions/member\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <div className=\"text-primary\">\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <_ActionButton action={claim} disabled={!thrubiBlueEth}\r\n                                                               buttonType={\"btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                               text={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"}/>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton\r\n                                        disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                        buttonType={\"btn-\"+(this.state.claimProcedureActive?\"\":\"outline-\")+\"primary\"+(thrubiBlueEth?\" active\":\"\")}\r\n                                        text={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))}\r\n                                        action={() => {this.setState({claimProcedureActive: !this.state.claimProcedureActive});}} />\r\n                                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.claim,\r\n    populationId:       state.client.population.id,\r\n    claimBusy:          state.session.busy.action.claim,\r\n    thrubiBlueEth:      state.client.member.thrubiBlueEth,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    exrate:             state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {advancedMode,viewHistory} from \"../actions/member\";\r\n\r\nclass _MemberOptions extends Component {\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory} = this.props;\r\n        const {color} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <_ActionButton noMargin={\"small m-0 mt-2 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Show less details\":\"Show more details...\"}/>\r\n                {\r\n                    !optionAdvancedMode ? \"\"\r\n                    : <_ActionButton noMargin={\"small m-0 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"Hide history\":\"View history...\"} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,{advancedMode,viewHistory})(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Next month ₮B\"        bold={false} value={ member.thrubiBlueNext}         ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 bold={false} value={ member.thrubiBlueEth}          ccySymbol=\"Ξ\" />\r\n                    <_CcyRow text=\"₮B awards\"                   bold={false} value={ member.thrubiBlueAward}        ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                bold={false} value={member.thrubiBlueAwardTotal}    ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               bold={false} value={member.thrubiBlueClaimTotal}    ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        <MemberOptions color=\"primary\"/>\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from \"./_MemberBlue\";\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-primary\">\r\n                <_ActionButton text=\"Thrubi Blue\" buttonType={\"btn-outline-primary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberBlue\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Claim />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"text-secondary container\">\r\n                                                    {/*<_CcyRow text=\"Your Ξ balance\"\r\n                                                             bold={false}\r\n                                                             value=0 // add a worker that constantly checks Ξ balance from blockchain for account\r\n                                                             ccySymbol=\"Ξ\" />*/}\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees*100).toFixed(1)+\"%)\"}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*thrubiFees}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*(1-thrubiFees)*(!thrubiPriceSilver?0:(1/thrubiPriceSilver))}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <input id=\"transformEth\" ref={input => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm rounded-0\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                <_ActionButton buttonType={\"btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                               disabled={!this.state.transformEthValue}\r\n                                                               action={transform}\r\n                                                               payload={this.state.transformEthValue}\r\n                                                               text={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton disabled={(!thrubiSilver)&&(!this.state.transformProcedureActive)}\r\n                                                   buttonType={\"btn-\"+(this.state.transformProcedureActive?\"\":\"outline-\")+\"secondary\"+(thrubiSilver?\" active\":\"\")}\r\n                                                   text={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))}\r\n                                                   action={() => this.setState({transformProcedureActive: !this.state.transformProcedureActive})} />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React,{Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Next month ₮$\"           bold={false} value={ member.thrubiSilverNext} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\"             bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\"       bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n        <MemberOptions color=\"secondary\" />\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from \"./_MemberSilver\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-secondary\">\r\n                <_ActionButton text=\"Thrubi Silver\" buttonType={\"btn-outline-secondary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberSilver\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceSilver={thrubiPriceSilver}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Transform />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"My Thrubi Gold\"      bold={true}  value={ member.thrubiGold} ccySymbol={\"₮G\"} />\r\n            <_CcyRow text=\"Market value\"        bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <_ActionButton action={() => {}} text=\"Find gold Thrubi marketplace\" buttonType=\"btn-outline-success\" />\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _MemberGold from \"./_MemberGold\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-success\">\r\n                <_ActionButton text=\"Thrubi Gold\" buttonType={\"btn-outline-success\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberGold\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectPopulation,deselectPopulation} from \"../actions/population\";\r\n\r\nclass _Populations extends Component {\r\n    render() {\r\n        const {populations,populationId,filter} = this.props;\r\n        const {selectPopulation,deselectPopulation} = this.props;\r\n\r\n        return (\r\n            populations\r\n                .filter(p => (\r\n                    !filter\r\n                    || p.countryId.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.countryName.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.ccyId.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.ccyName.toLowerCase().includes(filter.toLowerCase())\r\n                ))\r\n                .map((population,index) => {\r\n                return (\r\n                    <div key={index} className=\"bg-light py-0 px-2 p-lg-0 my-1\">\r\n                        <button\r\n                            className={\"btn btn-sm m-0 p-0 rounded-0 border-0 btn-block btn-outline-primary\"+\r\n                                ((populationId===population.populationId)?\" active\":\"\")}\r\n                            onClick={(populationId===population.populationId) ? (() => deselectPopulation(population)) : (() => selectPopulation(population))}\r\n                        >\r\n                            <div className=\"d-none d-lg-flex container-fluid row p-3 m-0\">\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.countryId}</div>\r\n                                <div className=\"col-lg-5 col-md-10 p-0 m-0 text-left\"> {population.countryName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccyId}</div>\r\n                                <div className=\"col-lg-4 col-md-8  p-0 m-0 text-left\">{population.ccyName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                            </div>\r\n                            <div className=\"d-block d-lg-none my-3 py-3 text-center\">\r\n                                {population.countryName} ({population.countryId}) - {population.ccyName} ({population.ccyId} {population.ccySymbol})\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    populations:        state.client.population.populations,\r\n    filter:             state.client.population.filter,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,deselectPopulation})(_Populations);\r\n\r\nexport default Populations;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/population\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {createMember} from \"../actions/member\";\r\nimport {changeFilter} from \"../actions/population\";\r\n\r\nclass _PopulationSelect extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy,populationsNotAvailable} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if ((!populationsBusy)&&(populationsNotAvailable)) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,populationsNotAvailable,populationId} = this.props;\r\n        const {createMember,changeFilter} = this.props;\r\n        let countryFilterXs,countryFilterLg;\r\n\r\n        return (\r\n            busy ? \"Loading...\" :\r\n                populationsBusy ? \"User populations loading...\" :\r\n                    populationsNotAvailable ? \"No populations found...\" :\r\n                        <Fragment>\r\n                            <div className=\"d-none d-lg-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 wMin800 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={input => countryFilterLg = input}\r\n                                               onChange={() => changeFilter(countryFilterLg.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search by country or currency\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex d-lg-none flex-column flex-grow-1 align-items-center\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={input => countryFilterXs = input}\r\n                                               onChange={() => changeFilter(countryFilterXs.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search by country or currency\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n    userId:                     state.client.user.id,\r\n    populationId:               state.client.population.id,\r\n});\r\n\r\nconst PopulationSelect = connect(mapStateToProps,{fetchPopulations,createMember,changeFilter})(_PopulationSelect);\r\n\r\nexport default PopulationSelect;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationAdd extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst PopulationAdd = connect(mapStateToProps,{populationExists,createPopulation})(_PopulationAdd);\r\n\r\nexport default PopulationAdd;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <_ActionButton action={deletePopulation} text=\"Delete Population\" buttonType=\"btn-secondary\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst PopulationDelete = connect(mapStateToProps,{deletePopulation})(_PopulationDelete);\r\n\r\nexport default PopulationDelete;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationTune extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={input => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={input => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={input => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst PopulationTune = connect(mapStateToProps,{tunePopulation})(_PopulationTune);\r\n\r\nexport default PopulationTune;","import React,{Component,Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport _ActionButton from \"./_ActionButton\";\nimport {chooseGuestMenu} from \"../actions/guest\";\nimport {guestMenuOption} from \"../config/guest\";\n\n\nclass _GuestMenu extends Component {\n    render() {\n        const {selected} = this.props;\n        const {chooseGuestMenu} = this.props;\n        return (\n            <div className=\"container-fluid m-0 bg-white\">\n                <div className=\"row mr-0 p-0\">\n                    <div className=\"col-md-6 p-0 m-0 pr-2 navbar-light\">\n                        <_ActionButton action={() => chooseGuestMenu(guestMenuOption.FAQ)}\n                                       buttonType={\"btn-outline-primary\"+(selected===guestMenuOption.FAQ?\" active\":\"\")}\n                                       text=\"Learn more about Thrubi\" />\n                    </div>\n                    <div className=\"col-md-6 p-0 m-0 pl-2 navbar-light\">\n                        <_ActionButton action={() => chooseGuestMenu(guestMenuOption.INFOGRAPHICS)}\n                                       buttonType={\"btn-outline-success\"+(selected===guestMenuOption.INFOGRAPHICS?\" active\":\"\")}\n                                       text=\"Thrubi infographics\" />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    selected: state.client.guest.guestMenuOption,\n});\n\nconst GuestMenu = connect(mapStateToProps,{chooseGuestMenu})(_GuestMenu);\n\nexport default GuestMenu;\n\n\n","import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport Chart from \"./Chart\";\n\n\nclass _GuestInfographics extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid m-0 p-3 bg-white\">\n                <br />\n                Thrubi uses the income distributions shown here to build models to calculate individual Universal Basic Income.\n                <div className=\"text-center py-3\">\n                    <br />\n                    <b>Income distribution, United States of America (USA), 2018. Public data: IRS.gov.</b>\n                    <Chart />\n                    <br />\n                    <span className=\"small\"><i>More countries coming soon</i></span>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    guestSubscribed: state.client.guest.subscribed,\n});\n\nconst GuestInfographics = connect(mapStateToProps,{})(_GuestInfographics);\n\nexport default GuestInfographics;\n\n\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport GuestFaq from \"./GuestFaq\";\r\nimport Chart from \"./Chart\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport UserIdentity from \"./UserIdentity\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport PopulationSelect from \"./PopulationSelect\";\r\nimport PopulationAdd from \"./PopulationAdd\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport PopulationDelete from \"./PopulationDelete\";\r\nimport PopulationTune from \"./PopulationTune\"\r\nimport {close} from \"../actions/user\";\r\nimport \"./styles/User.scss\";\r\nimport GuestMenu from \"./GuestMenu\";\r\nimport {guestMenuOption} from \"../config/guest\";\r\nimport GuestInfographics from \"./GuestInfographics\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,identityCertified,isMember,member,guestOption} = this.props;\r\n        const {close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid row p-0 m-0 mb-5\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <Fragment>\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light p-0\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <div className=\"\">\r\n                                            <GuestMenu />\r\n                                            { guestOption!==guestMenuOption.FAQ ? \"\" : <GuestFaq /> }\r\n                                            { guestOption!==guestMenuOption.INFOGRAPHICS ? \"\" : <GuestInfographics /> }\r\n                                        </div>\r\n                                        :\r\n                                        !isMember ?\r\n                                            <Fragment>\r\n                                                <PopulationSelect />\r\n                                                { !auth ? \"\" : <PopulationAdd /> }\r\n                                            </Fragment>\r\n                                            :\r\n                                            <div className=\"bg-light mr-2 ml-2 ml-lg-0\">\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    identityCertified<=0 ?\r\n                                                        <div>\r\n                                                            <UserIdentity />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            {\r\n                                                                !auth ?\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"container-fluid row p-0 m-0\">\r\n                                                                            <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                                { (member.thrubiBlue || member.thrubiBlueNext || member.thrubiBlueEth\r\n                                                                                    || member.thrubiBlueAward || member.thrubiBlueAwardTotal || member.thrubiBlueClaimTotal)\r\n                                                                                    ? <ThrubiBlue /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                                { (member.thrubiSilver || member.thrubiSilverNext || member.thrubiSilverEth\r\n                                                                                    || member.thrubiSilverTransformTotal)\r\n                                                                                    ? <ThrubiSilver /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                                { (member.thrubiGold)\r\n                                                                                    ? <ThrubiGold /> : \"\"}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                    :\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationDelete/>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationTune />\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                            }\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </div>\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    isMember:           state.client.member.isMember,\r\n    member:             state.client.member,\r\n    identityCertified:  state.client.user.identityCertified,\r\n    guestOption:        state.client.guest.guestMenuOption,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{close})(_User);\r\n\r\nexport default User;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsCountryCcy = ({\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span>\r\n        Thrubi is launching in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nCountry:   state.global.stats.nCountry,\r\n    nCcy:       state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStatsCountryCcy = connect(mapStateToProps,{})(_GlobalStatsCountryCcy);\r\n\r\nexport default GlobalStatsCountryCcy;","import React,{Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\nimport GlobalStatsCountryCcy from \"./GlobalStatsCountryCcy\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <Fragment>\r\n        <div className=\"d-block d-lg-none container-fluid flex-md-nowrap p-0 footer\">\r\n            <div className=\"col-lg-12 float-right m-0 py-2 pt-2 text-center bg-light\"\r\n                 style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                     backgroundSize: \"contain\",\r\n                     backgroundPosition: \"center\",\r\n                     backgroundRepeat:\"no-repeat\",\r\n                     backgroundBlendMode:\"color-dodge\"}}>\r\n                <GlobalStatsUsers />\r\n                <span className=\"small d-block\"><GlobalStatsCountryCcy/></span>\r\n                <span className=\"mb-2 small\">Public data provided by:</span>\r\n                <br/>\r\n                <a href=\"https://www.irs.gov\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"IRS.gov\" height=\"80px\" src={process.env.PUBLIC_URL+\"/jpg/IRS.gov.jpg\"} /></a>\r\n                <a href=\"https://wid.world\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"wid.world\" height=\"80px\" src={process.env.PUBLIC_URL+\"/png/wid.world.png\"} /></a>\r\n                <br/>\r\n                <div className=\"px-1\">\r\n                    <img className=\"text-center d-inline mr-1 mb-1\" alt=\"email\" width=\"20px\" src={process.env.PUBLIC_URL+\"/png/email.png\"} style={{filter:\"opacity(.5) sepia(1) hue-rotate(180deg)\"}} />\r\n                    &nbsp;\r\n                    <a className=\"text-center text-secondary\" href=\"mailto:info@thrubi.com\">\r\n                        info@thrubi.com\r\n                    </a>\r\n                </div>\r\n                <a href=\"https://twitter.com/thrubi_org?ref_src=twsrc%5Etfw\" data-show-count=\"false\" className=\"twitter-follow-button\">Follow @thrubi_org</a>\r\n                <br/>\r\n                <a href=\"https://www.patreon.com/bePatron?u=30859926\" data-patreon-widget-type=\"become-patron-button\">Become a Patron!</a>\r\n            </div>\r\n            {\r\n                !ethNetwork || !ethAddress ? \"\" :\r\n                    <div className=\"col-lg-12 float-right mx-0 my-0 pb-1 text-center bg-light\">\r\n                        <div className=\"navbar-nav small consoleFont\">\r\n                            <div>\r\n                                <span className=\"badge badge-warning d-inline\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                                <span className=\"badge badge-info d-inline\">{ethAddress}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className=\"col-lg-12 float-right mx-0 my-0 pb-1 text-center bg-light\">\r\n                <a href=\"https://discord.gg/ZUHPgyt\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img className=\"text-center d-inline mx-0 my-3\" alt=\"discord\" height=\"50px\" src={process.env.PUBLIC_URL+\"/png/discord_grey.png\"} />\r\n                </a>\r\n            </div>\r\n            <div className=\"col-lg-12 float-right m-0 p-0 text-center text-success bg-light\">\r\n                <span className=\"d-block navbar-nav small\">\r\n                    <p className=\"d-inline-block\">Rising inequality is toxic to growth</p>\r\n                    <i className=\"d-inline-block small\">&nbsp;&mdash; Nick Hanauer</i>\r\n                </span>\r\n                <div className=\"pt-0 pb-3\">© 2020 Thrubi.com</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"d-none d-lg-flex flex-md-nowrap m-0 p-4 container-fluid flex-grow-1 footer bg-light\"\r\n             style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                 backgroundSize: \"contain\",\r\n                 backgroundPosition: \"center\",\r\n                 backgroundRepeat:\"no-repeat\",\r\n                 backgroundBlendMode:\"color-dodge\"}}>\r\n            <div className=\"col-lg-4 float-right m-0 px-0 py-3 text-left\">\r\n                <p className=\"m-0 p-0 mb-3\">Public data provided by:</p>\r\n                <a href=\"https://www.irs.gov\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"IRS.gov\" height=\"80px\" src={process.env.PUBLIC_URL+\"/jpg/IRS.gov.jpg\"} /></a>\r\n                <a href=\"https://wid.world\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"wid.world\" height=\"80px\" src={process.env.PUBLIC_URL+\"/png/wid.world.png\"} /></a>\r\n                <p className=\"m-0 p-0 mt-3\"/>\r\n                <GlobalStatsCountryCcy/>\r\n                <div className=\"py-1\">\r\n                    <img className=\"text-center d-inline mr-1 mb-1\" alt=\"email\" width=\"20px\" src={process.env.PUBLIC_URL+\"/png/email.png\"} style={{filter:\"opacity(.5) sepia(1) hue-rotate(180deg)\"}} />\r\n                    &nbsp;\r\n                    <a className=\"text-center text-secondary\" href=\"mailto:info@thrubi.com\">\r\n                        info@thrubi.com\r\n                    </a>\r\n                </div>\r\n                <a href=\"https://twitter.com/thrubi_org?ref_src=twsrc%5Etfw\" data-show-count=\"false\" className=\"twitter-follow-button\">Follow @thrubi_org</a>\r\n                <br/>\r\n                <a href=\"https://www.patreon.com/bePatron?u=30859926\" data-patreon-widget-type=\"become-patron-button\" className=\"mt-4\">Become a Patron!</a>\r\n            </div>\r\n            <div className=\"col-lg-4 float-right m-0 px-0 py-3 text-center text-secondary\">\r\n                <a href=\"https://discord.gg/ZUHPgyt\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img className=\"text-center d-inline mx-0 mb-3\" alt=\"discord\" height=\"50px\" src={process.env.PUBLIC_URL+\"/png/discord_grey.png\"} />\r\n                </a>\r\n                <iframe src=\"https://discordapp.com/widget?id=681677187044343841&theme=dark\" width=\"350\" height=\"300\"\r\n                        allowTransparency=\"true\" frameBorder=\"0\" />\r\n            </div>\r\n            <div className=\"col-lg-4 float-right m-0 px-0 py-3 text-right text-success\">\r\n                <span className=\"d-block navbar-nav\">\r\n                    <p className=\"d-inline-block\">Rising inequality is toxic to growth</p>\r\n                    <i className=\"d-inline-block small\">&nbsp;&mdash; Nick Hanauer</i>\r\n                </span>\r\n                <div className=\"pb-3\">© 2020 Thrubi.com</div>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].flareType===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].flareType===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../../config/http\";\r\nimport flareBook from \"../../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../../config/server\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../../env/workers\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()               => dispatch(fetchGlobalStats()))\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React,{Component,Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport _ActionButton from \"./_ActionButton\";\nimport {guestSubscribeNewsletter} from \"../actions/guest\";\n\n\nclass _GuestBanner extends Component {\n    componentDidMount() {\n        this.setState({guestSubscribed:false});\n    }\n\n    render() {\n        const {guestSubscribed} = this.props;\n        const {guestSubscribeNewsletter} = this.props;\n        let guestEmail;\n\n        return (\n            <Fragment>\n                <div className=\"w-100 px-2 py-4 text-center\">\n                    <p className=\"display-4 m-2 px-2\">\n                        A <span className=\"thrubiGradient\">Thrubi</span> account gets you\n                        a <span className=\"thrubiGradient\">universal basic income.</span>\n                    </p>\n                    <h4 className=\"m-2 px-2\">\n                        It is calculated based on your current earnings and funded by wealthy individuals.\n                    </h4>\n                    <h4 className=\"display-3 m-0 p-2\">\n                        Our purpose? <span className=\"thrubiGradient\">Solve extreme poverty.</span>\n                    </h4>\n                </div>\n                <div className=\"container-fluid row mx-0 my-4 mb-5 p-0 text-center w-100 bg-light\">\n                    <div className=\"col-lg-3 p-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 mx-lg-3 px-0 py-2 pb-4 bg-primary text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">1.</p>\n                                <p className=\"p-4\">Sign up for a Thrubi account using one of the methods below</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6 p-0 m-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 ml-lg-0 mr-lg-3 px-0 py-2 pb-4 bg-secondary text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">2.</p>\n                                <p className=\"px-2 mb-2\">{guestSubscribed?\"Subscribed to the newsletter!\":\"Subscribe to the newsletter\"}</p>\n                                {\n                                    guestSubscribed?\"\":\n                                        <Fragment>\n                                            <br className=\"d-lg-none\" />\n                                            <input ref={input => guestEmail = input}\n                                               type=\"text\" className=\"d-inline-block form-control form-control-sm rounded-0 m-0 w-75\"\n                                               placeholder=\"My email address\" required/>\n                                            <br className=\"d-lg-none\" />\n                                            <_ActionButton buttonType=\" d-inline-block w-75 btn-outline-light mx-2 \" noMargin=\"px-2\" text=\"Keep me up to date\"\n                                                            action={() => guestSubscribeNewsletter(guestEmail.value)} />\n                                        </Fragment>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-3 p-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 ml-lg-0 mr-lg-3 px-0 py-2 pb-4 bg-success text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">3.</p>\n                                <p className=\"p-4\">Learn more about Thrubi in the sections below</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    guestSubscribed: state.client.guest.subscribed,\n});\n\nconst GuestBanner = connect(mapStateToProps,{guestSubscribeNewsletter})(_GuestBanner);\n\nexport default GuestBanner;\n\n\n","import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\nimport GuestBanner from \"./GuestBanner\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            // enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary d-flex flex-column align-items-stretch\">\n                <Header />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <GuestBanner />\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}