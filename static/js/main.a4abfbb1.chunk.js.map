{"version":3,"sources":["actions/config/flare.js","reducers/customMiddleware/thunkWrap.js","reducers/config/actionTypes.js","actions/flare.js","actions/config/thrubi.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","actions/config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStats.js","components/Titlebar.js","classes/Channel.js","components/_ActionButton.js","actions/env/server.js","actions/config/http.js","actions/server.js","actions/config/server.js","actions/userMenu.js","actions/market.js","actions/config/market.js","components/MemberOptions.js","components/MemberInfo.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","actions/config/blockchain_ethereum.js","actions/env/blockchain_ethereum.js","actions/user.js","actions/config/facebook.js","actions/config/auth.js","actions/env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","actions/env/redirect.js","components/Auth.js","components/Info.js","components/_UserIcon.js","components/_UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/_CcyRow.js","components/DeclareIncome.js","components/Claim.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/SelectPopulation.js","components/Countries.js","actions/adminMenu.js","components/Ccys.js","components/AddPopulation.js","components/_DeletePopulation.js","components/TunePopulation.js","components/User.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","index.js"],"names":["exports","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","errorFlare","UNEXPECTED_FLARE","message","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","infoFlare","DETECTED_ETH_NETWORK_CHANGE","DETECTED_ETH_ADDRESS_CHANGE","thunkWrap","dispatch","getState","next","action","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","LOGIN","UPDATE_USER_ACTIVATION","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CLEAR_POPULATION","CHANGE_POPULATION","RECEIVE_POPULATIONS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","SELECT_POPULATION","POPULATION_EXISTS","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_SWITCHPOPULATION","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","type","a","Promise","resolve","then","index","session","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","payload","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","error","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","user","claim","transform","userMenu","adminMenu","switchPopulation","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","passport","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","channels","BLOCKCHAIN_ETHEREUM","KEYBOARD","FACEBOOK","LINKEDIN","GOOGLE","PAYPAL","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleState","accessJwt","refreshJwt","userAccess","code","googleCode","populationInit","exists","lastId","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","parseFloat","config","populationId","memberInit","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","thrubiSilverRedeem","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStats","connect","className","Titlebar","src","process","alt","height","width","Channel","channelMode","Math","abs","channelName","_ActionButton","text","buttonType","disabled","channel","onClick","event","preventDefault","channelColor","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","endpoint","finally","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","changePopulation","deselectPopulation","selectPopulation","setInterval","activity","fetchMember","data","amount","clearInterval","createMember","mDeclared","advancedMode","viewHistory","_MemberOptions","this","props","Component","MemberOptions","MemberInfo","toFixed","MemberBar","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","username","password","ref","input","placeholder","required","value","ethEventType","THRUBI_ABI","switchOptionUserMenu","fetchDetails","detail","i","detailName","detailValue","storeDetails","overwrite","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","FBlogout","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","fetchUserChannels","deleteChannel","setPayChannel","channelIsOpen","newPayChannel","finalizeLogin","loginData","loginError","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","api","facebookDetails","first_name","last_name","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","console","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","createPayPal","loginPayPal","addPayPal","updatePayPal","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","opener","postMessage","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","_RadioButtons","disabledFilter","channelIsForPay","mode","actions","Auth","_Info","style","Info","_UserIcon","_UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_CcyRow","bold","muted","isNaN","DeclareIncome","declareIncomeBusy","_Claim","claimProcedureActive","claimBusy","onSubmit","setState","Claim","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","userLoggedIn","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","onChange","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","Populations","lastPopulationId","isMember","_SelectPopulation","reload","populationsBusy","populationsNotAvailable","SelectPopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_AddPopulation","verifyExists","populationExists","createPopulation","AddPopulation","_DeletePopulation","_TunePopulation","newBrake","newWarperMincome","newWarperEquality","tunePopulation","TunePopulation","_User","deletePopulation","User","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","data-dismiss","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.a4abfbb1.chunk.js","sourcesContent":["exports.flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    errorFlare: {\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0016\",message:\"Error updating user pay channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0016\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0016\",message:\"Error fetching channels\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n    },\r\n};","const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    LOGIN: null,\r\n    UPDATE_USER_ACTIVATION: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CLEAR_POPULATION: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_SWITCHPOPULATION:   {busyType:\"action\",busyId:\"switchPopulation\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import {TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from './config/thrubi';\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const emitFlare = (type,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    return Promise.resolve()\r\n        .then(()            => index = getState().session.flare.next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,type,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER=30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER=1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER=1000;\r\nexport const INTERVAL_MEMBER_WORKER=1000;\r\nexport const INTERVAL_MARKET_WORKER=1000;\r\nexport const INTERVAL_POPULATION_WORKER=1000;\r\n\r\nexport const TIMEOUT_FLARE_DELETE=7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG=30000;\r\n\r\nexport const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","import {flareBook} from \"../../actions/config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           action.payload.type,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        type:           state.flares[action.payload.index].type,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:{},});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:{},});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:{},});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:{},});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:{},});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:{},});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:{},});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        switchPopulation:   true,\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","const userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../actions/config/user\";\r\n\r\nconst userInit = {\r\n    id: -1,\r\n    role: -1,\r\n    deactivated: 1,\r\n    name: null,\r\n    surname: null,\r\n    email: null,\r\n    passport: null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate: userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu: userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory: false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.UPDATE_USER_ACTIVATION:\r\n            return Object.assign({},state, {\r\n                deactivated:            parseInt(action.payload.deactivated),\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name         ? action.payload.name       : state.name,\r\n                surname:                action.payload.surname      ? action.payload.surname    : state.surname,\r\n                email:                  action.payload.email        ? action.payload.email      : state.email,\r\n                passport:               action.payload.passport     ? action.payload.passport   : state.passport,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                passport:               null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    channels: {\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        KEYBOARD:               0,\r\n        FACEBOOK:               0,\r\n        LINKEDIN:               0,\r\n        GOOGLE:                 0,\r\n        PAYPAL:                 0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleState:            null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                autoLogin:              true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations: [],\r\n    exists: 0,\r\n    id: -1,\r\n    lastId: -1,\r\n    countryId: '',\r\n    countryName: '',\r\n    ccyId: '',\r\n    ccyName: '',\r\n    ccySymbol: '',\r\n    thrubiPriceSilver: 0,\r\n    thrubiPriceSilverNext: 0,\r\n    thrubiPriceGold: 1.5,\r\n    brake: 0,\r\n    mincome: 0,\r\n    equality: 0,\r\n    warperMincome: 0,\r\n    warperEquality: 0,\r\n    thrubiFees: 0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                lastId: state.lastId,\r\n            });\r\n        case actionType.CHANGE_POPULATION:\r\n            return Object.assign({},state,{\r\n                lastId: state.id,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:             action.payload.populations,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver: action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext: action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                 parseFloat(action.payload.stats.mincome),\r\n                equality:                parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                   parseFloat(action.payload.config.brake),\r\n                warperMincome:           parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:          parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                      parseInt(action.payload.population.populationId),\r\n                countryId:               action.payload.population.countryId,\r\n                countryName:             action.payload.population.countryName,\r\n                ccyId:                   action.payload.population.ccyId,\r\n                ccyName:                 action.payload.population.ccyName,\r\n                ccySymbol:               action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                  action.payload.exists,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverRedeem:         parseFloat(action.payload.member.thrubiSilverRedeem),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _GlobalStats = ({\r\n    nUser,\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary d-none d-lg-inline-block text-center small mr-2 alignBottom\">\r\n        {nUser} {nUser===1?\"user\":\"users\"} using Thrubi in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nUser: state.global.stats.nUser,\r\n    nCountry: state.global.stats.nCountry,\r\n    nCcy: state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStats = connect(mapStateToProps,{})(_GlobalStats);\r\n\r\nexport default GlobalStats;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Titlebar = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right ethBadges\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Titlebar = connect(mapStateToProps)(_Titlebar);\r\n\r\nexport default Titlebar;","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelColor (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"blockchain-ethereum\";\r\n            case \"KEYBOARD\":            return \"keyboard\";\r\n            case \"FACEBOOK\":            return \"facebook\";\r\n            case \"LINKEDIN\":            return \"linkedin\";\r\n            case \"GOOGLE\":              return \"google\";\r\n            case \"PAYPAL\":              return \"paypal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName (channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"BlockchainEthereum\";\r\n            case \"KEYBOARD\":            return \"Keyboard\";\r\n            case \"FACEBOOK\":            return \"Facebook\";\r\n            case \"LINKEDIN\":            return \"LinkedIn\";\r\n            case \"GOOGLE\":              return \"Google\";\r\n            case \"PAYPAL\":              return \"PayPal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName (channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Use my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Use my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Using my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Using my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet to use it\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account to use it\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign in with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign in with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign in with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign in with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign in with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign up with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign up with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign up with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign up with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign up with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Enable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Connect a Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect a LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect a Google account\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Disable access via my Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Disable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Disconnect my Facebook account\";\r\n                case \"LINKEDIN\":            return \"Disconnect my LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Disconnect my Google account\";\r\n                case \"PAYPAL\":              return \"Disconnect my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect another Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Update username/password\";\r\n                case \"FACEBOOK\":            return \"Connect another Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect another LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect another Google account\";\r\n                case \"PAYPAL\":              return \"Connect another PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            default: return \"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({action,payload,text,buttonType,disabled=false,channel=false}) => (\r\n    <button disabled={disabled}\r\n            onClick={(event) => {event.preventDefault(); action(payload); }}\r\n            className={\"btn btn-sm btn-block rounded-0 my-2 py-\"+(channel?\"2 \":\"2 \")+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n        <div className={\"container-fluid row p-0 m-0\"+(channel?\"\":\" fullWidth\")}>\r\n            <div className={(channel?\"\":\"fullWidth\")}>\r\n                {\r\n                    !channel ? \"\" :\r\n                        <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                }\r\n                <div className={(channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(channel?\"left\":\"center\")}>{text}</div>\r\n            </div>\r\n        </div>\r\n    </button>\r\n);\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"./env/server\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType,headers} from \"./config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USER:                                   \"/user\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {fetchExrate} from \"./market\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {INTERVAL_MARKET_WORKER,INTERVAL_MEMBER_WORKER,INTERVAL_POPULATION_WORKER} from \"./config/thrubi\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    //dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    if (getState().client.user.id!==-1) {\r\n        processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)(dispatch,getState)\r\n            .then(populations => {\r\n                dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}});\r\n            })\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n            .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n    }\r\n};\r\n\r\nconst fetchThrubiPriceSilver = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(stats => {\r\n            dispatch({type:actionType.RECEIVE_STATS,payload:{stats}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = (populationId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)(dispatch,getState)\r\n        .then(config => {\r\n            dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.CHANGE_POPULATION,payload:{}});\r\n    deselectPopulation()(dispatch,getState);\r\n};\r\n\r\nexport const selectPopulation = (population) => async (dispatch,getState) => {\r\n    deselectPopulation()(dispatch,getState);\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchMember(population.populationId,getState().client.user.id)(dispatch,getState);\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            fetchThrubiPriceSilver(population.populationId)(dispatch,getState);\r\n            fetchThrubiPriceSilverNext(population.populationId)(dispatch,getState);\r\n            if (getState().client.user.auth) {\r\n                fetchStats(population.populationId)(dispatch,getState);\r\n                fetchConfig(population.populationId)(dispatch,getState);\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n    dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_MEMBER,payload:{}});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const createMember = (population) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+population.populationId,null))\r\n        .then(() => dispatch(fetchPopulations()))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    if ((getState().client.population.id!==-1)&&(getState().client.user.loggedIn)) {\r\n        return await dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null))\r\n            .then(packet => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n            .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n    }\r\n};\r\n\r\nexport const declareIncome = (mDeclared) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME});\r\n    return await dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null))\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const claim = () => async (dispatch, getState) => {\r\n    const ethAddress=getState().client.userAccess.ethAddress;\r\n    const populationId=getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId, null));\r\n};\r\n\r\nexport const advancedMode = (optionAdvancedMode) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = (optionViewHistory) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import request from \"request\";\r\nimport {uri,spotApi} from \"./config/market\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","import React, {Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nclass _MemberOptions extends Component {\r\n\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory,changePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Advanced\":\"Basic\"}/>\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType={\"p-0 btn-\"+(optionViewHistory?\"primary\":\"light\")} disabled={!optionAdvancedMode} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"History\":\"History\"} />\r\n                </div>\r\n                <div className=\"col-lg-1 userPanel\">\r\n                    <_ActionButton buttonType=\"p-0 btn-primary\" action={changePopulation} text=\"Back\" />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,userMenu)(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    populationId,\r\n    countryName,\r\n    ccyId,\r\n    ccyName,\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"col-lg-9 py-3\">\r\n            <span>{countryName}/{ccyName}({ccyId}) <span className=\"small\">(pid#{populationId})</span></span>\r\n            <span>&nbsp;| 1.00Ξ = {exrate.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilver.toFixed(2)}{ccySymbol}</span>\r\n            <span>&nbsp;| 1.00$₮ = {thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next)</span>\r\n            <span>&nbsp;| 1.00₲₮ = {thrubiPriceGold.toFixed(2)}{ccySymbol}</span>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    countryName: state.client.population.countryName,\r\n    ccyId: state.client.population.ccyId,\r\n    ccyName: state.client.population.ccyName,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext: state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport MemberOptions from \"./MemberOptions\";\r\nimport MemberInfo from \"./MemberInfo\";\r\n\r\nconst _Viewport = ({\r\n    busy,\r\n    loggedIn,\r\n    populationId,\r\n}) => (\r\n    <div className=\"container text-primary text-center small m-0 p-2\">\r\n        {\r\n            busy ? \"Viewport loading...\" :\r\n                <div className=\"row\">\r\n                    {\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <MemberOptions />\r\n                                <MemberInfo />\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.viewport,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{})(_Viewport);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _ActionButton;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from './_ActionButton';\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = '0xb198482C48Ef0e89df3597b0f7250F88c51D6759';\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x199cf6ad2e6ce4f20f4f77bf95042862858fe7b5fb2240b17ec190107e6b41e8\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x6b8d5104af05a3749790a02190abe69665e450a2af5f4dd52ac361f9a8a22bd5\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3259af21\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xf92b929f\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:0}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER});\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n    processRequest(requestType.POST,endpoint.USER_DEACTIVATE,null)(dispatch,getState)\r\n        .then(result => {\r\n            dispatch({type:actionType.UPDATE_USER_ACTIVATION,payload:{deactivated:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()             => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","const linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://eliomattia.github.io/thrubi-client\";\r\n    envGoogleRedirectUri      = \"https://eliomattia.github.io/thrubi-client\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {requestType} from \"./config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"./config/thrubi\";\r\nimport {endpoint} from \"./config/server\";\r\nimport {facebook} from \"./config/facebook\";\r\nimport {\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams\r\n} from \"./config/auth\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport userOptions from \"./config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"./env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"./env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = (payload) => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = (intervalTime) => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (()           => dispatch(logout({autoLogin:true})));\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const setPayChannel = (payChannel) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = (loginData) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) {console.error(event.data); return event.data;} else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({code:pJson.code,state:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER,INTERVAL_ETH_NETWORK_WORKER} from \"./config/thrubi\";\r\nimport {ethEventType} from \"./config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"./env/blockchain_ethereum\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:true})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = (transformEth) => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        transformContract(ethAddress,populationId,userId)\r\n            .send({from:ethAddress,value:transformEth*1e18})\r\n            .once(ethEventType.confirmation,() => {\r\n                    // Thrubi will automatically process the transform via its workers on the backend\r\n                    resolve();\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\n\r\n","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../actions/config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"I am new to Thrubi\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        <div className=\"my-4\">\r\n                                                            My payment method:\r\n                                                            <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                       activeFilter={payChannel}\r\n                                                                       checkedFilter={payChannel}\r\n                                                                       action={setPayChannel}\r\n                                                                       elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                            if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                key:key,\r\n                                                                                channel:key,\r\n                                                                                color:\"btn-\" + (Channel.channelIsOpen(channels[key]) ? \"\" : \"outline-\")+Channel.channelColor(key),\r\n                                                                                disabledFilter:(key === payChannel),\r\n                                                                                text:Channel.channelUserFriendlyName(key, (key === payChannel ? \"USING\" : (Channel.channelIsOpen(channels[key]) ? \"USE\" : \"LINK\")))\r\n                                                                            }); else return null;\r\n                                                                       }).filter(element=>element!==null)}/>\r\n                                                        </div>\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key, actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiBlue\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 everybody\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-primary\"><div className=\"opaque\">\r\n                                <h3>Everybody</h3>\r\n                                <p>\r\n                                    Be part of the sustainable societies of the future. If your country has adhered to a Thrubi plan,\r\n                                    you will be awarded Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will in turn give you the rights to regular payments.\r\n                                    Nobody can be extremely poor or extremely rich with Thrubi.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-primary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiSilver\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 wealthy\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-secondary\"><div className=\"opaque\">\r\n                                <h3>Wealthy individuals</h3>\r\n                                <p>\r\n                                    If you are an investor, choose a sustainable future. As a wealthy individual,\r\n                                    you will have access to purchasing Thrubi Gold, the investment tool of sustainable societies.\r\n                                    Thrubi Gold can only be purchased by redeeming Thrubi Silver, which you will be awarded according\r\n                                    to your current income. Governments are accepting Thrubi Gold to pay tax duties.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-secondary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mx-2 thrubiGold\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 societies\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-success\"><div className=\"opaque\">\r\n                                <h3>Thriving societies</h3>\r\n                                <p>\r\n                                    If you are a sovereign government, you want your people to be at their best.\r\n                                    Thrubi stabilizes a country's income distribution. Growth is shared amongst all participants\r\n                                    of a society in a non-equal fashion: people with a higher net worth will stay richer.\r\n                                    Thrubi, however, will ensure that a society becomes richer as a whole.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-success\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nconst _UserIcon = ({role,deactivated}) =>\r\n    <img className=\"mt-3 rounded-lg\" alt={role+deactivated} height=\"128\" width=\"128\" src={process.env.PUBLIC_URL+\"/jpg/elio.jpg\"}/> /* +\"/icons/\"+role+deactivated+\".png\" */\r\n;\r\n\r\nexport default _UserIcon;","import React from 'react';\r\n\r\nconst _UserDetails = ({user}) => { return (\r\n    <div className=\"text-center mb-2\">\r\n        <div className=\"text-primary displayInlineBlock p-0\"><b>{(user.name||user.surname) ? (user.name?user.name:\"\") + \" \" + (user.surname?user.surname:\"\") : \"No user data\"}</b>&nbsp;</div><div className=\"text-secondary displayInlineBlock small\">uid#{user.id}</div>\r\n        <div className=\"text-secondary small\">email: {user.email ? user.email : \"not found\"}&nbsp;<span className=\"badge badge-info\">Verified</span></div>\r\n        <div className=\"text-secondary small\">passport#{user.passport ? user.passport : \"not found\"}&nbsp;<span className=\"badge badge-danger\">Pending verification</span></div>\r\n    </div>\r\n)};\r\n\r\nexport default _UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _UserIcon from './_UserIcon';\r\nimport _UserDetails from './_UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,role,deactivated,loggedIn,user} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <_UserIcon role={role?\"admin\":\"user\"} deactivated={deactivated?\"_deactivated\":\"\" } />\r\n                                <_UserDetails user={user} />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    role: state.client.user.role,\r\n    deactivated: state.client.user.deactivated,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    user: state.client.user,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport * as userMenu from \"../actions/userMenu\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <div className=\"small\">\r\n                            Account currently deactivated<br/>\r\n                            <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        </div>\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,userMenu)(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,passport,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email,passport};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"newUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"newUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"newUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"newUserPassport\" ref={(input) => refs.passport = input}  type=\"text\" className={fieldClassName} placeholder={passport?passport:\"Enter passport number\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            if (refs.passport.value)    userDetails[\"passport\"]=refs.passport.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    passport:       state.client.user.passport,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    muted,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"row ccyRowContainer\">\r\n        <span className=\"text-secondary small text-left ccyRowElement col-lg-6\">{text}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"\"+(muted?\"text-secondary \":\"text-primary \")+\"text-right ccyRowElement col-lg-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/userMenu\";\r\n\r\nconst _DeclareIncome = ({deactivated,populationId,mCurrent,ccySymbol,declareIncomeBusy,declareIncome}) => {\r\n    let mDeclared;\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {\r\n                deactivated ? \"User deactivated, please activate user to declare income\" :\r\n                    populationId===-1 ? \"No population selected, please select a population to declare income\" :\r\n                        declareIncomeBusy ? \"Busy processing income declaration\" :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-4 py-3\">\r\n                                    <_CcyRow text=\"Declared income\" muted={false} bold={false} value={mCurrent} ccySymbol={ccySymbol} />\r\n                                </div>\r\n                                <div className=\"col-lg-4 py-1\">\r\n                                    <input id=\"newUserDeclaredM\" ref={(input) => mDeclared = input}\r\n                                           type=\"text\" className=\"form-control form-control-sm rounded-0 my-1\"\r\n                                           placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required />\r\n                                </div>\r\n                                <div className=\"col-lg-4\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)} buttonType=\"btn-primary\" />\r\n                                </div>\r\n                            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    populationId: state.client.population.id,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    mCurrent: state.client.member.mCurrent,\r\n    declareIncomeBusy: state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst DeclareIncome = connect(mapStateToProps,{declareIncome})(_DeclareIncome);\r\n\r\nexport default DeclareIncome;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport { claim } from \"../actions/userMenu\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             muted={false} bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} muted={false} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <form onSubmit={(event) => {\r\n                                                    event.preventDefault();\r\n                                                    claim();\r\n                                                }}>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!thrubiBlueEth}\r\n                                                           value={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({claimProcedureActive: !this.state.claimProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateClaimProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.claimProcedureActive?\"secondary\":(thrubiBlueEth?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                               value={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.claim,\r\n    populationId: state.client.population.id,\r\n    claimBusy: state.session.busy.action.claim,\r\n    thrubiBlueEth: state.client.member.thrubiBlueEth,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Next month ₿₮\"               muted={true}  bold={false} value={ member.thrubiBlueNext} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 muted={false} bold={false} value={ member.thrubiBlueEth} ccySymbol={\"Ξ\"} />\r\n                    <_CcyRow text=\"₿₮ awards\"                   muted={false} bold={false} value={ member.thrubiBlueAward} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your ₿₮ level\"               muted={false} bold={false} value={ member.thrubiBlue} ccySymbol={\"₿₮\"} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   muted={false} bold={true}  value={(member.thrubiBlueEth*exrate)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                muted={true}  bold={false} value={member.thrubiBlueAwardTotal} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               muted={true}  bold={false} value={member.thrubiBlueClaimTotal} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from './_MemberBlue';\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiBlue)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Blue Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberBlue\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Claim />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"Your Ξ balance\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={0 /* add a worker that constantly checks Ξ balance from blockchain for account */ }\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             muted={false} bold={false}\r\n                                                             value={(this.state.transformEthValue * exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees * 100).toFixed(1)+\"%)\"}\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * thrubiFees)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             muted={false} bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * (1-thrubiFees) / thrubiPriceSilver)}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <form onSubmit={async (event) => {\r\n                                                    event.preventDefault();\r\n                                                    transform(this.state.transformEthValue);\r\n                                                }}>\r\n                                                    <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                    <input className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!this.state.transformEthValue}\r\n                                                           value={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <form onSubmit={(event) => {\r\n                                        event.preventDefault();\r\n                                        this.setState({transformProcedureActive: !this.state.transformProcedureActive});\r\n                                    }}>\r\n                                        <input id=\"activateTransformProcedure\"\r\n                                               className={\"btn btn-sm p-0 btn-block btn-\"+(this.state.transformProcedureActive?\"secondary\":(thrubiSilver?\"primary\":\"light\"))}\r\n                                               type=\"submit\"\r\n                                               disabled={((!thrubiSilver)&&(!this.state.transformProcedureActive))}\r\n                                               value={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))} />\r\n                                    </form>\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Next month $₮\" muted={true} bold={false} value={ member.thrubiSilverNext} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\" muted={false} bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Your $₮\" muted={false} bold={true} value={ member.thrubiSilver} ccySymbol={\"$₮\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\" muted={false} bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\" muted={true} bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from './_MemberSilver';\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiSilver)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Silver Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberSilver\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceSilver={thrubiPriceSilver}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                            optionViewHistory={optionViewHistory}\r\n                                            optionAdvancedMode={optionAdvancedMode}\r\n                                        />\r\n                                        <Transform />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"Gold ₲₮\"         muted={false} bold={true}  value={ member.thrubiGold} ccySymbol={\"₲₮\"} />\r\n            <_CcyRow text=\"Market value\"    muted={false} bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n        }}>\r\n            <input type=\"submit\" value=\"Find gold Thrubi marketplace\" className=\"btn btn-sm p-0 btn-block btn-light\" />\r\n        </form>\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport _MemberGold from './_MemberGold';\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,userLoggedIn,populationId,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                <form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    this.setState({manualPanel: true});\r\n                    this.setState({showPanel: !this.state.showPanel});\r\n                }}>\r\n                    <b>\r\n                        <input id=\"showPanel\"\r\n                               className={\"btn btn-sm p-0 btn-block btn-\"+((!!member.thrubiGold)?(this.state.showPanel?\"primary\":\"secondary\"):\"light\")}\r\n                               type=\"submit\"\r\n                               value=\"Gold Thrubi\" />\r\n                    </b>\r\n                </form>\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            !userLoggedIn ? \"User not logged in\" :\r\n                                populationId <0 ? \"No population selected\" :\r\n                                    <Fragment>\r\n                                        <_MemberGold\r\n                                            member={member}\r\n                                            ccySymbol={ccySymbol}\r\n                                            exrate={exrate}\r\n                                            thrubiPriceGold={thrubiPriceGold}\r\n                                        />\r\n                                    </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    userLoggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {createMember,selectPopulation} from \"../actions/userMenu\";\r\n\r\nconst _Populations = ({populations,auth,populationId,lastPopulationId,selectPopulation,createMember}) => {\r\n    return (\r\n        populations.map((population,index) => {\r\n            return (\r\n                <div key={index} className=\"population p-0 m-0\">\r\n                    <button\r\n                        className={\"btn btn-sm p-0 rounded-0 border-0 btn-block btn-outline-\"+\r\n                            ((!population.isMember&&!auth)?\"secondary\":\"primary\")+\r\n                            ((lastPopulationId===population.populationId)?\" active\":\"\")}\r\n                        value={(population.isMember||auth)?\"Select\":\"Become member\"}\r\n                        onClick={(population.isMember||auth)\r\n                            ? ((event) => {selectPopulation(population);})\r\n                            : ((event) => {createMember(population);})\r\n                        }\r\n                    >\r\n                        <div className=\"container-fluid row p-0 m-0\">\r\n                            <div className=\"small col-lg-2 p-0 m-0 text-center\">\r\n                                {(!population.isMember&&!auth)?\"Become member\":\r\n                                (lastPopulationId===population.populationId)?\"Last selected: #\"+population.populationId:\"Select #\"+population.populationId}\r\n                            </div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.countryId}</div>\r\n                            <div className=\"small col-lg-3 p-0 m-0 text-left\">{population.countryName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccyId}</div>\r\n                            <div className=\"small col-lg-4 p-0 m-0 text-left\">{population.ccyName}</div>\r\n                            <div className=\"small col-lg-1 p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            )\r\n        })\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth:               state.client.user.auth,\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    lastPopulationId:   state.client.population.lastId,\r\n    populations:        state.client.population.populations,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,createMember})(_Populations);\r\n\r\nexport default Populations;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/userMenu\";\r\n\r\nclass _SelectPopulation extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if (!populationsBusy) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,deactivated,populationsNotAvailable} = this.props;\r\n\r\n        return (\r\n            <div className=\"populationTable\">\r\n                {\r\n                    busy ? <div className=\"text-center\">Loading...</div> :\r\n                        deactivated ? \"User deactivated, please activate user to select population\" :\r\n                            populationsBusy ? <div>User populations loading...</div> :\r\n                                populationsNotAvailable ? \"No populations found, we are working on this...\"\r\n                                    :\r\n                                    <Populations />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    userId:                     state.client.user.id,\r\n    deactivated:                state.client.user.deactivated,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n});\r\n\r\nconst SelectPopulation = connect(mapStateToProps,{fetchPopulations})(_SelectPopulation);\r\n\r\nexport default SelectPopulation;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./userMenu\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"./config/http\";\r\nimport {flareBook} from \"./config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"./config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _AddPopulation extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst AddPopulation = connect(mapStateToProps,{populationExists,createPopulation})(_AddPopulation);\r\n\r\nexport default AddPopulation;","import React from 'react';\r\n\r\nconst _DeletePopulation = ({action,text,buttonType}) => (\r\n    <button type=\"submit\" className={buttonType+\" px-0 mx-0\"}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                action();\r\n            }\r\n        }>\r\n        {text}\r\n    </button>\r\n);\r\n\r\nexport default _DeletePopulation;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _TunePopulation extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" muted={false} bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" muted={false} bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" muted={false} bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" muted={false} bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" muted={false} bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst TunePopulation = connect(mapStateToProps,{tunePopulation})(_TunePopulation);\r\n\r\nexport default TunePopulation;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport DeclareIncome from \"./DeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport SelectPopulation from \"./SelectPopulation\";\r\nimport AddPopulation from \"./AddPopulation\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _DeletePopulation from \"./_DeletePopulation\";\r\nimport TunePopulation from \"./TunePopulation\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,populationId} = this.props;\r\n        const {deletePopulation,close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        populationId===-1 ?\r\n                                            <Fragment>\r\n                                                <SelectPopulation />\r\n                                                {\r\n                                                    auth!==1 ? \"\" : <AddPopulation />\r\n                                                }\r\n                                            </Fragment>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    auth!==1 ?\r\n                                                        <Fragment>\r\n                                                            <DeclareIncome />\r\n                                                            <div className=\"container-fluid\">\r\n                                                                <div className=\"row p-0 userContent\">\r\n                                                                    <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                        <ThrubiBlue />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                        <ThrubiSilver />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                        <ThrubiGold />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <_DeletePopulation action={deletePopulation} text=\"Delete Population\" buttonType=\"btn btn-sm p-0 btn-block btn-secondary\"/>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-4 userPanel navbar-light\">\r\n                                                                <TunePopulation />\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"d-none container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-7 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <GlobalStats/>\r\n        </div>\r\n        <div className=\"col-lg-5 d-none d-lg-block float-right mr-0 my-2 text-right\">\r\n            <div className=\"navbar-nav small\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport {flareBook} from \"../actions/config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].type===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].type===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <b>{flares[key].type}</b>&nbsp;\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../config/thrubi\";\r\nimport {flareBook} from \"../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchGlobalStats())\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareFallback(error,flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Titlebar from \"./Titlebar\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary\">\n                <Titlebar />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h3 className=\"displayInlineBlock\">Rising inequality is toxic to growth</h3>\n                                    <i className=\"displayInlineBlock\">&nbsp;(Nick Hanauer)</i>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}