{"version":3,"sources":["reducers/customMiddleware/thunkWrap.js","config/flare.js","classes/FlareQueue.js","reducers/config/actionTypes.js","actions/flare.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStatsUsers.js","components/Header.js","components/MemberInfo.js","components/_CcyRow.js","classes/Channel.js","components/_ActionButton.js","env/server.js","config/http.js","actions/server.js","config/blockchain_ethereum.js","env/blockchain_ethereum.js","actions/market.js","config/market.js","env/workers.js","config/server.js","actions/member.js","actions/population.js","config/facebook.js","config/auth.js","env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","config/redirect.js","env/redirect.js","actions/user.js","components/MemberDeclareIncome.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","components/Auth.js","components/Info.js","components/UserIcon.js","components/UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/UserIdentity.js","components/MemberDelete.js","components/Claim.js","components/MemberOptions.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/PopulationSelect.js","actions/adminMenu.js","components/Countries.js","components/Ccys.js","components/PopulationAdd.js","components/PopulationDelete.js","components/PopulationTune.js","components/User.js","components/GlobalStatsCountryCcy.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","index.js"],"names":["thunkWrap","dispatch","getState","next","action","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","infoFlare","DETECTED_ETH_NETWORK_CHANGE","message","DETECTED_ETH_ADDRESS_CHANGE","DEACTIVATED_ON","DEACTIVATED_OFF","DEACTIVATED_PENDING","EMAIL_VERIFIED_ON","EMAIL_VERIFIED_OFF","EMAIL_VERIFIED_PENDING","IDENTITY_CERTIFIED_ON","IDENTITY_CERTIFIED_OFF","IDENTITY_CERTIFIED_PENDING","INCOME_APPROVED_ON","INCOME_APPROVED_OFF","INCOME_APPROVED_PENDING","errorFlare","USER_ACTIVATION","UNEXPECTED_FLARE","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","NO_ETHEREUM_CONFIG","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_RECEIVE_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","ERR_USER_FLAGS","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","FlareQueue","f","this","queue","then","Promise","resolve","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_RECEIVE_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","LOGIN","RECEIVE_USER_FLAGS","SET_USER_ACTIVATED","SET_USER_DEACTIVATED","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CHANGE_POPULATION","RECEIVE_POPULATIONS","CLEAR_POPULATION","SELECT_POPULATION","POPULATION_EXISTS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","RECEIVE_COUNTRY_FILTER","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_USER_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_USER_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","a","waiter","waiterResolve","index","addToQueue","value","session","type","payload","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","error","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","user","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","userWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","claim","transform","userMenu","adminMenu","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","flags","emailVerified","identityCertified","incomeApproved","userFlags","flagFlare","newState","flag","activationState","detailName","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","document","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","receiveChannel","channels","FACEBOOK","GOOGLE","LINKEDIN","BLOCKCHAIN_ETHEREUM","PAYPAL","KEYBOARD","TWITTER","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleCode","accessJwt","refreshJwt","userAccess","code","populationInit","exists","countryName","ccyName","ccySymbol","countryFilter","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","populationId","parseFloat","config","memberInit","isMember","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStatsUsers","connect","className","Header","src","alt","height","width","href","data-show-count","MemberInfo","toFixed","_CcyRow","text","bold","isNaN","Channel","channelMode","Math","abs","channelName","NOT_AVAILABLE","_ActionButton","props","buttonType","disabled","channel","noMargin","onClick","event","preventDefault","channelColor","includes","children","Component","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","ethEventType","THRUBI_ABI","startMarketWorker","setInterval","activity","data","amount","stopMarketWorker","clearInterval","endpoint","removeMembership","stopPopulationWorker","stopMemberWorker","startMemberWorker","selectPopulation","deselectPopulation","startPopulationWorker","fetchThrubiPriceSilver","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","stopUserWorker","FBlogout","finally","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","console","i","fetchUserChannels","deleteChannel","getPayChannel","setPayChannel","channelIsOpen","switchOptionUserMenu","newPayChannel","getReceiveChannel","setReceiveChannel","newReceiveChannel","finalizeLogin","loginData","loginError","fetchDetails","activateUserWorker","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","username","password","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","api","facebookDetails","first_name","last_name","storeDetails","overwrite","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","createPayPal","loginPayPal","addPayPal","updatePayPal","createTwitter","loginTwitter","addTwitter","updateTwitter","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","opener","postMessage","detail","detailValue","currentFlag","incomingFlag","_MemberDeclareIncome","mDeclared","declareIncomeBusy","ref","input","placeholder","required","MemberDeclareIncome","_MemberBar","data-dismiss","MemberBar","_RadioButtons","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","disabledFilter","setter","o","channelIsForPay","mode","actions","Auth","_Info","style","target","rel","Info","_UserIcon","UserIcon","_UserDetails","UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_UserIdentity","uploadDocument","UserIdentity","_MemberDelete","_Claim","claimProcedureActive","claimBusy","setState","Claim","_MemberOptions","advancedMode","viewHistory","MemberOptions","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","onChange","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","_Populations","p","Populations","_PopulationSelect","reload","populationsBusy","populationsNotAvailable","countryFilterXs","countryFilterLg","createMember","changeCountryFilter","PopulationSelect","forEach","deletePopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_PopulationAdd","verifyExists","populationExists","createPopulation","PopulationAdd","_PopulationDelete","PopulationDelete","_PopulationTune","newBrake","newWarperMincome","newWarperEquality","tunePopulation","onSubmit","PopulationTune","_User","User","GlobalStatsCountryCcy","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","process","exact","path","getElementById"],"mappings":"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","file":"static/js/main.a831256f.chunk.js","sourcesContent":["const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","const flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n        DEACTIVATED_ON:             {thrubiFlareId:\"I003\",message:\"User account is deactivated\"},\r\n        DEACTIVATED_OFF:            {thrubiFlareId:\"I004\",message:\"User account is now active\"},\r\n        DEACTIVATED_PENDING:        {thrubiFlareId:\"I005\",message:\"User account is now pending activation\"},\r\n        EMAIL_VERIFIED_ON:          {thrubiFlareId:\"I006\",message:\"Email address has been verified\"},\r\n        EMAIL_VERIFIED_OFF:         {thrubiFlareId:\"I007\",message:\"Unverified email address detected. Please check your inbox.\"},\r\n        EMAIL_VERIFIED_PENDING:     {thrubiFlareId:\"I008\",message:\"Email address pending verification. Please check your inbox.\"},\r\n        IDENTITY_CERTIFIED_ON:      {thrubiFlareId:\"I009\",message:\"Identity document certified\"},\r\n        IDENTITY_CERTIFIED_OFF:     {thrubiFlareId:\"I010\",message:\"Non-certified identity document detected. Please certify.\"},\r\n        IDENTITY_CERTIFIED_PENDING: {thrubiFlareId:\"I011\",message:\"Identity certification procedure pending. Please wait.\"},\r\n        INCOME_APPROVED_ON:         {thrubiFlareId:\"I012\",message:\"Declared income has been officially approved\"},\r\n        INCOME_APPROVED_OFF:        {thrubiFlareId:\"I013\",message:\"Newly declared income is not approved, please check.\"},\r\n        INCOME_APPROVED_PENDING:    {thrubiFlareId:\"I014\",message:\"Newly declared income is pending approval. Please wait.\"},\r\n    },\r\n    errorFlare: {\r\n        USER_ACTIVATION:            {thrubiFlareId:\"0021\",message:\"User activation module error\"},\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        NO_ETHEREUM_CONFIG:         {thrubiFlareId:\"0022\",message:\"Ethereum wallet not found, please configure or enable MetaMask\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0017\",message:\"Error updating user pay channel\"},\r\n        ERR_RECEIVE_CHANNEL_UPDATE: {thrubiFlareId:\"0023\",message:\"Error updating user receive channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0018\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0019\",message:\"Error fetching channels\"},\r\n        ERR_USER_FLAGS:             {thrubiFlareId:\"0020\",message:\"Could not update user flags\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n};\r\n\r\nexport default flareBook;\r\n\r\nexport const TIMEOUT_FLARE_DELETE = 7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG = 30000;","class FlareQueue {\r\n    static queue = Promise.resolve();\r\n\r\n    static addToQueue(f) {\r\n        this.queue = this.queue.then(f);\r\n    }\r\n}\r\n\r\nexport default FlareQueue;","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_RECEIVE_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    LOGIN: null,\r\n    RECEIVE_USER_FLAGS: null,\r\n    SET_USER_ACTIVATED: null,\r\n    SET_USER_DEACTIVATED: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    CLEAR_POPULATION: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    RECEIVE_COUNTRY_FILTER: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_USER_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_USER_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import FlareQueue from \"../classes/FlareQueue\";\r\nimport flareBook,{TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const getFlareNext = () => async (dispatch,getState) => {\r\n    let waiterResolve;\r\n    let waiter = new Promise(resolve => waiterResolve=resolve);\r\n    let index = {};\r\n    FlareQueue.addToQueue(() => Promise.resolve()\r\n        .then(()            => index.value = getState().session.flare.next)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => waiterResolve(index.value))\r\n    );\r\n    return waiter;\r\n};\r\n\r\nexport const emitFlare = (flareType,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    return Promise.resolve()\r\n        .then(()            => dispatch(getFlareNext()))\r\n        .then(next          => index = next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,flareType,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","import flareBook from \"../../config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      action.payload.flareType,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      state.flares[action.payload.index].flareType,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    user: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_USER_WORKER:\r\n            return Object.assign({},state,{user:action.payload.userWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:null,});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:null,});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:null,});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:null,});\r\n        case actionType.STOP_USER_WORKER:\r\n            return Object.assign({},state,{user:null,});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:null,});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:null,});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:null,});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","import flareBook from \"./flare\";\r\n\r\nconst userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nconst flags = {\r\n    deactivated:null,\r\n    emailVerified:null,\r\n    identityCertified:null,\r\n    incomeApproved:null,\r\n};\r\n\r\nObject.keys(flags).map(key => flags[key]=key);\r\n\r\nexport const userFlags = flags;\r\n\r\nexport const flagFlare = (newState,flag) => {\r\n    if (newState<0) {\r\n        switch (flag) {\r\n            case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_PENDING;\r\n            case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_PENDING;\r\n            case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_PENDING;\r\n            case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_PENDING;\r\n            default: return null;\r\n        }\r\n    } else {\r\n        if (newState) {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_ON;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_ON;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_ON;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_ON;\r\n                default: return null;\r\n            }\r\n        } else {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_OFF;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_OFF;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_OFF;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_OFF;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const activationState = {\r\n    activated:              0,\r\n    userRequestDeactivated: 1,\r\n};\r\n\r\n\r\nexport const detailName = {\r\n    name:               \"name\",\r\n    surname:            \"surname\",\r\n    email:              \"email\",\r\n    document:           \"document\",\r\n    submittedDocument:  \"submittedDocument\",\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../config/user\";\r\n\r\nconst userInit = {\r\n    id: null,\r\n    role: null,\r\n    deactivated: null,\r\n    emailVerified: null,\r\n    identityCertified: null,\r\n    incomeApproved: null,\r\n    name: null,\r\n    surname: null,\r\n    email: null,\r\n    document: null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate: userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu: userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory: false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.RECEIVE_USER_FLAGS:\r\n            return Object.assign({},state,{\r\n                deactivated:            parseInt(action.payload.deactivated)        === state.deactivated       ? state.deactivated         : parseInt(action.payload.deactivated),\r\n                emailVerified:          parseInt(action.payload.emailVerified)      === state.emailVerified     ? state.emailVerified       : parseInt(action.payload.emailVerified),\r\n                identityCertified:      parseInt(action.payload.identityCertified)  === state.identityCertified ? state.identityCertified   : parseInt(action.payload.identityCertified),\r\n                incomeApproved:         parseInt(action.payload.incomeApproved)     === state.incomeApproved    ? state.incomeApproved      : parseInt(action.payload.incomeApproved),\r\n            });\r\n        case actionType.SET_USER_ACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            0,\r\n            });\r\n        case actionType.SET_USER_DEACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            1,\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name         ? action.payload.name       : state.name,\r\n                surname:                action.payload.surname      ? action.payload.surname    : state.surname,\r\n                email:                  action.payload.email        ? action.payload.email      : state.email,\r\n                document:               action.payload.document     ? action.payload.document   : state.document,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                document:               null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    receiveChannel:             null,\r\n    channels: {\r\n        FACEBOOK:               0,\r\n        GOOGLE:                 0,\r\n        LINKEDIN:               0,\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        PAYPAL:                 0,\r\n        KEYBOARD:               0,\r\n        TWITTER:                0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleCode:             null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n                TWITTER:                action.payload.TWITTER              ? action.payload.TWITTER                : state.channels.TWITTER,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_RECEIVE_CHANNEL:\r\n            return Object.assign({},state,{\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations:    [],\r\n    exists:         null,\r\n    id:             null,\r\n    countryId:      null,\r\n    countryName:    null,\r\n    ccyId:          null,\r\n    ccyName:        null,\r\n    ccySymbol:      null,\r\n    countryFilter:  null,\r\n    thrubiPriceSilver:      0,\r\n    thrubiPriceSilverNext:  0,\r\n    thrubiPriceGold:        1.5,\r\n    brake:                  0,\r\n    mincome:                0,\r\n    equality:               0,\r\n    warperMincome:          0,\r\n    warperEquality:         0,\r\n    thrubiFees:             0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                populations:            state.populations,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:            action.payload.populations,\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.population.populationId),\r\n                countryId:              action.payload.population.countryId,\r\n                countryName:            action.payload.population.countryName,\r\n                ccyId:                  action.payload.population.ccyId,\r\n                ccyName:                action.payload.population.ccyName,\r\n                ccySymbol:              action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver:      action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext:  action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                parseFloat(action.payload.stats.mincome),\r\n                equality:               parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                  parseFloat(action.payload.config.brake),\r\n                warperMincome:          parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:         parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                 action.payload.exists,\r\n            });\r\n        case actionType.RECEIVE_COUNTRY_FILTER:\r\n            return Object.assign({},state,{\r\n                countryFilter:          action.payload.countryFilter,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    isMember: false,\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                isMember:                   true,\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsUsers = ({\r\n    nUser,\r\n}) => (\r\n    <span className=\"text-primary text-center small mr-2\">\r\n        A {nUser}-strong community for sustainable income redistribution.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nUser:      state.global.stats.nUser,\r\n});\r\n\r\nconst GlobalStatsUsers = connect(mapStateToProps,{})(_GlobalStatsUsers);\r\n\r\nexport default GlobalStatsUsers;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\n\r\nconst _Header = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-8 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-block mr-2 mt-1 alignBottom text-dark navbar-nav\">\r\n                <a href=\"https://twitter.com/thrubi_org?ref_src=twsrc%5Etfw\" data-show-count=\"false\" className=\"twitter-follow-button alignBottom\">Follow @thrubi_org</a>\r\n            </span>\r\n            <div className=\"d-none d-lg-block alignBottom\"><GlobalStatsUsers/></div>\r\n        </div>\r\n        <div className=\"col-lg-4 d-none d-lg-block float-right mr-0 my-2 text-right consoleFont\">\r\n            <div className=\"navbar-nav small alignBottom\">\r\n                {\r\n                    !ethNetwork || !ethAddress ? \"\" :\r\n                    <div>\r\n                        <span className=\"badge badge-warning d-none d-xl-inline\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Header = connect(mapStateToProps)(_Header);\r\n\r\nexport default Header;","import React,{Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiSilver,\r\n    thrubiSilverNext,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <div className=\"container-fluid p-0 m-0 small consoleFont\">\r\n        <div className=\"col-sm-12 container-fluid row p-0 m-0\">\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-right\">\r\n                <div className=\"col-sm-12 p-0\">1.00Ξ</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">1.00₮S</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮S</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮G</div> */ }\r\n            </div>\r\n            <div className=\"col-2 container-fluid p-0 m-0 text-center\">\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">=</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n            </div>\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-left\">\r\n                <div className=\"col-sm-12 p-0\">{exrate.toFixed(2)}{ccySymbol}</div>\r\n                    { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">{thrubiPriceSilver.toFixed(2)}{ccySymbol}</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next month)</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceGold.toFixed(2)}{ccySymbol}</div> */ }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:              state.client.population.ccySymbol,\r\n    exrate:                 state.global.market.exrate,\r\n    thrubiSilver:           state.client.member.thrubiSilver,\r\n    thrubiSilverNext:       state.client.member.thrubiSilverNext,\r\n    thrubiPriceSilver:      state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext:  state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold:        state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"small row ccyRowContainer\">\r\n        <span className=\"text-left ccyRowElement col-6\">{text}</span>\r\n        <span className={\"text-right ccyRowElement col-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"text-right ccyRowElement col-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelName = {\r\n        NOT_AVAILABLE:          \"N/A\",\r\n        BLOCKCHAIN_ETHEREUM:    \"BLOCKCHAIN_ETHEREUM\",\r\n        KEYBOARD:               \"KEYBOARD\",\r\n        FACEBOOK:               \"FACEBOOK\",\r\n        LINKEDIN:               \"LINKEDIN\",\r\n        GOOGLE:                 \"GOOGLE\",\r\n        PAYPAL:                 \"PAYPAL\",\r\n        TWITTER:                \"TWITTER\",\r\n};\r\n    \r\n    static channelColor(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"blockchain-ethereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"linkedin\";\r\n            case Channel.channelName.GOOGLE:                return \"google\";\r\n            case Channel.channelName.PAYPAL:                return \"paypal\";\r\n            case Channel.channelName.TWITTER:               return \"twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"BlockchainEthereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"Keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"Facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"LinkedIn\";\r\n            case Channel.channelName.GOOGLE:                return \"Google\";\r\n            case Channel.channelName.PAYPAL:                return \"PayPal\";\r\n            case Channel.channelName.TWITTER:               return \"Twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default:        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName(channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Use my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Use my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Using my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Using my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet to use it\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account to use it\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign in with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign in with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign in with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign in with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign in with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign in with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign up with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign up with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign up with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign up with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign up with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign up with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Enable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect a Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect a LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect a Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect a Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Disconnect my Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Disable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Disconnect my Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Disconnect my LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Disconnect my Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Disconnect my PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Disconnect my Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect another Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Update username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect another Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect another LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect another Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect another PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect another Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            default: return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React,{Component} from \"react\";\r\nimport Channel from \"../classes/Channel\";\r\n\r\nclass _ActionButton extends Component {\r\n    render() {\r\n        const {action,payload,text,buttonType,disabled=false,channel=false,noMargin=false} = this.props;\r\n        return (\r\n            <button disabled={disabled}\r\n                    onClick={(event) => {event.preventDefault(); action(payload); }}\r\n                    className={\"btn btn-sm btn-block rounded-0 \"+(noMargin?noMargin:(\"my-2 py-\"+(channel?\"2 \":\"2 \")))+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n                <div className={\"container-fluid row p-0 m-0\"+(noMargin.toString().includes(\"small\")?\" small\":\"\")+(channel?\"\":\" fullWidth\")}>\r\n                    <div className={(channel?\"\":\"fullWidth\")}>\r\n                        {\r\n                            !channel ? \"\" :\r\n                                <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                        }\r\n                        <div className={(channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(channel?\"left\":\"center\")}>{ text ? text : this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"../env/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType,headers} from \"../config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = \"0xeC6020cd56349ED60512c9985BdC5F3B7098315d\";\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e3130195\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xd7d9057eeb8d77c85b055fd0a383e2cbb00c462d8d90a53f7dea6493d376661d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x723ed1db\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xd8875079\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import request from \"request\";\r\nimport {uri,spotApi} from \"../config/market\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {INTERVAL_MARKET_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const startMarketWorker = () => async (dispatch,getState) => {\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(getState().client.population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n};\r\n\r\nexport const stopMarketWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n};\r\n","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER = 30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER = 1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER = 1000;\r\nexport const INTERVAL_USER_WORKER = 1000;\r\nexport const INTERVAL_MEMBER_WORKER = 1000;\r\nexport const INTERVAL_MARKET_WORKER = 1000;\r\nexport const INTERVAL_POPULATION_WORKER = 1000;","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_DELETE:                          \"/member/delete\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_GETFLAGS:                          \"/user/getFlags\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_CERTIFY:                           \"/user/certify\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_SETRECEIVECHANNEL:           \"/userAccess/setReceiveChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport {startPopulationWorker,stopPopulationWorker} from \"./population\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_MEMBER_WORKER} from \"../env/workers\";\r\n\r\nexport const createMember = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()     => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()     => dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+populationId,null)))\r\n        .then   (()     => dispatch(startMemberWorker()))\r\n        .then   (()     => dispatch(startPopulationWorker()))\r\n        .then   (()     => dispatch(startMarketWorker()))\r\n        .catch  (error  => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()     => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null)))\r\n        .then (packet   => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n        .catch(error    => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const removeMembership = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(stopPopulationWorker()))\r\n        .then (()       => dispatch(stopMemberWorker()))\r\n        .then (()       => dispatch(stopMarketWorker()))\r\n        .then (()       => dispatch(processRequest(requestType.POST,endpoint.MEMBER_DELETE+\"/\"+getState().client.population.id,null)))\r\n        .then (()       => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then (()       => dispatch({type:actionType.CLEAR_MEMBER,payload:{}}));\r\n};\r\n\r\nexport const startMemberWorker = () => async (dispatch,getState) => {\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchMember());\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n};\r\n\r\nexport const stopMemberWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n};\r\n\r\nexport const claim = () => async (dispatch,getState) => {\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId,null));\r\n};\r\n\r\nexport const advancedMode = optionAdvancedMode => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = optionViewHistory => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import {processRequest} from \"./server\";\r\nimport {startMemberWorker,stopMemberWorker} from \"./member\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_POPULATION_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    let populations;\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)))\r\n        .then   (p              => populations=p)\r\n        .then   (()             => populations.forEach(population => {if (population.isMember) {\r\n            dispatch(selectPopulation(population));\r\n            dispatch(startPopulationWorker());\r\n            dispatch(startMemberWorker());\r\n            dispatch(startMarketWorker());\r\n        }}))\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()         => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const selectPopulation = population => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    dispatch(stopMemberWorker());\r\n    dispatch(stopPopulationWorker());\r\n    dispatch(stopMarketWorker());\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const startPopulationWorker = () => async (dispatch,getState) => {\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchThrubiPriceSilver(getState().client.population.id));\r\n            dispatch(fetchThrubiPriceSilverNext(getState().client.population.id));\r\n            if (getState().client.user.auth) {\r\n                dispatch(fetchStats(getState().client.population.id));\r\n                dispatch(fetchConfig(getState().client.population.id));\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n};\r\n\r\nexport const stopPopulationWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n};\r\n\r\nconst fetchThrubiPriceSilver = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)))\r\n        .then   (stats          => dispatch({type:actionType.RECEIVE_STATS,payload:{stats}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)))\r\n        .then   (config         => dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changeCountryFilter = countryFilter => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_COUNTRY_FILTER,payload:{countryFilter}}));\r\n};\r\n","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","const linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://eliomattia.github.io/thrubi-client\";\r\n    envGoogleRedirectUri      = \"https://eliomattia.github.io/thrubi-client\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails,activateUserWorker,stopUserWorker} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"../config/redirect\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {facebook} from \"../config/facebook\";\r\nimport {\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams\r\n} from \"../config/auth\";\r\nimport flareBook from \"../config/flare\";\r\nimport userOptions from \"../config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"../env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"../env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = payload => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(stopUserWorker()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = intervalTime => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (error        => {console.error(error);dispatch(logout({autoLogin:false}));});\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+\"/\"+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const getPayChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setPayChannel = payChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (payChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\nexport const getReceiveChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setReceiveChannel = receiveChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (receiveChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[receiveChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETRECEIVECHANNEL,{receiveChannel})))\r\n        .then   (newReceiveChannel=> dispatch({type:actionType.RECEIVE_RECEIVE_CHANNEL,payload:{receiveChannel:newReceiveChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = loginData => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(activateUserWorker()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethNetwork = getState().client.userAccess.ethNetwork;\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!ethNetwork || !ethAddress) throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) {console.error(event.data); return event.data;} else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const createTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updateTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({code:pJson.code,state:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {ethEventType} from \"../config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport flareBook from \"../config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"../env/blockchain_ethereum\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER, INTERVAL_ETH_NETWORK_WORKER} from \"../env/workers\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:false})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = transformEth => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        try {\r\n            transformContract(userId,populationId,ethAddress)\r\n                .send({from:ethAddress,value:transformEth*1e18})\r\n                .once(ethEventType.confirmation,() => {\r\n                        // Thrubi will automatically process the transform via its workers on the backend\r\n                        resolve();\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n","export const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {activationState,detailName,flagFlare,userFlags} from \"../config/user\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_USER_WORKER} from \"../env/workers\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const uploadDocument = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(storeDetails({[detailName.submittedDocument]:true},{overwrite:true})))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_CERTIFY,{})));\r\n};\r\n\r\nconst flareUserFlags = flags => async (dispatch,getState) => {\r\n    Object.keys(userFlags).map(async flag => {\r\n            const currentFlag = getState().client.user[flag];\r\n            const incomingFlag = flags[flag];\r\n            if ((currentFlag!==null)&&(((currentFlag===0)^(incomingFlag===0))||(Math.sign(currentFlag)>0)^(Math.sign(incomingFlag)>0)))\r\n                return await dispatch(emitFlare(flareBook.flareType.INFO,flagFlare(incomingFlag,flag)));\r\n        }\r\n    );\r\n};\r\n\r\nexport const activateUserWorker = () => async (dispatch,getState) => {\r\n    let userWorker = setInterval((() => {\r\n        let userFlags;\r\n        const activity = async () => {\r\n            await Promise.resolve()\r\n                .then (()         => dispatch(processRequest(requestType.GET,endpoint.USER_GETFLAGS,null)))\r\n                .then (flags      => userFlags=flags)\r\n                .then (()         => dispatch(flareUserFlags(userFlags)))\r\n                .then (()         => dispatch({type:actionType.RECEIVE_USER_FLAGS,payload:userFlags}))\r\n                .catch(error      => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_FLAGS)));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_USER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_USER_WORKER,payload:{userWorker}});\r\n};\r\n\r\nexport const stopUserWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.user);\r\n    dispatch({type:actionType.STOP_USER_WORKER,payload:{}});\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_ACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_DEACTIVATE,{activationState:activationState.userRequestDeactivated})))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_DEACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const declareIncome = mDeclared => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then  (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}))\r\n        .then  (()              => dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null)))\r\n        .catch (error           => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/user\";\r\n\r\nclass _MemberDeclareIncome extends Component {\r\n    render() {\r\n        const {mCurrent,ccySymbol,declareIncomeBusy,incomeApproved} = this.props;\r\n        const {declareIncome} = this.props;\r\n        let mDeclared;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <_CcyRow text=\"Declared income\" bold={false} value={mCurrent} ccySymbol={ccySymbol}/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 small py-2\">\r\n                                    Your income of {mCurrent} {ccySymbol} is currently:&nbsp;\r\n                                    <span className={\"badge \"+(incomeApproved>0?\"badge-info\":\"badge-danger\")}>{incomeApproved>0?\"Officially approved\":(incomeApproved<0?\"Pending approval\":\"Not approved\")}</span>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"Busy processing income declaration\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"row\">\r\n                                        <input ref={(input) => mDeclared = input}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 m-0\"\r\n                                               placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-0 m-0\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)}\r\n                                                   buttonType=\"btn-primary m-0\"/>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    mCurrent:           state.client.member.mCurrent,\r\n    incomeApproved:     state.client.user.incomeApproved,\r\n    declareIncomeBusy:  state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst MemberDeclareIncome = connect(mapStateToProps,{declareIncome})(_MemberDeclareIncome);\r\n\r\nexport default MemberDeclareIncome;","import React,{Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberBar extends Component {\r\n    render() {\r\n        const {countryName,ccyId,busy,loggedIn,populationId,identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n\r\n        return (\r\n            <div className=\"container-fluid row p-0 m-0 text-primary text-center mt-3\">\r\n                {\r\n                    busy ? \"Viewport loading...\" :\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12 p-2 m-0 bg-primary text-light text-center mb-3\">\r\n                                    <span className=\"mt-3\"><b>{countryName}</b>&nbsp;<small>{ccyId}&nbsp;<i>pid#{populationId}</i></small></span>\r\n                                    <button className=\"close memberPaddingX text-light\" type=\"button\" onClick={() => removeMembership()} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                </div>\r\n                                {\r\n                                    identityCertified<=0\r\n                                        ?\r\n                                            <div className=\"col-sm-12\">\r\n                                                <MemberInfo />\r\n                                            </div>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <MemberInfo />\r\n                                                </div>\r\n                                                <MemberDeclareIncome />\r\n                                            </Fragment>\r\n                                }\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryName:        state.client.population.countryName,\r\n    ccyId:              state.client.population.ccyId,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    busy:               state.session.busy.component.viewport,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{removeMembership})(_MemberBar);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _RadioButtons = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _RadioButtons;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,receiveChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,setReceiveChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"Create a new Thrubi account\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        [\r\n                                                            {message:\"My payment method:\",          channel:payChannel,     setter:setPayChannel,},\r\n                                                            {message:\"My inbound payment method:\",  channel:receiveChannel, setter:setReceiveChannel,}\r\n                                                        ].map(o =>\r\n                                                            <div className=\"my-4\">\r\n                                                                {o.message}\r\n                                                                <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                           activeFilter={o.channel}\r\n                                                                           checkedFilter={o.channel}\r\n                                                                           action={o.setter}\r\n                                                                           elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                                if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                    key:(key===o.channel?Channel.channelName.NOT_AVAILABLE:key),\r\n                                                                                    channel:key,\r\n                                                                                    color:\"btn-\"+(key===o.channel?\"\":\"outline-\")+Channel.channelColor(key),\r\n                                                                                    disabledFilter:(key===o.channel),\r\n                                                                                    text:Channel.channelUserFriendlyName(key,(key===o.channel?\"USING\":(Channel.channelIsOpen(channels[key])?\"USE\":\"LINK\"))),\r\n                                                                                }); else return null;\r\n                                                                           }).filter(element=>element!==null)}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key,actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    receiveChannel:     state.client.userAccess.receiveChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiBlue\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 everybody p-4 text-primary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Vision</b></h2>\r\n                                <p>\r\n                                    As a Thrubi member, you will receive Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will give you rights to regular payments.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-primary\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-primary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Vision</b></h2>\r\n                                <p>\r\n                                    As a Thrubi member, you will receive Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will give you rights to regular payments.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-primary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiSilver\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 wealthy p-4 text-secondary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Wealthy individuals</b></h2>\r\n                                <p>\r\n                                    As a wealthy individual, you will have access to purchasing Thrubi Gold.\r\n                                    The purchase costs will be awarded to all Thrubi members in your country according to their income.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-secondary\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-secondary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Wealthy individuals</b></h2>\r\n                                <p>\r\n                                    As a wealthy individual, you will have access to purchasing Thrubi Gold.\r\n                                    The purchase costs will be awarded to all Thrubi members in your country according to their income.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-secondary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiGold\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 societies p-4 text-success\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Thriving societies</b></h2>\r\n                                <p>\r\n                                    Thrubi is powered by in-house social models and public <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\r\n                                    Start accepting Thrubi Gold to fulfill tax duties for your country.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-success\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-success\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Thriving societies</b></h2>\r\n                                <p>\r\n                                    Thrubi is powered by in-house social models and public <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\r\n                                    Start accepting Thrubi Gold to fulfill tax duties for your country.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-success\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserIcon extends Component {\r\n    render() {\r\n        const {role, deactivated} = this.props;\r\n        return <img className=\"mt-3 rounded-lg\" alt={role + deactivated} height=\"128\" width=\"128\"\r\n                    src={process.env.PUBLIC_URL + \"/jpg/elio.jpg\"}/>\r\n        /* +\"/icons/\"+role+deactivated+\".png\" */\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role:               state.client.user.role ? \"admin\" : \"user\",\r\n    deactivated:        state.client.user.deactivated ? \"_deactivated\" : \"\",\r\n});\r\n\r\nconst UserIcon = connect(mapStateToProps,{})(_UserIcon);\r\n\r\nexport default UserIcon;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserDetails extends Component {\r\n    render() {\r\n        const {id,name,surname,email,document,deactivated,emailVerified,identityCertified} = this.props;\r\n        return (\r\n            <div className=\"text-center mb-2\">\r\n                <div className=\"text-primary d-inline-block p-0\">\r\n                    <b>{(name || surname) ? (name ? name : \"\") + \" \" + (surname ? surname : \"\") : \"No user data\"}</b>&nbsp;\r\n                </div>\r\n                <div className=\"text-secondary d-inline-block small\">uid#{id}&nbsp;<span\r\n                    className={\"badge \"+(deactivated?\"badge-danger\":\"badge-info\")}>{deactivated?\"Deactivated\":\"Active account\"}</span></div>\r\n                <div className=\"text-secondary small\">email: {email ? email : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(emailVerified?\"badge-info\":\"badge-danger\")}>{emailVerified?\"Email verified\":\"Pending verification\"}</span></div>\r\n                <div className=\"text-secondary small\">document: {document ? document : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(identityCertified>0?\"badge-info\":\"badge-danger\")}>{identityCertified>0?\"Identity certified\":(identityCertified<0?\"Pending certification\":\"Not certified\")}</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    id:                 state.client.user.id,\r\n    name:               state.client.user.name,\r\n    surname:            state.client.user.surname,\r\n    email:              state.client.user.email,\r\n    document:           state.client.user.document,\r\n    deactivated:        state.client.user.deactivated,\r\n    emailVerified:      state.client.user.emailVerified,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst UserDetails = connect(mapStateToProps)(_UserDetails);\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserIcon from './UserIcon';\r\nimport UserDetails from './UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,loggedIn} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <UserIcon />\r\n                                <UserDetails />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    loggedIn:  state.client.userAccess.loggedIn,\r\n    role: state.client.user.role,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {activateUser,deactivateUser} from \"../actions/user\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,{activateUser,deactivateUser})(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,document,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"inputUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"inputUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"inputUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"inputUserDocument\" disabled                                                     type=\"text\" className={fieldClassName} placeholder={document?document:\"Identity not verified\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    document:       state.client.user.document,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {uploadDocument} from \"../actions/user\";\r\n\r\nclass _UserIdentity extends Component {\r\n    render() {\r\n        const {identityCertified,countryName} = this.props;\r\n        const {uploadDocument} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"m-3\">You are applying to become a Thrubi member in the following country: <b>{countryName}</b></div>\r\n                <_ActionButton text={identityCertified===0?\"Upload a document to start the identity certification procedure\":\"Thrubi is certifying your identity\"}\r\n                               disabled={identityCertified!==0} buttonType=\"btn-primary\" action={uploadDocument} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n    countryName:        state.client.population.countryName,\r\n});\r\n\r\nconst UserIdentity = connect(mapStateToProps,{uploadDocument})(_UserIdentity);\r\n\r\nexport default UserIdentity;","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberDelete extends Component {\r\n    render() {\r\n        const {identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n        return (\r\n            <_ActionButton text={(identityCertified>0?\"Abandon country membership\":\"Terminate certification procedure\")+\" and select another country and currency\"}\r\n                           buttonType=\"btn-outline-secondary\" action={removeMembership} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberDelete = connect(mapStateToProps,{removeMembership})(_MemberDelete);\r\n\r\nexport default MemberDelete;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {claim} from \"../actions/member\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <div className=\"text-primary\">\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <_ActionButton action={claim} disabled={!thrubiBlueEth}\r\n                                                               buttonType={\"btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                               text={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"}/>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton\r\n                                        disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                        buttonType={\"btn-\"+(this.state.claimProcedureActive?\"\":\"outline-\")+\"primary\"+(thrubiBlueEth?\" active\":\"\")}\r\n                                        text={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))}\r\n                                        action={() => {this.setState({claimProcedureActive: !this.state.claimProcedureActive});}} />\r\n                                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.claim,\r\n    populationId:       state.client.population.id,\r\n    claimBusy:          state.session.busy.action.claim,\r\n    thrubiBlueEth:      state.client.member.thrubiBlueEth,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    exrate:             state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {advancedMode,viewHistory} from \"../actions/member\";\r\n\r\nclass _MemberOptions extends Component {\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory} = this.props;\r\n        const {color} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <_ActionButton noMargin={\"small m-0 mt-2 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Show less details\":\"Show more details...\"}/>\r\n                {\r\n                    !optionAdvancedMode ? \"\"\r\n                    : <_ActionButton noMargin={\"small m-0 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"Hide history\":\"View history...\"} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,{advancedMode,viewHistory})(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Next month ₮B\"        bold={false} value={ member.thrubiBlueNext}         ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 bold={false} value={ member.thrubiBlueEth}          ccySymbol=\"Ξ\" />\r\n                    <_CcyRow text=\"₮B awards\"                   bold={false} value={ member.thrubiBlueAward}        ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                bold={false} value={member.thrubiBlueAwardTotal}    ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               bold={false} value={member.thrubiBlueClaimTotal}    ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        <MemberOptions color=\"primary\"/>\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from \"./_MemberBlue\";\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-primary\">\r\n                <_ActionButton text=\"Thrubi Blue\" buttonType={\"btn-outline-primary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberBlue\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Claim />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"text-secondary container\">\r\n                                                    {/*<_CcyRow text=\"Your Ξ balance\"\r\n                                                             bold={false}\r\n                                                             value=0 // add a worker that constantly checks Ξ balance from blockchain for account\r\n                                                             ccySymbol=\"Ξ\" />*/}\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees*100).toFixed(1)+\"%)\"}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*thrubiFees}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*(1-thrubiFees)*(!thrubiPriceSilver?0:(1/thrubiPriceSilver))}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm rounded-0\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                <_ActionButton buttonType={\"btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                               disabled={!this.state.transformEthValue}\r\n                                                               action={transform}\r\n                                                               payload={this.state.transformEthValue}\r\n                                                               text={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton disabled={(!thrubiSilver)&&(!this.state.transformProcedureActive)}\r\n                                                   buttonType={\"btn-\"+(this.state.transformProcedureActive?\"\":\"outline-\")+\"secondary\"+(thrubiSilver?\" active\":\"\")}\r\n                                                   text={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))}\r\n                                                   action={() => this.setState({transformProcedureActive: !this.state.transformProcedureActive})} />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React,{Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Next month ₮$\"           bold={false} value={ member.thrubiSilverNext} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\"             bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\"       bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n        <MemberOptions color=\"secondary\" />\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from \"./_MemberSilver\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-secondary\">\r\n                <_ActionButton text=\"Thrubi Silver\" buttonType={\"btn-outline-secondary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberSilver\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceSilver={thrubiPriceSilver}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Transform />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"My Thrubi Gold\"      bold={true}  value={ member.thrubiGold} ccySymbol={\"₮G\"} />\r\n            <_CcyRow text=\"Market value\"        bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <_ActionButton action={() => {}} text=\"Find gold Thrubi marketplace\" buttonType=\"btn-outline-success\" />\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _MemberGold from \"./_MemberGold\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-success\">\r\n                <_ActionButton text=\"Thrubi Gold\" buttonType={\"btn-outline-success\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberGold\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectPopulation,deselectPopulation} from \"../actions/population\";\r\n\r\nclass _Populations extends Component {\r\n    render() {\r\n        const {populations,populationId,countryFilter} = this.props;\r\n        const {selectPopulation,deselectPopulation} = this.props;\r\n\r\n        return (\r\n            populations\r\n                .filter(p => (\r\n                    !countryFilter\r\n                    || p.countryId.toLowerCase().includes(countryFilter.toLowerCase())\r\n                    || p.countryName.toLowerCase().includes(countryFilter.toLowerCase())\r\n                ))\r\n                .map((population,index) => {\r\n                return (\r\n                    <div key={index} className=\"bg-light py-0 px-2 p-lg-0 my-1\">\r\n                        <button\r\n                            className={\"btn btn-sm m-0 p-0 rounded-0 border-0 btn-block btn-outline-primary\"+\r\n                                ((populationId===population.populationId)?\" active\":\"\")}\r\n                            onClick={(populationId===population.populationId) ? (() => deselectPopulation(population)) : (() => selectPopulation(population))}\r\n                        >\r\n                            <div className=\"d-none d-lg-flex container-fluid row p-3 m-0\">\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.countryId}</div>\r\n                                <div className=\"col-lg-5 col-md-10 p-0 m-0 text-left\"> {population.countryName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccyId}</div>\r\n                                <div className=\"col-lg-4 col-md-8  p-0 m-0 text-left\">{population.ccyName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                            </div>\r\n                            <div className=\"d-block d-lg-none my-3 py-3 text-center\">\r\n                                {population.countryName} ({population.countryId}) - {population.ccyName} ({population.ccyId} {population.ccySymbol})\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    populations:        state.client.population.populations,\r\n    countryFilter:      state.client.population.countryFilter,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,deselectPopulation})(_Populations);\r\n\r\nexport default Populations;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/population\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {createMember} from \"../actions/member\";\r\nimport {changeCountryFilter} from \"../actions/population\";\r\n\r\nclass _PopulationSelect extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy,populationsNotAvailable} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if ((!populationsBusy)&&(populationsNotAvailable)) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,populationsNotAvailable,populationId} = this.props;\r\n        const {createMember,changeCountryFilter} = this.props;\r\n        let countryFilterXs,countryFilterLg;\r\n\r\n        return (\r\n            busy ? \"Loading...\" :\r\n                populationsBusy ? \"User populations loading...\" :\r\n                    populationsNotAvailable ? \"No populations found...\" :\r\n                        <Fragment>\r\n                            <div className=\"d-none d-lg-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 wMin800 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={(input) => countryFilterLg = input}\r\n                                               onChange={() => changeCountryFilter(countryFilterLg.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search country\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex d-lg-none flex-column flex-grow-1 align-items-center\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={(input) => countryFilterXs = input}\r\n                                               onChange={() => changeCountryFilter(countryFilterXs.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search country\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n    userId:                     state.client.user.id,\r\n    populationId:               state.client.population.id,\r\n});\r\n\r\nconst PopulationSelect = connect(mapStateToProps,{fetchPopulations,createMember,changeCountryFilter})(_PopulationSelect);\r\n\r\nexport default PopulationSelect;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationAdd extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst PopulationAdd = connect(mapStateToProps,{populationExists,createPopulation})(_PopulationAdd);\r\n\r\nexport default PopulationAdd;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <_ActionButton action={deletePopulation} text=\"Delete Population\" buttonType=\"btn-secondary\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst PopulationDelete = connect(mapStateToProps,{deletePopulation})(_PopulationDelete);\r\n\r\nexport default PopulationDelete;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationTune extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst PopulationTune = connect(mapStateToProps,{tunePopulation})(_PopulationTune);\r\n\r\nexport default PopulationTune;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport UserIdentity from \"./UserIdentity\"\r\nimport MemberDelete from \"./MemberDelete\"\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport PopulationSelect from \"./PopulationSelect\";\r\nimport PopulationAdd from \"./PopulationAdd\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport PopulationDelete from \"./PopulationDelete\";\r\nimport PopulationTune from \"./PopulationTune\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,identityCertified,isMember,member} = this.props;\r\n        const {close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid row p-0 m-0 mb-5\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <Fragment>\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light p-0\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        !isMember ?\r\n                                            <Fragment>\r\n                                                <PopulationSelect />\r\n                                                { !auth ? \"\" : <PopulationAdd /> }\r\n                                            </Fragment>\r\n                                            :\r\n                                            <div className=\"bg-light mr-2 ml-2 ml-lg-0\">\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    identityCertified<=0 ?\r\n                                                        <div>\r\n                                                            <UserIdentity />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            {\r\n                                                                !auth ?\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"container-fluid row p-0 m-0\">\r\n                                                                            <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                                { (member.thrubiBlue || member.thrubiBlueNext || member.thrubiBlueEth\r\n                                                                                    || member.thrubiBlueAward || member.thrubiBlueAwardTotal || member.thrubiBlueClaimTotal)\r\n                                                                                    ? <ThrubiBlue /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                                { (member.thrubiSilver || member.thrubiSilverNext || member.thrubiSilverEth\r\n                                                                                    || member.thrubiSilverTransformTotal)\r\n                                                                                    ? <ThrubiSilver /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                                { (member.thrubiGold)\r\n                                                                                    ? <ThrubiGold /> : \"\"}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                    :\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationDelete/>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationTune />\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                            }\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </div>\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    isMember:           state.client.member.isMember,\r\n    member:             state.client.member,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsCountryCcy = ({\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary text-center small mr-2\">\r\n        Thrubi is launching in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nCountry:   state.global.stats.nCountry,\r\n    nCcy:       state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStatsCountryCcy = connect(mapStateToProps,{})(_GlobalStatsCountryCcy);\r\n\r\nexport default GlobalStatsCountryCcy;","import React,{Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\nimport GlobalStatsCountryCcy from \"./GlobalStatsCountryCcy\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <Fragment>\r\n        <div className=\"d-block d-lg-none container-fluid flex-md-nowrap p-0 footer\">\r\n            <div className=\"col-lg-12 float-right m-0 py-2 pt-2 text-center bg-light\">\r\n                <div className=\"text-dark navbar-nav pb-2\">Welcome to Thrubi!</div>\r\n                <GlobalStatsUsers />\r\n                <GlobalStatsCountryCcy/>\r\n            </div>\r\n            {\r\n                !ethNetwork || !ethAddress ? \"\" :\r\n                    <div className=\"col-lg-12 float-right mx-0 my-0 mb-1 text-center bg-light\">\r\n                        <div className=\"navbar-nav small consoleFont\">\r\n                            <div>\r\n                                <span className=\"badge badge-warning\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                                <span className=\"badge badge-info\">{ethAddress}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className=\"col-lg-12 float-right mx-0 my-0 mb-1 text-center bg-light\">\r\n                <div className=\"my-2 text-center\"><a className=\"nav-link text-primary\" href=\"mailto:info@thrubi.com\">Contact: info@thrubi.com</a></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"d-none d-lg-flex flex-md-nowrap p-0 container-fluid flex-grow-1 footer\">\r\n            <div className=\"col-lg-12 float-right m-0 text-center bg-light\">\r\n                <div className=\"my-2 text-center\">\r\n                    <GlobalStatsCountryCcy/>\r\n                    <a className=\"nav-link text-primary\" href=\"mailto:info@thrubi.com\">Contact: info@thrubi.com</a>\r\n                </div> {/* • */}\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].flareType===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].flareType===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../../config/http\";\r\nimport flareBook from \"../../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../../config/server\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../../env/workers\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()               => dispatch(fetchGlobalStats()))\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary d-flex flex-column align-items-stretch\">\n                <Header />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h4 className=\"display-4 d-inline-block p-2 pb-4\">Rising inequality is toxic to growth</h4>\n                                    <i className=\"d-inline-block\">&nbsp;(Nick Hanauer)</i>\n                                    <h5 className=\"m-0 px-2\">\n                                        Thrubi enables wealthy individuals to transfer money directly and simultaneously to everybody in their country\n                                    </h5>\n                                    <h4 className=\"m-0 p-2\">\n                                        Our purpose? Solve extreme poverty.\n                                    </h4>\n                                    <h5 className=\"m-0 px-2\">\n                                        Create an account now and keep yourself up to date with the latest developments!\n                                    </h5>\n                                    <p className=\"p-2 pt-4\">\n                                        Thrubi is powered by in-house social models and public <a\n                                        target=\"_blank\" className=\"text-primary\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\n                                        target=\"_blank\" className=\"text-primary\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\n                                    </p>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}