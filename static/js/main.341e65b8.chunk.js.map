{"version":3,"sources":["reducers/customMiddleware/thunkWrap.js","config/flare.js","classes/FlareQueue.js","reducers/config/actionTypes.js","actions/flare.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStats.js","components/Titlebar.js","classes/Channel.js","components/_ActionButton.js","env/server.js","config/http.js","actions/server.js","actions/market.js","config/market.js","env/workers.js","config/server.js","actions/population.js","actions/member.js","components/MemberDelete.js","components/MemberOptions.js","components/MemberInfo.js","components/_CcyRow.js","config/blockchain_ethereum.js","env/blockchain_ethereum.js","config/facebook.js","config/auth.js","env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","config/redirect.js","env/redirect.js","actions/user.js","components/MemberDeclareIncome.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","components/Auth.js","components/Info.js","components/UserIcon.js","components/UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/UserIdentity.js","components/Claim.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/PopulationSelect.js","actions/adminMenu.js","components/Countries.js","components/Ccys.js","components/PopulationAdd.js","components/PopulationDelete.js","components/PopulationTune.js","components/User.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","index.js"],"names":["thunkWrap","dispatch","getState","next","action","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","infoFlare","DETECTED_ETH_NETWORK_CHANGE","message","DETECTED_ETH_ADDRESS_CHANGE","DEACTIVATED_ON","DEACTIVATED_OFF","DEACTIVATED_PENDING","EMAIL_VERIFIED_ON","EMAIL_VERIFIED_OFF","EMAIL_VERIFIED_PENDING","IDENTITY_CERTIFIED_ON","IDENTITY_CERTIFIED_OFF","IDENTITY_CERTIFIED_PENDING","INCOME_APPROVED_ON","INCOME_APPROVED_OFF","INCOME_APPROVED_PENDING","errorFlare","USER_ACTIVATION","UNEXPECTED_FLARE","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","ERR_USER_FLAGS","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","FlareQueue","f","this","queue","then","Promise","resolve","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","LOGIN","RECEIVE_USER_FLAGS","SET_USER_ACTIVATED","SET_USER_DEACTIVATED","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CHANGE_POPULATION","RECEIVE_POPULATIONS","CLEAR_POPULATION","SELECT_POPULATION","POPULATION_EXISTS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_USER_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_USER_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","a","waiter","waiterResolve","index","addToQueue","value","session","type","payload","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","error","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","user","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","userWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","claim","transform","userMenu","adminMenu","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","flags","emailVerified","identityCertified","incomeApproved","userFlags","flagFlare","newState","flag","activationState","detailName","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","document","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","channels","FACEBOOK","GOOGLE","LINKEDIN","BLOCKCHAIN_ETHEREUM","PAYPAL","KEYBOARD","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleCode","accessJwt","refreshJwt","userAccess","code","populationInit","exists","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","populationId","parseFloat","config","memberInit","isMember","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","thrubiSilverRedeem","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStats","connect","className","Titlebar","src","alt","height","width","Channel","channelMode","Math","abs","channelName","_ActionButton","text","buttonType","disabled","channel","onClick","event","preventDefault","channelColor","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","startMarketWorker","setInterval","activity","data","amount","stopMarketWorker","clearInterval","endpoint","selectPopulation","deselectPopulation","stopMemberWorker","stopPopulationWorker","startPopulationWorker","fetchThrubiPriceSilver","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","startMemberWorker","_MemberDelete","props","removeMembership","Component","MemberDelete","_MemberOptions","advancedMode","viewHistory","MemberOptions","MemberInfo","toFixed","_CcyRow","bold","isNaN","ethEventType","THRUBI_ABI","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","stopUserWorker","FBlogout","finally","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","console","i","fetchUserChannels","deleteChannel","setPayChannel","channelIsOpen","switchOptionUserMenu","newPayChannel","finalizeLogin","loginData","loginError","fetchDetails","activateUserWorker","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","username","password","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","api","facebookDetails","first_name","last_name","storeDetails","overwrite","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","createPayPal","loginPayPal","addPayPal","updatePayPal","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","opener","postMessage","detail","detailValue","currentFlag","incomingFlag","_MemberDeclareIncome","mDeclared","declareIncomeBusy","ref","input","placeholder","required","MemberDeclareIncome","MemberBar","_RadioButtons","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","disabledFilter","channelIsForPay","mode","actions","Auth","_Info","style","Info","_UserIcon","UserIcon","_UserDetails","UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_UserIdentity","uploadDocument","UserIdentity","_Claim","claimProcedureActive","claimBusy","setState","Claim","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","onSubmit","transformEthRef","onChange","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","_Populations","Populations","_PopulationSelect","reload","populationsBusy","populationsNotAvailable","createMember","PopulationSelect","p","forEach","deletePopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_PopulationAdd","verifyExists","populationExists","createPopulation","PopulationAdd","_PopulationDelete","PopulationDelete","_PopulationTune","newBrake","newWarperMincome","newWarperEquality","tunePopulation","PopulationTune","_User","User","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","data-dismiss","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","process","exact","path","getElementById"],"mappings":"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","file":"static/js/main.341e65b8.chunk.js","sourcesContent":["const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","const flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n        DEACTIVATED_ON:             {thrubiFlareId:\"I003\",message:\"User account is deactivated\"},\r\n        DEACTIVATED_OFF:            {thrubiFlareId:\"I004\",message:\"User account is now active\"},\r\n        DEACTIVATED_PENDING:        {thrubiFlareId:\"I005\",message:\"User account is now pending activation\"},\r\n        EMAIL_VERIFIED_ON:          {thrubiFlareId:\"I006\",message:\"Email address has been verified\"},\r\n        EMAIL_VERIFIED_OFF:         {thrubiFlareId:\"I007\",message:\"Unverified email address detected. Please check your inbox.\"},\r\n        EMAIL_VERIFIED_PENDING:     {thrubiFlareId:\"I008\",message:\"Email address pending verification. Please check your inbox.\"},\r\n        IDENTITY_CERTIFIED_ON:      {thrubiFlareId:\"I009\",message:\"Identity document certified\"},\r\n        IDENTITY_CERTIFIED_OFF:     {thrubiFlareId:\"I010\",message:\"Non-certified identity document detected. Please certify.\"},\r\n        IDENTITY_CERTIFIED_PENDING: {thrubiFlareId:\"I011\",message:\"Identity certification procedure pending. Please wait.\"},\r\n        INCOME_APPROVED_ON:         {thrubiFlareId:\"I012\",message:\"Declared income has been officially approved\"},\r\n        INCOME_APPROVED_OFF:        {thrubiFlareId:\"I013\",message:\"Newly declared income is not approved, please check.\"},\r\n        INCOME_APPROVED_PENDING:    {thrubiFlareId:\"I014\",message:\"Newly declared income is pending approval. Please wait.\"},\r\n    },\r\n    errorFlare: {\r\n        USER_ACTIVATION:            {thrubiFlareId:\"0021\",message:\"User activation module error\"},\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0017\",message:\"Error updating user pay channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0018\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0019\",message:\"Error fetching channels\"},\r\n        ERR_USER_FLAGS:             {thrubiFlareId:\"0020\",message:\"Could not update user flags\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n};\r\n\r\nexport default flareBook;\r\n\r\nexport const TIMEOUT_FLARE_DELETE = 7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG = 30000;","class FlareQueue {\r\n    static queue = Promise.resolve();\r\n\r\n    static addToQueue(f) {\r\n        this.queue = this.queue.then(f);\r\n    }\r\n}\r\n\r\nexport default FlareQueue;","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    LOGIN: null,\r\n    RECEIVE_USER_FLAGS: null,\r\n    SET_USER_ACTIVATED: null,\r\n    SET_USER_DEACTIVATED: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    CLEAR_POPULATION: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_USER_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_USER_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import FlareQueue from \"../classes/FlareQueue\";\r\nimport flareBook,{TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const getFlareNext = () => async (dispatch,getState) => {\r\n    let waiterResolve;\r\n    let waiter = new Promise(resolve => waiterResolve=resolve);\r\n    let index = {};\r\n    FlareQueue.addToQueue(() => Promise.resolve()\r\n        .then(()            => index.value = getState().session.flare.next)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => waiterResolve(index.value))\r\n    );\r\n    return waiter;\r\n};\r\n\r\nexport const emitFlare = (flareType,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    return Promise.resolve()\r\n        .then(()            => dispatch(getFlareNext()))\r\n        .then(next          => index = next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,flareType,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","import flareBook from \"../../config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      action.payload.flareType,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      state.flares[action.payload.index].flareType,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    user: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_USER_WORKER:\r\n            return Object.assign({},state,{user:action.payload.userWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:null,});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:null,});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:null,});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:null,});\r\n        case actionType.STOP_USER_WORKER:\r\n            return Object.assign({},state,{user:null,});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:null,});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:null,});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:null,});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","import flareBook from \"./flare\";\r\n\r\nconst userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nconst flags = {\r\n    deactivated:null,\r\n    emailVerified:null,\r\n    identityCertified:null,\r\n    incomeApproved:null,\r\n};\r\n\r\nObject.keys(flags).map(key => flags[key]=key);\r\n\r\nexport const userFlags = flags;\r\n\r\nexport const flagFlare = (newState,flag) => {\r\n    if (newState<0) {\r\n        switch (flag) {\r\n            case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_PENDING;\r\n            case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_PENDING;\r\n            case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_PENDING;\r\n            case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_PENDING;\r\n            default: return null;\r\n        }\r\n    } else {\r\n        if (newState) {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_ON;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_ON;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_ON;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_ON;\r\n                default: return null;\r\n            }\r\n        } else {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_OFF;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_OFF;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_OFF;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_OFF;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const activationState = {\r\n    activated:              0,\r\n    userRequestDeactivated: 1,\r\n};\r\n\r\n\r\nexport const detailName = {\r\n    name:               \"name\",\r\n    surname:            \"surname\",\r\n    email:              \"email\",\r\n    document:           \"document\",\r\n    submittedDocument:  \"submittedDocument\",\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../config/user\";\r\n\r\nconst userInit = {\r\n    id: null,\r\n    role: null,\r\n    deactivated: null,\r\n    emailVerified: null,\r\n    identityCertified: null,\r\n    incomeApproved: null,\r\n    name: null,\r\n    surname: null,\r\n    email: null,\r\n    document: null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate: userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu: userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory: false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.RECEIVE_USER_FLAGS:\r\n            return Object.assign({},state,{\r\n                deactivated:            parseInt(action.payload.deactivated)        === state.deactivated       ? state.deactivated         : parseInt(action.payload.deactivated),\r\n                emailVerified:          parseInt(action.payload.emailVerified)      === state.emailVerified     ? state.emailVerified       : parseInt(action.payload.emailVerified),\r\n                identityCertified:      parseInt(action.payload.identityCertified)  === state.identityCertified ? state.identityCertified   : parseInt(action.payload.identityCertified),\r\n                incomeApproved:         parseInt(action.payload.incomeApproved)     === state.incomeApproved    ? state.incomeApproved      : parseInt(action.payload.incomeApproved),\r\n            });\r\n        case actionType.SET_USER_ACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            0,\r\n            });\r\n        case actionType.SET_USER_DEACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            1,\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name         ? action.payload.name       : state.name,\r\n                surname:                action.payload.surname      ? action.payload.surname    : state.surname,\r\n                email:                  action.payload.email        ? action.payload.email      : state.email,\r\n                document:               action.payload.document     ? action.payload.document   : state.document,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                document:               null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    channels: {\r\n        FACEBOOK:               0,\r\n        GOOGLE:                 0,\r\n        LINKEDIN:               0,\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        PAYPAL:                 0,\r\n        KEYBOARD:               0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleCode:             null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                autoLogin:              true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations:    [],\r\n    exists:         null,\r\n    id:             null,\r\n    countryId:      null,\r\n    countryName:    null,\r\n    ccyId:          null,\r\n    ccyName:        null,\r\n    ccySymbol:      null,\r\n    thrubiPriceSilver:      0,\r\n    thrubiPriceSilverNext:  0,\r\n    thrubiPriceGold:        1.5,\r\n    brake:                  0,\r\n    mincome:                0,\r\n    equality:               0,\r\n    warperMincome:          0,\r\n    warperEquality:         0,\r\n    thrubiFees:             0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                populations:            state.populations,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:            action.payload.populations,\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.population.populationId),\r\n                countryId:              action.payload.population.countryId,\r\n                countryName:            action.payload.population.countryName,\r\n                ccyId:                  action.payload.population.ccyId,\r\n                ccyName:                action.payload.population.ccyName,\r\n                ccySymbol:              action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver:      action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext:  action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                parseFloat(action.payload.stats.mincome),\r\n                equality:               parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                  parseFloat(action.payload.config.brake),\r\n                warperMincome:          parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:         parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                 action.payload.exists,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    isMember: false,\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                isMember:                   true,\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverRedeem:         parseFloat(action.payload.member.thrubiSilverRedeem),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStats = ({\r\n    nUser,\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary text-center small mr-2\">\r\n        A {nUser}-strong community for worldwide income redistribution. Available in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    nUser: state.global.stats.nUser,\r\n    nCountry: state.global.stats.nCountry,\r\n    nCcy: state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStats = connect(mapStateToProps,{})(_GlobalStats);\r\n\r\nexport default GlobalStats;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Titlebar = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-9 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-none d-xl-block mr-2 alignBottom text-dark navbar-nav\">Welcome to Thrubi!</span>\r\n            <div className=\"d-none d-lg-inline-block alignBottom\"><GlobalStats/></div>\r\n        </div>\r\n        <div className=\"col-lg-3 d-none d-lg-block float-right mr-0 my-2 text-right consoleFont\">\r\n            <div className=\"navbar-nav small alignBottom\">\r\n                {ethNetwork&&ethAddress?(\r\n                    <div>\r\n                        <span className=\"badge badge-warning d-none d-xl-inline\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                ):(\"Accessing blockchain data\")}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Titlebar = connect(mapStateToProps)(_Titlebar);\r\n\r\nexport default Titlebar;","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelColor(channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"blockchain-ethereum\";\r\n            case \"KEYBOARD\":            return \"keyboard\";\r\n            case \"FACEBOOK\":            return \"facebook\";\r\n            case \"LINKEDIN\":            return \"linkedin\";\r\n            case \"GOOGLE\":              return \"google\";\r\n            case \"PAYPAL\":              return \"paypal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName(channelName) {\r\n        switch (channelName) {\r\n            case \"BLOCKCHAIN_ETHEREUM\": return \"BlockchainEthereum\";\r\n            case \"KEYBOARD\":            return \"Keyboard\";\r\n            case \"FACEBOOK\":            return \"Facebook\";\r\n            case \"LINKEDIN\":            return \"LinkedIn\";\r\n            case \"GOOGLE\":              return \"Google\";\r\n            case \"PAYPAL\":              return \"PayPal\";\r\n            default:                    return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName(channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Use my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Use my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Using my Ethereum wallet\";\r\n                case \"PAYPAL\":              return \"Using my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet to use it\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account to use it\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign in with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign in with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign in with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign in with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign in with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Sign up with Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Sign up with username/password\";\r\n                case \"FACEBOOK\":            return \"Sign up with Facebook\";\r\n                case \"LINKEDIN\":            return \"Sign up with LinkedIn\";\r\n                case \"GOOGLE\":              return \"Sign up with Google\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect an Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Enable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Connect a Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect a LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect a Google account\";\r\n                case \"PAYPAL\":              return \"Connect a PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Disable access via my Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Disable credentials (username/password)\";\r\n                case \"FACEBOOK\":            return \"Disconnect my Facebook account\";\r\n                case \"LINKEDIN\":            return \"Disconnect my LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Disconnect my Google account\";\r\n                case \"PAYPAL\":              return \"Disconnect my PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case \"BLOCKCHAIN_ETHEREUM\": return \"Connect another Ethereum wallet\";\r\n                case \"KEYBOARD\":            return \"Update username/password\";\r\n                case \"FACEBOOK\":            return \"Connect another Facebook account\";\r\n                case \"LINKEDIN\":            return \"Connect another LinkedIn account\";\r\n                case \"GOOGLE\":              return \"Connect another Google account\";\r\n                case \"PAYPAL\":              return \"Connect another PayPal account\";\r\n                default:                    return \"\";\r\n            }\r\n            default: return \"\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _ActionButton = ({action,payload,text,buttonType,disabled=false,channel=false}) => (\r\n    <button disabled={disabled}\r\n            onClick={(event) => {event.preventDefault(); action(payload); }}\r\n            className={\"btn btn-sm btn-block rounded-0 my-2 py-\"+(channel?\"2 \":\"2 \")+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n        <div className={\"container-fluid row p-0 m-0\"+(channel?\"\":\" fullWidth\")}>\r\n            <div className={(channel?\"\":\"fullWidth\")}>\r\n                {\r\n                    !channel ? \"\" :\r\n                        <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                }\r\n                <div className={(channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(channel?\"left\":\"center\")}>{text}</div>\r\n            </div>\r\n        </div>\r\n    </button>\r\n);\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"../env/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType,headers} from \"../config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","import request from \"request\";\r\nimport {uri,spotApi} from \"../config/market\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {INTERVAL_MARKET_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const startMarketWorker = () => async (dispatch,getState) => {\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(getState().client.population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n};\r\n\r\nexport const stopMarketWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n};\r\n","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER = 30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER = 1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER = 1000;\r\nexport const INTERVAL_USER_WORKER = 1000;\r\nexport const INTERVAL_MEMBER_WORKER = 1000;\r\nexport const INTERVAL_MARKET_WORKER = 1000;\r\nexport const INTERVAL_POPULATION_WORKER = 1000;","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_DELETE:                          \"/member/delete\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_GETFLAGS:                          \"/user/getFlags\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_CERTIFY:                           \"/user/certify\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {startMemberWorker,stopMemberWorker} from \"./member\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_POPULATION_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    let populations;\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)))\r\n        .then   (p              => populations=p)\r\n        .then   (()             => populations.forEach(population => {if (population.isMember) {\r\n            dispatch(selectPopulation(population));\r\n            dispatch(startPopulationWorker());\r\n            dispatch(startMemberWorker());\r\n            dispatch(startMarketWorker());\r\n        }}))\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()         => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const selectPopulation = population => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    dispatch(stopMemberWorker());\r\n    dispatch(stopPopulationWorker());\r\n    dispatch(stopMarketWorker());\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const startPopulationWorker = () => async (dispatch,getState) => {\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchThrubiPriceSilver(getState().client.population.id));\r\n            dispatch(fetchThrubiPriceSilverNext(getState().client.population.id));\r\n            if (getState().client.user.auth) {\r\n                dispatch(fetchStats(getState().client.population.id));\r\n                dispatch(fetchConfig(getState().client.population.id));\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n};\r\n\r\nexport const stopPopulationWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n};\r\n\r\nconst fetchThrubiPriceSilver = (populationId) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = (populationId) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = (populationId) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)))\r\n        .then   (stats          => dispatch({type:actionType.RECEIVE_STATS,payload:{stats}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = (populationId) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()                 => dispatch(processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)))\r\n        .then   (config             => dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}}))\r\n        .catch  (error              => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport {startPopulationWorker,stopPopulationWorker} from \"./population\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_MEMBER_WORKER} from \"../env/workers\";\r\n\r\nexport const createMember = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()     => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()     => dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+populationId,null)))\r\n        .then   (()     => dispatch(startMemberWorker()))\r\n        .then   (()     => dispatch(startPopulationWorker()))\r\n        .then   (()     => dispatch(startMarketWorker()))\r\n        .catch  (error  => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()     => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null)))\r\n        .then (packet   => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n        .catch(error    => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const removeMembership = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(stopPopulationWorker()))\r\n        .then (()       => dispatch(stopMemberWorker()))\r\n        .then (()       => dispatch(stopMarketWorker()))\r\n        .then (()       => dispatch(processRequest(requestType.POST,endpoint.MEMBER_DELETE+\"/\"+getState().client.population.id,null)))\r\n        .then (()       => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then (()       => dispatch({type:actionType.CLEAR_MEMBER,payload:{}}));\r\n};\r\n\r\nexport const startMemberWorker = () => async (dispatch,getState) => {\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchMember());\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n};\r\n\r\nexport const stopMemberWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n};\r\n\r\nexport const claim = () => async (dispatch,getState) => {\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId,null));\r\n};\r\n\r\nexport const advancedMode = optionAdvancedMode => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = optionViewHistory => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberDelete extends Component {\r\n    render() {\r\n        const {identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n        return (\r\n            <_ActionButton text={(identityCertified>0?\"Abandon country membership\":\"Terminate certification procedure\")+\" and select another country and currency\"}\r\n                           buttonType=\"btn-outline-secondary\" action={removeMembership} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberDelete = connect(mapStateToProps,{removeMembership})(_MemberDelete);\r\n\r\nexport default MemberDelete;\r\n\r\n","import React, {Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {advancedMode,viewHistory} from \"../actions/member\";\r\nimport MemberDelete from \"./MemberDelete\";\r\n\r\nclass _MemberOptions extends Component {\r\n\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory} = this.props;\r\n\r\n        return (\r\n            <div className=\"navbar-light col-lg-4\">\r\n                <_ActionButton buttonType={\"p-0 btn-outline-primary\"+(optionAdvancedMode?\" active\":\"\")} action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Advanced\":\"Basic\"}/>\r\n                <_ActionButton buttonType={\"p-0 btn-outline-primary\"+(optionViewHistory?\" active\":\"\")} disabled={!optionAdvancedMode} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"History\":\"History\"} />\r\n                <MemberDelete />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,{advancedMode,viewHistory})(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <div className=\"col-sm-4 container-fluid p-0 m-0 small\">\r\n        <div className=\"col-sm-12 container-fluid row p-0 m-0\">\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-right\">\r\n                <div className=\"col-sm-12 p-0\">1.00Ξ</div>\r\n                <div className=\"col-sm-12 p-0\">1.00$₮</div>\r\n                <div className=\"col-sm-12 p-0\">1.00$₮</div>\r\n                <div className=\"col-sm-12 p-0\">1.00₲₮</div>\r\n            </div>\r\n            <div className=\"col-2 container-fluid p-0 m-0 text-center\">\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n            </div>\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-left\">\r\n                <div className=\"col-sm-12 p-0\">{exrate.toFixed(2)}{ccySymbol}</div>\r\n                <div className=\"col-sm-12 p-0\">{thrubiPriceSilver.toFixed(2)}{ccySymbol}</div>\r\n                <div className=\"col-sm-12 p-0\">{thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next month)</div>\r\n                <div className=\"col-sm-12 p-0\">{thrubiPriceGold.toFixed(2)}{ccySymbol}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext: state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"small row ccyRowContainer\">\r\n        <span className=\"text-left ccyRowElement col-6\">{text}</span>\r\n        <span className={\"text-right ccyRowElement col-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"text-right ccyRowElement col-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = '0xb198482C48Ef0e89df3597b0f7250F88c51D6759';\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x199cf6ad2e6ce4f20f4f77bf95042862858fe7b5fb2240b17ec190107e6b41e8\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x6b8d5104af05a3749790a02190abe69665e450a2af5f4dd52ac361f9a8a22bd5\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3259af21\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xf92b929f\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","const linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://eliomattia.github.io/thrubi-client\";\r\n    envGoogleRedirectUri      = \"https://eliomattia.github.io/thrubi-client\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails,activateUserWorker,stopUserWorker} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"../config/redirect\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {facebook} from \"../config/facebook\";\r\nimport {\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams\r\n} from \"../config/auth\";\r\nimport flareBook from \"../config/flare\";\r\nimport userOptions from \"../config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"../env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"../env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = payload => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(stopUserWorker()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = intervalTime => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (error        => {console.error(error);dispatch(logout({autoLogin:true}));});\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+\"/\"+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const setPayChannel = (payChannel) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = (loginData) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(activateUserWorker()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) {console.error(event.data); return event.data;} else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({code:pJson.code,state:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {ethEventType} from \"../config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport flareBook from \"../config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"../env/blockchain_ethereum\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER, INTERVAL_ETH_NETWORK_WORKER} from \"../env/workers\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:true})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = (transformEth) => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        transformContract(ethAddress,populationId,userId)\r\n            .send({from:ethAddress,value:transformEth*1e18})\r\n            .once(ethEventType.confirmation,() => {\r\n                    // Thrubi will automatically process the transform via its workers on the backend\r\n                    resolve();\r\n                }\r\n            );\r\n    });\r\n};\r\n\r\n\r\n","export const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {activationState,detailName,flagFlare,userFlags} from \"../config/user\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_USER_WORKER} from \"../env/workers\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const uploadDocument = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(storeDetails({[detailName.submittedDocument]:true},{overwrite:true})))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_CERTIFY,{})));\r\n};\r\n\r\nconst flareUserFlags = flags => async (dispatch,getState) => {\r\n    Object.keys(userFlags).map(async flag => {\r\n            const currentFlag = getState().client.user[flag];\r\n            const incomingFlag = flags[flag];\r\n            if ((currentFlag!==null)&&(((currentFlag===0)^(incomingFlag===0))||(Math.sign(currentFlag)>0)^(Math.sign(incomingFlag)>0)))\r\n                return await dispatch(emitFlare(flareBook.flareType.INFO,flagFlare(incomingFlag,flag)));\r\n        }\r\n    );\r\n};\r\n\r\nexport const activateUserWorker = () => async (dispatch,getState) => {\r\n    let userWorker = setInterval((() => {\r\n        let userFlags;\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()         => dispatch(processRequest(requestType.GET,endpoint.USER_GETFLAGS,null)))\r\n                .then (flags      => userFlags=flags)\r\n                .then (()         => dispatch(flareUserFlags(userFlags)))\r\n                .then (()         => dispatch({type:actionType.RECEIVE_USER_FLAGS,payload:userFlags}))\r\n                .catch(error      => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_FLAGS)));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_USER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_USER_WORKER,payload:{userWorker}});\r\n};\r\n\r\nexport const stopUserWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.user);\r\n    dispatch({type:actionType.STOP_USER_WORKER,payload:{}});\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_ACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_DEACTIVATE,{activationState:activationState.userRequestDeactivated})))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_DEACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const declareIncome = mDeclared => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then  (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}))\r\n        .then  (()              => dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null)))\r\n        .catch (error           => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/user\";\r\n\r\nclass _MemberDeclareIncome extends Component {\r\n    render() {\r\n        const {mCurrent,ccySymbol,declareIncomeBusy,incomeApproved} = this.props;\r\n        const {declareIncome} = this.props;\r\n        let mDeclared;\r\n\r\n        return (\r\n            <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                {\r\n                    declareIncomeBusy?\"Busy processing income declaration\":\r\n                        <Fragment>\r\n                            <div className=\"col-lg-12\">\r\n                                <_CcyRow text=\"Declared income\" bold={false} value={mCurrent} ccySymbol={ccySymbol}/>\r\n                            </div>\r\n                            <div className=\"col-lg-12 small\">\r\n                                Your income is currently:&nbsp;\r\n                                <span className={\"badge \"+(incomeApproved>0?\"badge-info\":\"badge-danger\")}>{incomeApproved>0?\"Officially approved\":(incomeApproved<0?\"Pending approval\":\"Not approved\")}</span>\r\n                            </div>\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"row\">\r\n                                    <input ref={(input) => mDeclared = input}\r\n                                           type=\"text\" className=\"form-control form-control-sm rounded-0 m-0\"\r\n                                           placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-12 p-0 m-0\">\r\n                                <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)}\r\n                                               buttonType=\"btn-primary m-0\"/>\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    mCurrent:           state.client.member.mCurrent,\r\n    incomeApproved:     state.client.user.incomeApproved,\r\n    declareIncomeBusy:  state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst MemberDeclareIncome = connect(mapStateToProps,{declareIncome})(_MemberDeclareIncome);\r\n\r\nexport default MemberDeclareIncome;","import React, {Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport MemberOptions from \"./MemberOptions\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\n\r\nconst _MemberBar = ({\r\n    countryName,\r\n    ccyId,\r\n    busy,\r\n    loggedIn,\r\n    populationId,\r\n}) => (\r\n    <div className=\"container-fluid row p-0 m-0 text-primary text-center p-0 mt-3\">\r\n        {\r\n            busy ? \"Viewport loading...\" :\r\n                ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                    <Fragment>\r\n                        <div className=\"col-lg-12 p-0 m-0 bg-primary text-light text-center mb-3\">\r\n                            <div><b>{countryName}</b>&nbsp;<small>{ccyId}&nbsp;<i>pid#{populationId}</i></small></div>\r\n                        </div>\r\n                        <MemberInfo />\r\n                        <MemberDeclareIncome />\r\n                        <MemberOptions />\r\n                    </Fragment>\r\n        }\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryName: state.client.population.countryName,\r\n    ccyId: state.client.population.ccyId,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    busy: state.session.busy.component.viewport,\r\n    loggedIn: state.client.userAccess.loggedIn,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{})(_MemberBar);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _RadioButtons = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" displayInlineBlock text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _RadioButtons;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from './_ActionButton';\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"Create a new Thrubi account\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        <div className=\"my-4\">\r\n                                                            My payment method:\r\n                                                            <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                       activeFilter={payChannel}\r\n                                                                       checkedFilter={payChannel}\r\n                                                                       action={setPayChannel}\r\n                                                                       elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                            if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                key:key,\r\n                                                                                channel:key,\r\n                                                                                color:\"btn-\" + (Channel.channelIsOpen(channels[key]) ? \"\" : \"outline-\")+Channel.channelColor(key),\r\n                                                                                disabledFilter:(key === payChannel),\r\n                                                                                text:Channel.channelUserFriendlyName(key, (key === payChannel ? \"USING\" : (Channel.channelIsOpen(channels[key]) ? \"USE\" : \"LINK\")))\r\n                                                                            }); else return null;\r\n                                                                       }).filter(element=>element!==null)}/>\r\n                                                        </div>\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key, actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiBlue\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 everybody\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-primary\"><div className=\"opaque\">\r\n                                <h3>Vision</h3>\r\n                                <p>\r\n                                    Be part of the sustainable societies of the future.\r\n                                    You will be awarded Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will in turn give you the rights to regular payments.\r\n                                    Nobody can be extremely poor or extremely rich with Thrubi.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-primary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiSilver\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 wealthy\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-secondary\"><div className=\"opaque\">\r\n                                <h3>Wealthy individuals</h3>\r\n                                <p>\r\n                                    If you are an investor, choose a sustainable future. As a wealthy individual,\r\n                                    you will have access to purchasing Thrubi Gold, the investment tool of sustainable societies,\r\n                                    only by redeeming Thrubi Silver, which you will be awarded according\r\n                                    to your current income. Governments will be accepting Thrubi Gold to pay tax duties.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-secondary\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiGold\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid align-top m-0 societies\" />\r\n                            <div className=\"border-0 container-fluid align-top m-0 overflow-hidden topLeft p-4 text-success\"><div className=\"opaque\">\r\n                                <h3>Thriving societies</h3>\r\n                                <p>\r\n                                    If you are a sovereign government, you want your people to thrive.\r\n                                    Thrubi stabilizes a country's income distribution.\r\n                                    Growth is shared non-equally amongst all participants of a society:\r\n                                    people with a higher net worth will stay richer.\r\n                                    Thrubi, however, will ensure that societies become richer as a whole.\r\n                                </p>\r\n                                <_ActionButton text=\"Learn more\" action={() => {}} buttonType=\"btn-outline-success\" />\r\n                            </div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserIcon extends Component {\r\n    render() {\r\n        const {role, deactivated} = this.props;\r\n        return <img className=\"mt-3 rounded-lg\" alt={role + deactivated} height=\"128\" width=\"128\"\r\n                    src={process.env.PUBLIC_URL + \"/jpg/elio.jpg\"}/>\r\n        /* +\"/icons/\"+role+deactivated+\".png\" */\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    role:               state.client.user.role ? \"admin\" : \"user\",\r\n    deactivated:        state.client.user.deactivated ? \"_deactivated\" : \"\",\r\n});\r\n\r\nconst UserIcon = connect(mapStateToProps,{})(_UserIcon);\r\n\r\nexport default UserIcon;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserDetails extends Component {\r\n    render() {\r\n        const {id,name,surname,email,document,deactivated,emailVerified,identityCertified} = this.props;\r\n        return (\r\n            <div className=\"text-center mb-2\">\r\n                <div className=\"text-primary displayInlineBlock p-0\">\r\n                    <b>{(name || surname) ? (name ? name : \"\") + \" \" + (surname ? surname : \"\") : \"No user data\"}</b>&nbsp;\r\n                </div>\r\n                <div className=\"text-secondary displayInlineBlock small\">uid#{id}&nbsp;<span\r\n                    className={\"badge \"+(deactivated?\"badge-danger\":\"badge-info\")}>{deactivated?\"Deactivated\":\"Active account\"}</span></div>\r\n                <div className=\"text-secondary small\">email: {email ? email : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(emailVerified?\"badge-info\":\"badge-danger\")}>{emailVerified?\"Email verified\":\"Pending verification\"}</span></div>\r\n                <div className=\"text-secondary small\">document: {document ? document : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(identityCertified>0?\"badge-info\":\"badge-danger\")}>{identityCertified>0?\"Identity certified\":(identityCertified<0?\"Pending certification\":\"Not certified\")}</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    id:                 state.client.user.id,\r\n    name:               state.client.user.name,\r\n    surname:            state.client.user.surname,\r\n    email:              state.client.user.email,\r\n    document:           state.client.user.document,\r\n    deactivated:        state.client.user.deactivated,\r\n    emailVerified:      state.client.user.emailVerified,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst UserDetails = connect(mapStateToProps)(_UserDetails);\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserIcon from './UserIcon';\r\nimport UserDetails from './UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,loggedIn} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <UserIcon />\r\n                                <UserDetails />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    loggedIn:  state.client.userAccess.loggedIn,\r\n    role: state.client.user.role,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {activateUser,deactivateUser} from \"../actions/user\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,{activateUser,deactivateUser})(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,document,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"inputUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"inputUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"inputUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"inputUserDocument\" disabled                                                     type=\"text\" className={fieldClassName} placeholder={document?document:\"Identity not verified\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    document:       state.client.user.document,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {uploadDocument} from \"../actions/user\";\r\n\r\nclass _UserIdentity extends Component {\r\n    render() {\r\n        const {identityCertified,countryName} = this.props;\r\n        const {uploadDocument} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"my-3\">You are applying to become a Thrubi member in the following country: <b>{countryName}</b></div>\r\n                <_ActionButton text={identityCertified===0?\"Upload a document to start the identity certification procedure\":\"Thrubi is certifying your identity\"}\r\n                               disabled={identityCertified!==0} buttonType=\"btn-primary\" action={uploadDocument} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n    countryName:        state.client.population.countryName,\r\n});\r\n\r\nconst UserIdentity = connect(mapStateToProps,{uploadDocument})(_UserIdentity);\r\n\r\nexport default UserIdentity;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {claim} from \"../actions/member\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <div className=\"text-primary\">\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <_ActionButton action={claim} disabled={!thrubiBlueEth}\r\n                                                               buttonType={\"btn btn-sm p-0 btn-block btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                               text={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"}/>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton\r\n                                        disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                        buttonType={\"btn-\"+(this.state.claimProcedureActive?\"\":\"outline-\")+\"primary\"+(thrubiBlueEth?\" active\":\"\")}\r\n                                        text={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))}\r\n                                        action={() => {this.setState({claimProcedureActive: !this.state.claimProcedureActive});}} />\r\n                                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.claim,\r\n    populationId: state.client.population.id,\r\n    claimBusy: state.session.busy.action.claim,\r\n    thrubiBlueEth: state.client.member.thrubiBlueEth,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮&#x20BF;\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮&#x20BF;\" />\r\n                    <_CcyRow text=\"Next month ₮&#x20BF;\"        bold={false} value={ member.thrubiBlueNext}         ccySymbol=\"₮&#x20BF;\" />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 bold={false} value={ member.thrubiBlueEth}          ccySymbol=\"Ξ\" />\r\n                    <_CcyRow text=\"₮₿ awards\"                   bold={false} value={ member.thrubiBlueAward}        ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮&#x20BF;\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮&#x20BF;\" />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                bold={false} value={member.thrubiBlueAwardTotal}    ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               bold={false} value={member.thrubiBlueClaimTotal}    ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from \"./_MemberBlue\";\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-primary\">\r\n                <_ActionButton text=\"Thrubi Blue\" buttonType={\"btn-outline-primary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberBlue\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Claim />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"text-secondary container\">\r\n                                                    <_CcyRow text=\"Your Ξ balance\"\r\n                                                             bold={false}\r\n                                                             value={0 /* add a worker that constantly checks Ξ balance from blockchain for account */ }\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue * exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees * 100).toFixed(1)+\"%)\"}\r\n                                                             bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * thrubiFees)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             bold={false}\r\n                                                             value={((this.state.transformEthValue * exrate) * (1-thrubiFees) / thrubiPriceSilver)}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <form onSubmit={async (event) => {\r\n                                                    event.preventDefault();\r\n                                                    transform(this.state.transformEthValue);\r\n                                                }}>\r\n                                                    <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm rounded-0\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                    <input className={\"btn btn-sm p-0 rounded-0 btn-block btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                           type=\"submit\"\r\n                                                           disabled={!this.state.transformEthValue}\r\n                                                           value={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                                </form>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton disabled={((!thrubiSilver)&&(!this.state.transformProcedureActive))}\r\n                                                   buttonType={\"btn-\"+(this.state.transformProcedureActive?\"\":\"outline-\")+\"secondary\"+(thrubiSilver?\" active\":\"\")}\r\n                                                   text={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))}\r\n                                                   action={() => this.setState({transformProcedureActive: !this.state.transformProcedureActive})} />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true} value={ member.thrubiSilver} ccySymbol={\"₮$\"} />\r\n                    <_CcyRow text=\"Next month ₮$\"           bold={false} value={ member.thrubiSilverNext} ccySymbol={\"₮$\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\"             bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true} value={ member.thrubiSilver} ccySymbol={\"₮$\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\"       bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from \"./_MemberSilver\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-secondary\">\r\n                <_ActionButton text=\"Thrubi Silver\" buttonType={\"btn-outline-secondary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberSilver\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceSilver={thrubiPriceSilver}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Transform />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"My Thrubi Gold\"      bold={true}  value={ member.thrubiGold} ccySymbol={\"₮₲\"} />\r\n            <_CcyRow text=\"Market value\"        bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <_ActionButton action={() => {}} text=\"Find gold Thrubi marketplace\" buttonType=\"btn-outline-success\" />\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _MemberGold from \"./_MemberGold\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-success\">\r\n                <_ActionButton text=\"Thrubi Gold\" buttonType={\"btn-outline-success\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberGold\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectPopulation,deselectPopulation} from \"../actions/population\";\r\n\r\nclass _Populations extends Component {\r\n    render() {\r\n        const {populations,populationId} = this.props;\r\n        const {selectPopulation,deselectPopulation} = this.props;\r\n\r\n        return (\r\n            populations.map((population,index) => {\r\n                return (\r\n                    <div key={index} className=\"bg-light p-0 my-2\">\r\n                        <button\r\n                            className={\"btn btn-sm m-0 p-0 rounded-0 border-0 btn-block btn-outline-primary\"+\r\n                                ((populationId===population.populationId)?\" active\":\"\")}\r\n                            onClick={(populationId===population.populationId) ? (() => deselectPopulation(population)) : (() => selectPopulation(population))}\r\n                        >\r\n                            <div className=\"container-fluid row p-3 m-0\">\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.countryId}</div>\r\n                                <div className=\"col-lg-5 col-md-10 p-0 m-0 text-left\"> {population.countryName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccyId}</div>\r\n                                <div className=\"col-lg-4 col-md-8  p-0 m-0 text-left\">{population.ccyName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    populations:        state.client.population.populations,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,deselectPopulation})(_Populations);\r\n\r\nexport default Populations;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/population\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {createMember} from \"../actions/member\";\r\n\r\nclass _PopulationSelect extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy,populationsNotAvailable} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if ((!populationsBusy)&&(populationsNotAvailable)) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,populationsNotAvailable,populationId} = this.props;\r\n        const {createMember} = this.props;\r\n\r\n        return (\r\n            <div className=\"populationTable\">\r\n                {\r\n                    busy ? <div className=\"text-center\">Loading...</div> :\r\n                        populationsBusy ? <div>User populations loading...</div> :\r\n                            populationsNotAvailable ? \"No populations found, we are working on this...\"\r\n                                :\r\n                                <Fragment>\r\n                                    <div className=\"my-3\">Please select your country and currency from the list below and confirm:</div>\r\n                                    <Populations />\r\n                                    <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" buttonType=\"btn-primary\" />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n    userId:                     state.client.user.id,\r\n    populationId:               state.client.population.id,\r\n});\r\n\r\nconst PopulationSelect = connect(mapStateToProps,{fetchPopulations,createMember})(_PopulationSelect);\r\n\r\nexport default PopulationSelect;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationAdd extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst PopulationAdd = connect(mapStateToProps,{populationExists,createPopulation})(_PopulationAdd);\r\n\r\nexport default PopulationAdd;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <_ActionButton action={deletePopulation} text=\"Delete Population\" buttonType=\"btn-secondary\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nconst PopulationDelete = connect(mapStateToProps,{deletePopulation})(_PopulationDelete);\r\n\r\nexport default PopulationDelete;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationTune extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst PopulationTune = connect(mapStateToProps,{tunePopulation})(_PopulationTune);\r\n\r\nexport default PopulationTune;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport UserIdentity from \"./UserIdentity\"\r\nimport MemberDelete from \"./MemberDelete\"\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport PopulationSelect from \"./PopulationSelect\";\r\nimport PopulationAdd from \"./PopulationAdd\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport PopulationDelete from \"./PopulationDelete\";\r\nimport PopulationTune from \"./PopulationTune\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,identityCertified,isMember} = this.props;\r\n        const {close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid row p-0 m-0 mb-5\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <Fragment>\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light p-0\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        !isMember ?\r\n                                            <Fragment>\r\n                                                <PopulationSelect />\r\n                                                { !auth ? \"\" : <PopulationAdd /> }\r\n                                            </Fragment>\r\n                                            :\r\n                                            identityCertified<=0 ?\r\n                                                <Fragment>\r\n                                                    <UserIdentity />\r\n                                                    <MemberDelete />\r\n                                                </Fragment>\r\n                                                :\r\n                                                <div className=\"bg-light mr-2\">\r\n                                                    <MemberBar />\r\n                                                    {\r\n                                                        !auth ?\r\n                                                            <Fragment>\r\n                                                                <div className=\"container-fluid row p-0 m-0\">\r\n                                                                    <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                        <ThrubiBlue />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                        <ThrubiSilver />\r\n                                                                    </div>\r\n                                                                    <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                        <ThrubiGold />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Fragment>\r\n                                                            :\r\n                                                            <Fragment>\r\n                                                                <div className=\"col-lg-4 navbar-light\">\r\n                                                                    <PopulationDelete/>\r\n                                                                </div>\r\n                                                                <div className=\"col-lg-4 navbar-light\">\r\n                                                                    <PopulationTune />\r\n                                                                </div>\r\n                                                            </Fragment>\r\n                                                    }\r\n                                                </div>\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    isMember:           state.client.member.isMember,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React,{Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStats from \"./GlobalStats\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <Fragment>\r\n        <div className=\"d-block d-lg-none container-fluid flex-md-nowrap p-0 footer bg-light\">\r\n            <div className=\"col-lg-12 float-right mx-0 my-0 pt-2 text-center\">\r\n                <div className=\"text-dark navbar-nav\">Welcome to Thrubi!</div>\r\n                <GlobalStats/>\r\n            </div>\r\n            <div className=\"col-lg-12 float-right mx-0 my-0 mb-1 text-center consoleFont\">\r\n                <div className=\"navbar-nav small\">\r\n                    {ethNetwork&&ethAddress?(\r\n                        <div>\r\n                            <span className=\"badge badge-warning\">network/{ethNetwork}</span>\r\n                            <span className=\"badge badge-info\">{ethAddress}</span>\r\n                        </div>\r\n                    ):(\"Accessing blockchain data\")}\r\n                </div>\r\n                <div className=\"my-2 text-center\">Contact us: info@thrubi.com</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"d-none d-lg-block container-fluid flex-md-nowrap p-0 footer bg-light\">\r\n            <div className=\"col-lg-12 float-right m-0 text-center\">\r\n                <div className=\"my-2 text-center consoleFont\">Contact us: info@thrubi.com</div> {/* • */}\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].flareType===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].flareType===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../../config/http\";\r\nimport flareBook from \"../../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../../config/server\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../../env/workers\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()               => dispatch(fetchGlobalStats()))\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Titlebar from \"./Titlebar\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary\">\n                <Titlebar />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h4 className=\"display-4 displayInlineBlock\">Rising inequality is toxic to growth</h4>\n                                    <i className=\"displayInlineBlock\">&nbsp;(Nick Hanauer)</i>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}