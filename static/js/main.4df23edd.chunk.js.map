{"version":3,"sources":["reducers/customMiddleware/thunkWrap.js","config/flare.js","classes/FlareQueue.js","reducers/config/actionTypes.js","actions/flare.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStatsUsers.js","components/Header.js","components/MemberInfo.js","components/_CcyRow.js","classes/Channel.js","components/_ActionButton.js","env/server.js","config/http.js","actions/server.js","config/blockchain_ethereum.js","env/blockchain_ethereum.js","actions/market.js","config/market.js","env/workers.js","config/server.js","actions/member.js","actions/population.js","config/facebook.js","config/auth.js","env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","config/redirect.js","env/redirect.js","actions/s3.js","actions/user.js","components/MemberDeclareIncome.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","components/Auth.js","components/Info.js","components/UserProfilePicture.js","config/s3.js","components/UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/UserIdentity.js","components/MemberDelete.js","components/Claim.js","components/MemberOptions.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/PopulationSelect.js","actions/adminMenu.js","components/Countries.js","components/Ccys.js","components/PopulationAdd.js","components/PopulationDelete.js","components/PopulationTune.js","components/User.js","components/GlobalStatsCountryCcy.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/App.js","index.js"],"names":["thunkWrap","dispatch","getState","next","action","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","infoFlare","DETECTED_ETH_NETWORK_CHANGE","message","DETECTED_ETH_ADDRESS_CHANGE","DEACTIVATED_ON","DEACTIVATED_OFF","DEACTIVATED_PENDING","EMAIL_VERIFIED_ON","EMAIL_VERIFIED_OFF","EMAIL_VERIFIED_PENDING","IDENTITY_CERTIFIED_ON","IDENTITY_CERTIFIED_OFF","IDENTITY_CERTIFIED_PENDING","INCOME_APPROVED_ON","INCOME_APPROVED_OFF","INCOME_APPROVED_PENDING","errorFlare","USER_ACTIVATION","UNEXPECTED_FLARE","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","NO_ETHEREUM_CONFIG","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_USER_PROFILE_PICTURE","toFixed","S3_UPLOAD_ERROR","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_RECEIVE_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","ERR_USER_FLAGS","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","FlareQueue","f","this","queue","then","Promise","resolve","actionType","APP_SHUTDOWN","LOGOUT","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_RECEIVE_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","RECEIVE_TWITTER_WINDOW_AND_LISTENER","CLEAR_TWITTER_WINDOW_AND_LISTENER","RECEIVE_TWITTER_LOGIN","LOGIN","RECEIVE_USER_FLAGS","SET_USER_ACTIVATED","SET_USER_DEACTIVATED","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CHANGE_POPULATION","RECEIVE_POPULATIONS","CLEAR_POPULATION","SELECT_POPULATION","POPULATION_EXISTS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","RECEIVE_COUNTRY_FILTER","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_USER_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_USER_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","a","console","error","waiter","waiterResolve","index","addToQueue","value","session","type","payload","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","user","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","userWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","claim","transform","userMenu","adminMenu","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","flags","emailVerified","identityCertified","incomeApproved","userFlags","flagFlare","newState","flag","activationState","detailName","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","document","profilePicture","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","receiveChannel","channels","FACEBOOK","GOOGLE","LINKEDIN","BLOCKCHAIN_ETHEREUM","PAYPAL","KEYBOARD","TWITTER","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleCode","accessJwt","refreshJwt","userAccess","code","twitterWindow","twitterListener","twitterCode","populationInit","exists","countryName","ccyName","ccySymbol","countryFilter","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","populationId","parseFloat","config","memberInit","isMember","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStatsUsers","connect","className","Header","src","alt","height","width","href","data-show-count","MemberInfo","_CcyRow","text","bold","isNaN","Channel","channelMode","Math","abs","channelName","NOT_AVAILABLE","_ActionButton","props","buttonType","disabled","channel","noMargin","onClick","event","preventDefault","channelColor","includes","children","Component","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","ethEventType","THRUBI_ABI","startMarketWorker","setInterval","activity","data","amount","stopMarketWorker","clearInterval","endpoint","removeMembership","stopPopulationWorker","stopMemberWorker","startMemberWorker","selectPopulation","deselectPopulation","startPopulationWorker","fetchThrubiPriceSilver","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","twitterAuthUri","twitterRedirectUri","twitterAppClientId","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","stopUserWorker","FBlogout","finally","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","i","fetchUserChannels","deleteChannel","getPayChannel","setPayChannel","channelIsOpen","switchOptionUserMenu","newPayChannel","getReceiveChannel","setReceiveChannel","newReceiveChannel","finalizeLogin","loginData","loginError","fetchDetails","activateUserWorker","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","username","password","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","api","facebookDetails","first_name","last_name","storeDetails","overwrite","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","processTwitterLogin","startupTwitterLogin","twitterInterval","createTwitter","loginTwitter","addTwitter","updateTwitter","createPayPal","loginPayPal","addPayPal","updatePayPal","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","opener","postMessage","uploadS3","signedRequest","picture","axios","put","e","detail","detailValue","currentFlag","incomingFlag","_MemberDeclareIncome","mDeclared","declareIncomeBusy","ref","input","placeholder","required","MemberDeclareIncome","_MemberBar","data-dismiss","MemberBar","_RadioButtons","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","disabledFilter","setter","o","channelIsForPay","mode","actions","Auth","_Info","style","target","rel","Info","_UserProfilePicture","localProfilePicture","uploadProfilePicture","for","onChange","UserProfilePicture","fileRef","files","size","fileName","fileType","fileSize","awsPacket","signedPutUri","unsignedGetUri","_UserDetails","UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_UserIdentity","uploadDocument","UserIdentity","_MemberDelete","_Claim","claimProcedureActive","claimBusy","setState","Claim","_MemberOptions","advancedMode","viewHistory","MemberOptions","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","_Populations","p","Populations","_PopulationSelect","reload","populationsBusy","populationsNotAvailable","countryFilterXs","countryFilterLg","createMember","changeCountryFilter","PopulationSelect","forEach","deletePopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_PopulationAdd","verifyExists","populationExists","createPopulation","PopulationAdd","_PopulationDelete","PopulationDelete","_PopulationTune","newBrake","newWarperMincome","newWarperEquality","tunePopulation","onSubmit","PopulationTune","_User","User","GlobalStatsCountryCcy","Footer","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","Flare","long","stopGlobalStatsWorker","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","process","exact","path","getElementById"],"mappings":"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","file":"static/js/main.4df23edd.chunk.js","sourcesContent":["const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","import {AMAZON_S3_MAX_PICTURE_SIZE} from \"./s3\";\r\n\r\nconst flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    infoFlare: {\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n        DEACTIVATED_ON:             {thrubiFlareId:\"I003\",message:\"User account is deactivated\"},\r\n        DEACTIVATED_OFF:            {thrubiFlareId:\"I004\",message:\"User account is now active\"},\r\n        DEACTIVATED_PENDING:        {thrubiFlareId:\"I005\",message:\"User account is now pending activation\"},\r\n        EMAIL_VERIFIED_ON:          {thrubiFlareId:\"I006\",message:\"Email address has been verified\"},\r\n        EMAIL_VERIFIED_OFF:         {thrubiFlareId:\"I007\",message:\"Unverified email address detected. Please check your inbox.\"},\r\n        EMAIL_VERIFIED_PENDING:     {thrubiFlareId:\"I008\",message:\"Email address pending verification. Please check your inbox.\"},\r\n        IDENTITY_CERTIFIED_ON:      {thrubiFlareId:\"I009\",message:\"Identity document certified\"},\r\n        IDENTITY_CERTIFIED_OFF:     {thrubiFlareId:\"I010\",message:\"Non-certified identity document detected. Please certify.\"},\r\n        IDENTITY_CERTIFIED_PENDING: {thrubiFlareId:\"I011\",message:\"Identity certification procedure pending. Please wait.\"},\r\n        INCOME_APPROVED_ON:         {thrubiFlareId:\"I012\",message:\"Declared income has been officially approved\"},\r\n        INCOME_APPROVED_OFF:        {thrubiFlareId:\"I013\",message:\"Newly declared income is not approved, please check.\"},\r\n        INCOME_APPROVED_PENDING:    {thrubiFlareId:\"I014\",message:\"Newly declared income is pending approval. Please wait.\"},\r\n    },\r\n    errorFlare: {\r\n        USER_ACTIVATION:            {thrubiFlareId:\"0021\",message:\"User activation module error\"},\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        NO_ETHEREUM_CONFIG:         {thrubiFlareId:\"0022\",message:\"Ethereum wallet not found, please configure or enable MetaMask\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_USER_PROFILE_PICTURE:   {thrubiFlareId:\"0023\",message:\"Please upload a JPG or PNG file, max size: \"+((AMAZON_S3_MAX_PICTURE_SIZE/1000).toFixed(0))+\" kB\"},\r\n        S3_UPLOAD_ERROR:            {thrubiFlareId:\"0024\",message:\"Could not upload picture to Amazon S3\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0017\",message:\"Error updating user pay channel\"},\r\n        ERR_RECEIVE_CHANNEL_UPDATE: {thrubiFlareId:\"0023\",message:\"Error updating user receive channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0018\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0019\",message:\"Error fetching channels\"},\r\n        ERR_USER_FLAGS:             {thrubiFlareId:\"0020\",message:\"Could not update user flags\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n};\r\n\r\nexport default flareBook;\r\n\r\nexport const TIMEOUT_FLARE_DELETE = 7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG = 30000;","class FlareQueue {\r\n    static queue = Promise.resolve();\r\n\r\n    static addToQueue(f) {\r\n        this.queue = this.queue.then(f);\r\n    }\r\n}\r\n\r\nexport default FlareQueue;","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_RECEIVE_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    RECEIVE_TWITTER_WINDOW_AND_LISTENER: null,\r\n    CLEAR_TWITTER_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_TWITTER_LOGIN: null,\r\n    LOGIN: null,\r\n    RECEIVE_USER_FLAGS: null,\r\n    SET_USER_ACTIVATED: null,\r\n    SET_USER_DEACTIVATED: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    CLEAR_POPULATION: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    RECEIVE_COUNTRY_FILTER: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_USER_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_USER_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import FlareQueue from \"../classes/FlareQueue\";\r\nimport flareBook,{TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const getFlareNext = () => async (dispatch,getState) => {\r\n    let waiterResolve;\r\n    let waiter = new Promise(resolve => waiterResolve=resolve);\r\n    let index = {};\r\n    FlareQueue.addToQueue(() => Promise.resolve()\r\n        .then(()            => index.value = getState().session.flare.next)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => waiterResolve(index.value))\r\n    );\r\n    return waiter;\r\n};\r\n\r\nexport const emitFlare = (flareType,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    console.error(\"flare: \",flare);\r\n    return Promise.resolve()\r\n        .then(()            => dispatch(getFlareNext()))\r\n        .then(next          => index = next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,flareType,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","import flareBook from \"../../config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      action.payload.flareType,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      state.flares[action.payload.index].flareType,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    user: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_USER_WORKER:\r\n            return Object.assign({},state,{user:action.payload.userWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:null,});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:null,});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:null,});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:null,});\r\n        case actionType.STOP_USER_WORKER:\r\n            return Object.assign({},state,{user:null,});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:null,});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:null,});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:null,});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","import flareBook from \"./flare\";\r\n\r\nconst userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nconst flags = {\r\n    deactivated:null,\r\n    emailVerified:null,\r\n    identityCertified:null,\r\n    incomeApproved:null,\r\n};\r\n\r\nObject.keys(flags).map(key => flags[key]=key);\r\n\r\nexport const userFlags = flags;\r\n\r\nexport const flagFlare = (newState,flag) => {\r\n    if (newState<0) {\r\n        switch (flag) {\r\n            case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_PENDING;\r\n            case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_PENDING;\r\n            case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_PENDING;\r\n            case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_PENDING;\r\n            default: return null;\r\n        }\r\n    } else {\r\n        if (newState) {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_ON;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_ON;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_ON;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_ON;\r\n                default: return null;\r\n            }\r\n        } else {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_OFF;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_OFF;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_OFF;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_OFF;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const activationState = {\r\n    activated:              0,\r\n    userRequestDeactivated: 1,\r\n};\r\n\r\n\r\nexport const detailName = {\r\n    name:               \"name\",\r\n    surname:            \"surname\",\r\n    email:              \"email\",\r\n    profilePicture:     \"profilePicture\",\r\n    document:           \"document\",\r\n    submittedDocument:  \"submittedDocument\",\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../config/user\";\r\n\r\nconst userInit = {\r\n    id:                 null,\r\n    role:               null,\r\n    deactivated:        null,\r\n    emailVerified:      null,\r\n    identityCertified:  null,\r\n    incomeApproved:     null,\r\n    name:               null,\r\n    surname:            null,\r\n    email:              null,\r\n    document:           null,\r\n    profilePicture:     null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate:  userOptions.optionLoginCreate.LOGIN,\r\n    optionUserMenu:     userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory:  false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.RECEIVE_USER_FLAGS:\r\n            return Object.assign({},state,{\r\n                deactivated:            parseInt(action.payload.deactivated)        === state.deactivated       ? state.deactivated         : parseInt(action.payload.deactivated),\r\n                emailVerified:          parseInt(action.payload.emailVerified)      === state.emailVerified     ? state.emailVerified       : parseInt(action.payload.emailVerified),\r\n                identityCertified:      parseInt(action.payload.identityCertified)  === state.identityCertified ? state.identityCertified   : parseInt(action.payload.identityCertified),\r\n                incomeApproved:         parseInt(action.payload.incomeApproved)     === state.incomeApproved    ? state.incomeApproved      : parseInt(action.payload.incomeApproved),\r\n            });\r\n        case actionType.SET_USER_ACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            0,\r\n            });\r\n        case actionType.SET_USER_DEACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            1,\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name             ? action.payload.name           : userInit.name,\r\n                surname:                action.payload.surname          ? action.payload.surname        : userInit.surname,\r\n                email:                  action.payload.email            ? action.payload.email          : userInit.email,\r\n                document:               action.payload.document         ? action.payload.document       : userInit.document,\r\n                profilePicture:         action.payload.profilePicture   ? action.payload.profilePicture : userInit.profilePicture,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                document:               null,\r\n                profilePicture:         null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    receiveChannel:             null,\r\n    channels: {\r\n        FACEBOOK:               0,\r\n        GOOGLE:                 0,\r\n        LINKEDIN:               0,\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        PAYPAL:                 0,\r\n        KEYBOARD:               0,\r\n        TWITTER:                0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleCode:             null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n                TWITTER:                action.payload.TWITTER              ? action.payload.TWITTER                : state.channels.TWITTER,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_RECEIVE_CHANNEL:\r\n            return Object.assign({},state,{\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          action.payload.twitterWindow,\r\n                twitterListener:        action.payload.twitterListener,\r\n            });\r\n        case actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          null,\r\n                twitterListener:        null,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_LOGIN:\r\n            return Object.assign({},state,{\r\n                twitterCode:            action.payload.code,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations:    [],\r\n    exists:         null,\r\n    id:             null,\r\n    countryId:      null,\r\n    countryName:    null,\r\n    ccyId:          null,\r\n    ccyName:        null,\r\n    ccySymbol:      null,\r\n    countryFilter:  null,\r\n    thrubiPriceSilver:      0,\r\n    thrubiPriceSilverNext:  0,\r\n    thrubiPriceGold:        1.5,\r\n    brake:                  0,\r\n    mincome:                0,\r\n    equality:               0,\r\n    warperMincome:          0,\r\n    warperEquality:         0,\r\n    thrubiFees:             0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                populations:            state.populations,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:            action.payload.populations,\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.population.populationId),\r\n                countryId:              action.payload.population.countryId,\r\n                countryName:            action.payload.population.countryName,\r\n                ccyId:                  action.payload.population.ccyId,\r\n                ccyName:                action.payload.population.ccyName,\r\n                ccySymbol:              action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver:      action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext:  action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                parseFloat(action.payload.stats.mincome),\r\n                equality:               parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                  parseFloat(action.payload.config.brake),\r\n                warperMincome:          parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:         parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                 action.payload.exists,\r\n            });\r\n        case actionType.RECEIVE_COUNTRY_FILTER:\r\n            return Object.assign({},state,{\r\n                countryFilter:          action.payload.countryFilter,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    isMember: false,\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                isMember:                   true,\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsUsers = ({\r\n    nUser,\r\n}) => (\r\n    <span className=\"text-primary text-center small mr-2\">\r\n        A {/*{nUser}-strong */}worldwide community for sustainable income redistribution.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nUser:      state.global.stats.nUser,\r\n});\r\n\r\nconst GlobalStatsUsers = connect(mapStateToProps,{})(_GlobalStatsUsers);\r\n\r\nexport default GlobalStatsUsers;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\n\r\nconst _Header = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-8 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left\">\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\" />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><b>Thrubi App</b></span>\r\n            <span className=\"d-block mr-2 mt-1 alignBottom text-dark navbar-nav\">\r\n                <a href=\"https://twitter.com/thrubi_org?ref_src=twsrc%5Etfw\" data-show-count=\"false\" className=\"twitter-follow-button alignBottom\">Follow @thrubi_org</a>\r\n            </span>\r\n            <div className=\"d-none d-lg-block alignBottom\"><GlobalStatsUsers/></div>\r\n        </div>\r\n        <div className=\"col-lg-4 d-none d-lg-block float-right mr-0 my-2 text-right consoleFont\">\r\n            <div className=\"navbar-nav small alignBottom\">\r\n                {\r\n                    !ethNetwork || !ethAddress ? \"\" :\r\n                    <div>\r\n                        <span className=\"badge badge-warning d-none d-xl-inline\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                        <span className=\"badge badge-info\">{ethAddress}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Header = connect(mapStateToProps)(_Header);\r\n\r\nexport default Header;","import React,{Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiSilver,\r\n    thrubiSilverNext,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <div className=\"container-fluid p-0 m-0 small consoleFont\">\r\n        <div className=\"col-sm-12 container-fluid row p-0 m-0\">\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-right\">\r\n                <div className=\"col-sm-12 p-0\">1.00Ξ</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">1.00₮S</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮S</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮G</div> */ }\r\n            </div>\r\n            <div className=\"col-2 container-fluid p-0 m-0 text-center\">\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">=</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n            </div>\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-left\">\r\n                <div className=\"col-sm-12 p-0\">{exrate.toFixed(2)}{ccySymbol}</div>\r\n                    { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">{thrubiPriceSilver.toFixed(2)}{ccySymbol}</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next month)</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceGold.toFixed(2)}{ccySymbol}</div> */ }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:              state.client.population.ccySymbol,\r\n    exrate:                 state.global.market.exrate,\r\n    thrubiSilver:           state.client.member.thrubiSilver,\r\n    thrubiSilverNext:       state.client.member.thrubiSilverNext,\r\n    thrubiPriceSilver:      state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext:  state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold:        state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"small row ccyRowContainer\">\r\n        <span className=\"text-left ccyRowElement col-6\">{text}</span>\r\n        <span className={\"text-right ccyRowElement col-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"text-right ccyRowElement col-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelName = {\r\n        NOT_AVAILABLE:          \"N/A\",\r\n        BLOCKCHAIN_ETHEREUM:    \"BLOCKCHAIN_ETHEREUM\",\r\n        KEYBOARD:               \"KEYBOARD\",\r\n        FACEBOOK:               \"FACEBOOK\",\r\n        LINKEDIN:               \"LINKEDIN\",\r\n        GOOGLE:                 \"GOOGLE\",\r\n        PAYPAL:                 \"PAYPAL\",\r\n        TWITTER:                \"TWITTER\",\r\n};\r\n    \r\n    static channelColor(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"blockchain-ethereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"linkedin\";\r\n            case Channel.channelName.GOOGLE:                return \"google\";\r\n            case Channel.channelName.PAYPAL:                return \"paypal\";\r\n            case Channel.channelName.TWITTER:               return \"twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"BlockchainEthereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"Keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"Facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"LinkedIn\";\r\n            case Channel.channelName.GOOGLE:                return \"Google\";\r\n            case Channel.channelName.PAYPAL:                return \"PayPal\";\r\n            case Channel.channelName.TWITTER:               return \"Twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in with username/password\";\r\n            case \"CREATE\":  return \"Create a new Thrubi account with username/password\";\r\n            case \"ADD\":     return \"Add username/password credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my username/password credentials\";\r\n            default:        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName(channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Use my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Use my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Using my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Using my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet to use it\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account to use it\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign in with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign in with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign in with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign in with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign in with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign in with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign up with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign up with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign up with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign up with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign up with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign up with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Enable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect a Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect a LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect a Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect a Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Disconnect my Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Disable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Disconnect my Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Disconnect my LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Disconnect my Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Disconnect my PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Disconnect my Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect another Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Update username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect another Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect another LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect another Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect another PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect another Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            default: return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React,{Component} from \"react\";\r\nimport Channel from \"../classes/Channel\";\r\n\r\nclass _ActionButton extends Component {\r\n    render() {\r\n        const {action,payload,text,buttonType,disabled=false,channel=false,noMargin=false} = this.props;\r\n        return (\r\n            <button disabled={disabled}\r\n                    onClick={(event) => {event.preventDefault(); action(payload); }}\r\n                    className={\"btn btn-sm btn-block rounded-0 \"+(noMargin?noMargin:(\"my-2 py-\"+(channel?\"2 \":\"2 \")))+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n                <div className={\"container-fluid row p-0 m-0\"+(noMargin.toString().includes(\"small\")?\" small\":\"\")+(channel?\"\":\" fullWidth\")}>\r\n                    <div className={(channel?\"\":\"fullWidth\")}>\r\n                        {\r\n                            !channel ? \"\" :\r\n                                <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                        }\r\n                        <div className={(channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(channel?\"left\":\"center\")}>{ text ? text : this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"../env/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType,headers} from \"../config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = \"0xeC6020cd56349ED60512c9985BdC5F3B7098315d\";\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e3130195\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xd7d9057eeb8d77c85b055fd0a383e2cbb00c462d8d90a53f7dea6493d376661d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x723ed1db\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xd8875079\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import request from \"request\";\r\nimport {uri,spotApi} from \"../config/market\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {INTERVAL_MARKET_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const startMarketWorker = () => async (dispatch,getState) => {\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(getState().client.population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n};\r\n\r\nexport const stopMarketWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n};\r\n","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER = 30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER = 1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER = 1000;\r\nexport const INTERVAL_USER_WORKER = 1000;\r\nexport const INTERVAL_MEMBER_WORKER = 1000;\r\nexport const INTERVAL_MARKET_WORKER = 1000;\r\nexport const INTERVAL_POPULATION_WORKER = 1000;","export const endpoint = {\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_CREATE_TWITTER:                     \"/auth/create/twitter\",\r\n    AUTH_LOGIN_TWITTER:                      \"/auth/login/twitter\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_DELETE:                          \"/member/delete\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_GETFLAGS:                          \"/user/getFlags\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_PROFILEPICTURE_SIGN:               \"/user/profilePicture/sign\",\r\n    USER_CERTIFY:                           \"/user/certify\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_SETRECEIVECHANNEL:           \"/userAccess/setReceiveChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    USERACCESS_ADD_TWITTER:                  \"/userAccess/add/twitter\",\r\n    USERACCESS_UPDATE_TWITTER:               \"/userAccess/update/twitter\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport {startPopulationWorker,stopPopulationWorker} from \"./population\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_MEMBER_WORKER} from \"../env/workers\";\r\n\r\nexport const createMember = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()     => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()     => dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+populationId,null)))\r\n        .then   (()     => dispatch(startMemberWorker()))\r\n        .then   (()     => dispatch(startPopulationWorker()))\r\n        .then   (()     => dispatch(startMarketWorker()))\r\n        .catch  (error  => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()     => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null)))\r\n        .then (packet   => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n        .catch(error    => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const removeMembership = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(stopPopulationWorker()))\r\n        .then (()       => dispatch(stopMemberWorker()))\r\n        .then (()       => dispatch(stopMarketWorker()))\r\n        .then (()       => dispatch(processRequest(requestType.POST,endpoint.MEMBER_DELETE+\"/\"+getState().client.population.id,null)))\r\n        .then (()       => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then (()       => dispatch({type:actionType.CLEAR_MEMBER,payload:{}}));\r\n};\r\n\r\nexport const startMemberWorker = () => async (dispatch,getState) => {\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchMember());\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n};\r\n\r\nexport const stopMemberWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n};\r\n\r\nexport const claim = () => async (dispatch,getState) => {\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId,null));\r\n};\r\n\r\nexport const advancedMode = optionAdvancedMode => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = optionViewHistory => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import {processRequest} from \"./server\";\r\nimport {startMemberWorker,stopMemberWorker} from \"./member\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_POPULATION_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    let populations;\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)))\r\n        .then   (p              => populations=p)\r\n        .then   (()             => populations.forEach(population => {if (population.isMember) {\r\n            dispatch(selectPopulation(population));\r\n            dispatch(startPopulationWorker());\r\n            dispatch(startMemberWorker());\r\n            dispatch(startMarketWorker());\r\n        }}))\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()         => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const selectPopulation = population => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    dispatch(stopMemberWorker());\r\n    dispatch(stopPopulationWorker());\r\n    dispatch(stopMarketWorker());\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const startPopulationWorker = () => async (dispatch,getState) => {\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchThrubiPriceSilver(getState().client.population.id));\r\n            dispatch(fetchThrubiPriceSilverNext(getState().client.population.id));\r\n            if (getState().client.user.auth) {\r\n                dispatch(fetchStats(getState().client.population.id));\r\n                dispatch(fetchConfig(getState().client.population.id));\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n};\r\n\r\nexport const stopPopulationWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n};\r\n\r\nconst fetchThrubiPriceSilver = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)))\r\n        .then   (stats          => dispatch({type:actionType.RECEIVE_STATS,payload:{stats}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)))\r\n        .then   (config         => dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changeCountryFilter = countryFilter => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_COUNTRY_FILTER,payload:{countryFilter}}));\r\n};\r\n","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email\",\r\n    apiScope:           \"email\",\r\n};","// --------\r\n// LinkedIn\r\n// --------\r\nconst linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// ------\r\n// Google\r\n// ------\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// -------\r\n// Twitter\r\n// -------\r\nconst twitterScope = \"email%20profile\";\r\nexport const twitterAuthUri =    (twitterRedirectUri,twitterAppClientId) => //////change!!!!!!\r\n    \"https://accounts.google.com/o/oauth2/auth?\"+\r\n    \"response_type=code\" +\r\n    \"&redirect_uri=\"+twitterRedirectUri+\r\n    \"&scope=\"+twitterScope+\r\n    \"&client_id=\"+twitterAppClientId;\r\n\r\nexport const twitterWindowName = \"Login to Thrubi using your Twitter account\";\r\nexport const twitterWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\nlet envTwitterRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://www.thrubi.com\";\r\n    envGoogleRedirectUri      = \"https://www.thrubi.com\";\r\n    envTwitterRedirectUri     = \"https://www.thrubi.com\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n    envTwitterRedirectUri     = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n\r\nexport const twitterRedirectUri     = envTwitterRedirectUri;\r\nexport const twitterAppClientId     = \"\";","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails,activateUserWorker,stopUserWorker} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"../config/redirect\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {facebook} from \"../config/facebook\";\r\nimport {\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams,\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    twitterAuthUri,\r\n    twitterWindowName,\r\n    twitterWindowParams,\r\n} from \"../config/auth\";\r\nimport flareBook from \"../config/flare\";\r\nimport userOptions from \"../config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n    twitterRedirectUri,\r\n    twitterAppClientId,\r\n} from \"../env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"../env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = payload => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(stopUserWorker()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = intervalTime => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (error        => {console.error(error);dispatch(logout({autoLogin:false}));});\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+\"/\"+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const getPayChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setPayChannel = payChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (payChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\nexport const getReceiveChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setReceiveChannel = receiveChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (receiveChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[receiveChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETRECEIVECHANNEL,{receiveChannel})))\r\n        .then   (newReceiveChannel=> dispatch({type:actionType.RECEIVE_RECEIVE_CHANNEL,payload:{receiveChannel:newReceiveChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = loginData => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(activateUserWorker()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethNetwork = getState().client.userAccess.ethNetwork;\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!ethNetwork || !ethAddress) throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise((resolve) => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result=>resolve(result)));}))\r\n        .then   (facebookDetails  => ({name:facebookDetails.first_name,surname:facebookDetails.last_name,email:facebookDetails.email}))\r\n        .then   (facebookDetails  => dispatch(storeDetails(facebookDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) {console.error(event.data); return event.data;} else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processTwitterLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let twitterListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) {console.error(event.data); return event.data;} else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_TWITTER_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {twitterListener=getState().client.userAccess.twitterListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => getState().client.userAccess.twitterWindow)\r\n        .then   (twitterWindow     => {twitterWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupTwitterLogin = () => async (dispatch,getState) => {\r\n    let twitterWindow = null;\r\n    let twitterListener = null;\r\n    let twitterInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {twitterWindow = getState().client.userAccess.twitterWindow;})\r\n        .then   (()               => ((twitterWindow===null)||(twitterWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) twitterWindow = window.open(twitterAuthUri(twitterRedirectUri,twitterAppClientId),twitterWindowName,twitterWindowParams);})\r\n        .then   (()               => twitterWindow.focus())\r\n        .then   (()               => {twitterInterval = setInterval(() => {if (twitterWindow.closed) {waitingHandleResolve(); clearInterval(twitterInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {twitterListener = event => dispatch(processTwitterLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER,payload:{twitterWindow,twitterListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({twitterCode:getState().client.userAccess.twitterCode}));\r\n};\r\n\r\nexport const createTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_TWITTER,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_TWITTER,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_TWITTER,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_TWITTER,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({code:pJson.code,state:pJson.state,origin:EVENT_DATA_ORIGIN_THRUBI}))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {ethEventType} from \"../config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport flareBook from \"../config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"../env/blockchain_ethereum\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER, INTERVAL_ETH_NETWORK_WORKER} from \"../env/workers\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:false})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = transformEth => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        try {\r\n            transformContract(userId,populationId,ethAddress)\r\n                .send({from:ethAddress,value:transformEth*1e18})\r\n                .once(ethEventType.confirmation,() => {\r\n                        // Thrubi will automatically process the transform via its workers on the backend\r\n                        resolve();\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n","export const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import axios from \"axios\";\r\nimport flareBook from \"../config/flare\";\r\n\r\nexport const uploadS3 = (signedRequest,picture) => async (dispatch,getState) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":     picture.type,\r\n        },\r\n    };\r\n    return Promise.resolve()\r\n        .then (()       => axios.put(signedRequest,picture,config))\r\n        .catch(e       => {throw flareBook.errorFlare.S3_UPLOAD_ERROR;});\r\n};","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {activationState,detailName,flagFlare,userFlags} from \"../config/user\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_USER_WORKER} from \"../env/workers\";\r\nimport {AMAZON_S3_MAX_PICTURE_SIZE,MIME_TYPE_JPEG,MIME_TYPE_PNG} from \"../config/s3\";\r\nimport {uploadS3} from \"./s3\";\r\n\r\nexport const switchOptionUserMenu = (optionUserMenu) => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,null)))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const uploadProfilePicture = fileRef => async (dispatch,getState) => {\r\n    let awsPacket;\r\n    let picture=fileRef.files[0];\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!(picture.type===MIME_TYPE_JPEG||picture.type===MIME_TYPE_PNG)) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => {if (picture.size>AMAZON_S3_MAX_PICTURE_SIZE) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_PROFILEPICTURE_SIGN,{fileName:picture.name,fileType:picture.type,fileSize:picture.size})))\r\n        .then   (packet           => awsPacket=packet)\r\n        .then   (()               => dispatch(uploadS3(awsPacket.signedPutUri,picture)))\r\n        .then   (()               => dispatch(storeDetails({[detailName.profilePicture]:awsPacket.unsignedGetUri},{overwrite:true})))\r\n        .finally(()               => fileRef.value=null);\r\n};\r\n\r\nexport const uploadDocument = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(storeDetails({[detailName.submittedDocument]:true},{overwrite:true})))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_CERTIFY,{})));\r\n};\r\n\r\nconst flareUserFlags = flags => async (dispatch,getState) => {\r\n    Object.keys(userFlags).map(async flag => {\r\n            const currentFlag = getState().client.user[flag];\r\n            const incomingFlag = flags[flag];\r\n            if ((currentFlag!==null)&&(((currentFlag===0)^(incomingFlag===0))||(Math.sign(currentFlag)>0)^(Math.sign(incomingFlag)>0)))\r\n                return await dispatch(emitFlare(flareBook.flareType.INFO,flagFlare(incomingFlag,flag)));\r\n        }\r\n    );\r\n};\r\n\r\nexport const activateUserWorker = () => async (dispatch,getState) => {\r\n    let userWorker = setInterval((() => {\r\n        let userFlags;\r\n        const activity = async () => {\r\n            await Promise.resolve()\r\n                .then (()         => dispatch(processRequest(requestType.GET,endpoint.USER_GETFLAGS,null)))\r\n                .then (flags      => userFlags=flags)\r\n                .then (()         => dispatch(flareUserFlags(userFlags)))\r\n                .then (()         => dispatch({type:actionType.RECEIVE_USER_FLAGS,payload:userFlags}))\r\n                .catch(error      => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_FLAGS)));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_USER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_USER_WORKER,payload:{userWorker}});\r\n};\r\n\r\nexport const stopUserWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.user);\r\n    dispatch({type:actionType.STOP_USER_WORKER,payload:{}});\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_ACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_DEACTIVATE,{activationState:activationState.userRequestDeactivated})))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_DEACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const declareIncome = mDeclared => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then  (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}))\r\n        .then  (()              => dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null)))\r\n        .catch (error           => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/user\";\r\n\r\nclass _MemberDeclareIncome extends Component {\r\n    render() {\r\n        const {mCurrent,ccySymbol,declareIncomeBusy,incomeApproved} = this.props;\r\n        const {declareIncome} = this.props;\r\n        let mDeclared;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <_CcyRow text=\"Declared income\" bold={false} value={mCurrent} ccySymbol={ccySymbol}/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 small py-2\">\r\n                                    Your income of {mCurrent} {ccySymbol} is currently:&nbsp;\r\n                                    <span className={\"badge \"+(incomeApproved>0?\"badge-info\":\"badge-danger\")}>{incomeApproved>0?\"Officially approved\":(incomeApproved<0?\"Pending approval\":\"Not approved\")}</span>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"Busy processing income declaration\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"row\">\r\n                                        <input ref={(input) => mDeclared = input}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 m-0\"\r\n                                               placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-0 m-0\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)}\r\n                                                   buttonType=\"btn-primary m-0\"/>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    mCurrent:           state.client.member.mCurrent,\r\n    incomeApproved:     state.client.user.incomeApproved,\r\n    declareIncomeBusy:  state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst MemberDeclareIncome = connect(mapStateToProps,{declareIncome})(_MemberDeclareIncome);\r\n\r\nexport default MemberDeclareIncome;","import React,{Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberBar extends Component {\r\n    render() {\r\n        const {countryName,ccyId,busy,loggedIn,populationId,identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n\r\n        return (\r\n            <div className=\"container-fluid row p-0 m-0 text-primary text-center mt-3\">\r\n                {\r\n                    busy ? \"Viewport loading...\" :\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12 p-2 m-0 bg-primary text-light text-center mb-3\">\r\n                                    <span className=\"mt-3\"><b>{countryName}</b>&nbsp;<small>{ccyId}&nbsp;<i>pid#{populationId}</i></small></span>\r\n                                    <button className=\"close memberPaddingX text-light\" type=\"button\" onClick={() => removeMembership()} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                </div>\r\n                                {\r\n                                    identityCertified<=0\r\n                                        ?\r\n                                            <div className=\"col-sm-12\">\r\n                                                <MemberInfo />\r\n                                            </div>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <MemberInfo />\r\n                                                </div>\r\n                                                <MemberDeclareIncome />\r\n                                            </Fragment>\r\n                                }\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryName:        state.client.population.countryName,\r\n    ccyId:              state.client.population.ccyId,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    busy:               state.session.busy.component.viewport,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{removeMembership})(_MemberBar);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _RadioButtons = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _RadioButtons;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div>\r\n            <input id=\"username\" ref={(input) => refs.username = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={(input) => refs.password = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport userOptions from \"../config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(optionLoginCreate,channelName) {\r\n        return this.props[optionLoginCreate.toLowerCase()+Channel.channelAuthFunctionName(channelName)];\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,receiveChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,setReceiveChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small text-dark\">\r\n            {\r\n                busy ? \"Auth module busy...\" :\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode === null ? \"\" :\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase() + \"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"login\" : \"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\" + (optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"\" : \"outline-\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"Create a new Thrubi account\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        [\r\n                                                            {message:\"My payment method:\",          channel:payChannel,     setter:setPayChannel,},\r\n                                                            {message:\"My inbound payment method:\",  channel:receiveChannel, setter:setReceiveChannel,}\r\n                                                        ].map(o =>\r\n                                                            <div className=\"my-4\">\r\n                                                                {o.message}\r\n                                                                <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                           activeFilter={o.channel}\r\n                                                                           checkedFilter={o.channel}\r\n                                                                           action={o.setter}\r\n                                                                           elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                                if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                    key:(key===o.channel?Channel.channelName.NOT_AVAILABLE:key),\r\n                                                                                    channel:key,\r\n                                                                                    color:\"btn-\"+(key===o.channel?\"\":\"outline-\")+Channel.channelColor(key),\r\n                                                                                    disabledFilter:(key===o.channel),\r\n                                                                                    text:Channel.channelUserFriendlyName(key,(key===o.channel?\"USING\":(Channel.channelIsOpen(channels[key])?\"USE\":\"LINK\"))),\r\n                                                                                }); else return null;\r\n                                                                           }).filter(element=>element!==null)}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: (key) => this.props[\"update\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: (key) => this.props[\"add\"+Channel.channelAuthFunctionName(key)],\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: (key) => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key,actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    receiveChannel:     state.client.userAccess.receiveChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Info extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiBlue\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/crowd.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 everybody p-4 text-primary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Vision</b></h2>\r\n                                <p>\r\n                                    As a Thrubi member, you will receive Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will give you rights to regular payments.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-primary\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-primary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Vision</b></h2>\r\n                                <p>\r\n                                    As a Thrubi member, you will receive Thrubi Blue each month, based on your current income.\r\n                                    Your Thrubi Blue will give you rights to regular payments.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-primary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiSilver\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/bloomberg.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 wealthy p-4 text-secondary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Wealthy individuals</b></h2>\r\n                                <p>\r\n                                    As a wealthy individual, you will have access to purchasing Thrubi Gold.\r\n                                    The purchase costs will be awarded to all Thrubi members in your country according to their income.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-secondary\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-secondary\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Wealthy individuals</b></h2>\r\n                                <p>\r\n                                    As a wealthy individual, you will have access to purchasing Thrubi Gold.\r\n                                    The purchase costs will be awarded to all Thrubi members in your country according to their income.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-secondary\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 p-0 navbar-light\">\r\n                        <div className=\"mr-0 mr-lg-3 my-2 my-lg-0 thrubiGold\">\r\n                            <div style={{\"backgroundImage\": \"url(\"+process.env.PUBLIC_URL+\"/jpg/futuristic.jpg)\"}}\r\n                                 className=\"border-0 container-fluid m-0 societies p-4 text-success\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Thriving societies</b></h2>\r\n                                <p>\r\n                                    Thrubi is powered by in-house social models and public <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\r\n                                    Start accepting Thrubi Gold to fulfill tax duties for your country.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-success\" />\r\n                            </div>\r\n                            <div className=\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-success\">\r\n                                <h2 className=\"text-center text-lg-left\"><b>Thriving societies</b></h2>\r\n                                <p>\r\n                                    Thrubi is powered by in-house social models and public <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\r\n                                    Start accepting Thrubi Gold to fulfill tax duties for your country.\r\n                                </p>\r\n                                <_ActionButton text=\"Sign up\" action={() => {}} buttonType=\"my-4 btn-outline-success\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst Info = connect(mapStateToProps,{})(_Info);\r\n\r\nexport default Info;","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {uploadProfilePicture} from \"../actions/user\";\r\n\r\nclass _UserProfilePicture extends Component {\r\n    render() {\r\n        let refs = {localProfilePicture:null};\r\n        const {role,deactivated,profilePicture} = this.props;\r\n        const {uploadProfilePicture} = this.props;\r\n\r\n        return (\r\n            <div className=\"mb-2\">\r\n                <label for=\"profilePictureInput\" className=\"m-0 p-0\">\r\n                    <img className=\"mt-3 rounded-lg\" alt=\"profilePicture\" height=\"128\" width=\"128\"\r\n                         src={profilePicture?profilePicture:(process.env.PUBLIC_URL+\"/icons/\"+role+deactivated+\".png\")}/>\r\n                </label>\r\n                <input id=\"profilePictureInput\" className=\"d-none\" ref={input => refs.localProfilePicture = input}\r\n                       type=\"file\" onChange={() => uploadProfilePicture(refs.localProfilePicture)} />\r\n                {\r\n                    profilePicture?\"\":<div className=\"small text-secondary m-0 p-0\">Click on the user icon to upload a profile picture</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role:               state.client.user.role          ? \"admin\"        : \"user\",\r\n    deactivated:        state.client.user.deactivated   ? \"_deactivated\" : \"\",\r\n    profilePicture:     state.client.user.profilePicture,\r\n});\r\n\r\nconst UserProfilePicture = connect(mapStateToProps,{uploadProfilePicture})(_UserProfilePicture);\r\n\r\nexport default UserProfilePicture;","export const AMAZON_S3_MAX_PICTURE_SIZE=500000;\r\nexport const MIME_TYPE_JPEG=\"image/jpeg\";\r\nexport const MIME_TYPE_PNG=\"image/png\";","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserDetails extends Component {\r\n    render() {\r\n        const {id,name,surname,email,document,deactivated,emailVerified,identityCertified} = this.props;\r\n        return (\r\n            <div className=\"text-center mb-2\">\r\n                <div className=\"text-primary d-inline-block p-0\">\r\n                    <b>{(name || surname) ? (name ? name : \"\") + \" \" + (surname ? surname : \"\") : \"No user data\"}</b>&nbsp;\r\n                </div>\r\n                <div className=\"text-secondary d-inline-block small\">uid#{id}&nbsp;<span\r\n                    className={\"badge \"+(deactivated?\"badge-danger\":\"badge-info\")}>{deactivated?\"Deactivated\":\"Active account\"}</span></div>\r\n                <div className=\"text-secondary small\">email: {email ? email : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(emailVerified?\"badge-info\":\"badge-danger\")}>{emailVerified?\"Email verified\":\"Pending verification\"}</span></div>\r\n                <div className=\"text-secondary small\">document: {document ? document : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(identityCertified>0?\"badge-info\":\"badge-danger\")}>{identityCertified>0?\"Identity certified\":(identityCertified<0?\"Pending certification\":\"Not certified\")}</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    id:                 state.client.user.id,\r\n    name:               state.client.user.name,\r\n    surname:            state.client.user.surname,\r\n    email:              state.client.user.email,\r\n    document:           state.client.user.document,\r\n    deactivated:        state.client.user.deactivated,\r\n    emailVerified:      state.client.user.emailVerified,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst UserDetails = connect(mapStateToProps)(_UserDetails);\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserProfilePicture from './UserProfilePicture';\r\nimport UserDetails from './UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,loggedIn} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <UserProfilePicture />\r\n                                <UserDetails />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    loggedIn:  state.client.userAccess.loggedIn,\r\n    role: state.client.user.role,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {activateUser,deactivateUser} from \"../actions/user\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,{activateUser,deactivateUser})(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,document,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"inputUserName\"     ref={(input) => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"inputUserSurname\"  ref={(input) => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"inputUserEmail\"    ref={(input) => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"inputUserDocument\" disabled                                                     type=\"text\" className={fieldClassName} placeholder={document?document:\"Identity not verified\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    document:       state.client.user.document,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {uploadDocument} from \"../actions/user\";\r\n\r\nclass _UserIdentity extends Component {\r\n    render() {\r\n        const {identityCertified,countryName} = this.props;\r\n        const {uploadDocument} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"m-3\">You are applying to become a Thrubi member in the following country: <b>{countryName}</b></div>\r\n                <_ActionButton text={identityCertified===0?\"Upload a document to start the identity certification procedure\":\"Thrubi is certifying your identity\"}\r\n                               disabled={identityCertified!==0} buttonType=\"btn-primary\" action={uploadDocument} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n    countryName:        state.client.population.countryName,\r\n});\r\n\r\nconst UserIdentity = connect(mapStateToProps,{uploadDocument})(_UserIdentity);\r\n\r\nexport default UserIdentity;","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberDelete extends Component {\r\n    render() {\r\n        const {identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n        return (\r\n            <_ActionButton text={(identityCertified>0?\"Abandon country membership\":\"Terminate certification procedure\")+\" and select another country and currency\"}\r\n                           buttonType=\"btn-outline-secondary\" action={removeMembership} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberDelete = connect(mapStateToProps,{removeMembership})(_MemberDelete);\r\n\r\nexport default MemberDelete;\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {claim} from \"../actions/member\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <div className=\"text-primary\">\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <_ActionButton action={claim} disabled={!thrubiBlueEth}\r\n                                                               buttonType={\"btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                               text={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"}/>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton\r\n                                        disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                        buttonType={\"btn-\"+(this.state.claimProcedureActive?\"\":\"outline-\")+\"primary\"+(thrubiBlueEth?\" active\":\"\")}\r\n                                        text={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))}\r\n                                        action={() => {this.setState({claimProcedureActive: !this.state.claimProcedureActive});}} />\r\n                                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.claim,\r\n    populationId:       state.client.population.id,\r\n    claimBusy:          state.session.busy.action.claim,\r\n    thrubiBlueEth:      state.client.member.thrubiBlueEth,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    exrate:             state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {advancedMode,viewHistory} from \"../actions/member\";\r\n\r\nclass _MemberOptions extends Component {\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory} = this.props;\r\n        const {color} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <_ActionButton noMargin={\"small m-0 mt-2 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Show less details\":\"Show more details...\"}/>\r\n                {\r\n                    !optionAdvancedMode ? \"\"\r\n                    : <_ActionButton noMargin={\"small m-0 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"Hide history\":\"View history...\"} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,{advancedMode,viewHistory})(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Next month ₮B\"        bold={false} value={ member.thrubiBlueNext}         ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 bold={false} value={ member.thrubiBlueEth}          ccySymbol=\"Ξ\" />\r\n                    <_CcyRow text=\"₮B awards\"                   bold={false} value={ member.thrubiBlueAward}        ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                bold={false} value={member.thrubiBlueAwardTotal}    ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               bold={false} value={member.thrubiBlueClaimTotal}    ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        <MemberOptions color=\"primary\"/>\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from \"./_MemberBlue\";\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-primary\">\r\n                <_ActionButton text=\"Thrubi Blue\" buttonType={\"btn-outline-primary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberBlue\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Claim />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"text-secondary container\">\r\n                                                    {/*<_CcyRow text=\"Your Ξ balance\"\r\n                                                             bold={false}\r\n                                                             value=0 // add a worker that constantly checks Ξ balance from blockchain for account\r\n                                                             ccySymbol=\"Ξ\" />*/}\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees*100).toFixed(1)+\"%)\"}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*thrubiFees}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*(1-thrubiFees)*(!thrubiPriceSilver?0:(1/thrubiPriceSilver))}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <input id=\"transformEth\" ref={(input) => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm rounded-0\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                <_ActionButton buttonType={\"btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                               disabled={!this.state.transformEthValue}\r\n                                                               action={transform}\r\n                                                               payload={this.state.transformEthValue}\r\n                                                               text={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton disabled={(!thrubiSilver)&&(!this.state.transformProcedureActive)}\r\n                                                   buttonType={\"btn-\"+(this.state.transformProcedureActive?\"\":\"outline-\")+\"secondary\"+(thrubiSilver?\" active\":\"\")}\r\n                                                   text={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))}\r\n                                                   action={() => this.setState({transformProcedureActive: !this.state.transformProcedureActive})} />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React,{Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Next month ₮$\"           bold={false} value={ member.thrubiSilverNext} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\"             bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\"       bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n        <MemberOptions color=\"secondary\" />\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from \"./_MemberSilver\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-secondary\">\r\n                <_ActionButton text=\"Thrubi Silver\" buttonType={\"btn-outline-secondary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberSilver\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceSilver={thrubiPriceSilver}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Transform />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"My Thrubi Gold\"      bold={true}  value={ member.thrubiGold} ccySymbol={\"₮G\"} />\r\n            <_CcyRow text=\"Market value\"        bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <_ActionButton action={() => {}} text=\"Find gold Thrubi marketplace\" buttonType=\"btn-outline-success\" />\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _MemberGold from \"./_MemberGold\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-success\">\r\n                <_ActionButton text=\"Thrubi Gold\" buttonType={\"btn-outline-success\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberGold\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectPopulation,deselectPopulation} from \"../actions/population\";\r\n\r\nclass _Populations extends Component {\r\n    render() {\r\n        const {populations,populationId,countryFilter} = this.props;\r\n        const {selectPopulation,deselectPopulation} = this.props;\r\n\r\n        return (\r\n            populations\r\n                .filter(p => (\r\n                    !countryFilter\r\n                    || p.countryId.toLowerCase().includes(countryFilter.toLowerCase())\r\n                    || p.countryName.toLowerCase().includes(countryFilter.toLowerCase())\r\n                ))\r\n                .map((population,index) => {\r\n                return (\r\n                    <div key={index} className=\"bg-light py-0 px-2 p-lg-0 my-1\">\r\n                        <button\r\n                            className={\"btn btn-sm m-0 p-0 rounded-0 border-0 btn-block btn-outline-primary\"+\r\n                                ((populationId===population.populationId)?\" active\":\"\")}\r\n                            onClick={(populationId===population.populationId) ? (() => deselectPopulation(population)) : (() => selectPopulation(population))}\r\n                        >\r\n                            <div className=\"d-none d-lg-flex container-fluid row p-3 m-0\">\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.countryId}</div>\r\n                                <div className=\"col-lg-5 col-md-10 p-0 m-0 text-left\"> {population.countryName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccyId}</div>\r\n                                <div className=\"col-lg-4 col-md-8  p-0 m-0 text-left\">{population.ccyName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                            </div>\r\n                            <div className=\"d-block d-lg-none my-3 py-3 text-center\">\r\n                                {population.countryName} ({population.countryId}) - {population.ccyName} ({population.ccyId} {population.ccySymbol})\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    populations:        state.client.population.populations,\r\n    countryFilter:      state.client.population.countryFilter,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,deselectPopulation})(_Populations);\r\n\r\nexport default Populations;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/population\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {createMember} from \"../actions/member\";\r\nimport {changeCountryFilter} from \"../actions/population\";\r\n\r\nclass _PopulationSelect extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy,populationsNotAvailable} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if ((!populationsBusy)&&(populationsNotAvailable)) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,populationsNotAvailable,populationId} = this.props;\r\n        const {createMember,changeCountryFilter} = this.props;\r\n        let countryFilterXs,countryFilterLg;\r\n\r\n        return (\r\n            busy ? \"Loading...\" :\r\n                populationsBusy ? \"User populations loading...\" :\r\n                    populationsNotAvailable ? \"No populations found...\" :\r\n                        <Fragment>\r\n                            <div className=\"d-none d-lg-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 wMin800 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={(input) => countryFilterLg = input}\r\n                                               onChange={() => changeCountryFilter(countryFilterLg.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search country\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex d-lg-none flex-column flex-grow-1 align-items-center\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={(input) => countryFilterXs = input}\r\n                                               onChange={() => changeCountryFilter(countryFilterXs.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search country\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n    userId:                     state.client.user.id,\r\n    populationId:               state.client.population.id,\r\n});\r\n\r\nconst PopulationSelect = connect(mapStateToProps,{fetchPopulations,createMember,changeCountryFilter})(_PopulationSelect);\r\n\r\nexport default PopulationSelect;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationAdd extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst PopulationAdd = connect(mapStateToProps,{populationExists,createPopulation})(_PopulationAdd);\r\n\r\nexport default PopulationAdd;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <_ActionButton action={deletePopulation} text=\"Delete Population\" buttonType=\"btn-secondary\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst PopulationDelete = connect(mapStateToProps,{deletePopulation})(_PopulationDelete);\r\n\r\nexport default PopulationDelete;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationTune extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={(input) => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={(input) => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={(input) => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst PopulationTune = connect(mapStateToProps,{tunePopulation})(_PopulationTune);\r\n\r\nexport default PopulationTune;","import React, { Component,Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport Info from \"./Info\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport UserIdentity from \"./UserIdentity\"\r\nimport MemberDelete from \"./MemberDelete\"\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport PopulationSelect from \"./PopulationSelect\";\r\nimport PopulationAdd from \"./PopulationAdd\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport PopulationDelete from \"./PopulationDelete\";\r\nimport PopulationTune from \"./PopulationTune\"\r\nimport {close} from \"../actions/user\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\nimport \"./styles/User.scss\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,identityCertified,isMember,member} = this.props;\r\n        const {close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid row p-0 m-0 mb-5\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <Fragment>\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light p-0\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <Info />\r\n                                        :\r\n                                        !isMember ?\r\n                                            <Fragment>\r\n                                                <PopulationSelect />\r\n                                                { !auth ? \"\" : <PopulationAdd /> }\r\n                                            </Fragment>\r\n                                            :\r\n                                            <div className=\"bg-light mr-2 ml-2 ml-lg-0\">\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    identityCertified<=0 ?\r\n                                                        <div>\r\n                                                            <UserIdentity />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            {\r\n                                                                !auth ?\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"container-fluid row p-0 m-0\">\r\n                                                                            <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                                { (member.thrubiBlue || member.thrubiBlueNext || member.thrubiBlueEth\r\n                                                                                    || member.thrubiBlueAward || member.thrubiBlueAwardTotal || member.thrubiBlueClaimTotal)\r\n                                                                                    ? <ThrubiBlue /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                                { (member.thrubiSilver || member.thrubiSilverNext || member.thrubiSilverEth\r\n                                                                                    || member.thrubiSilverTransformTotal)\r\n                                                                                    ? <ThrubiSilver /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                                { (member.thrubiGold)\r\n                                                                                    ? <ThrubiGold /> : \"\"}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                    :\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationDelete/>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationTune />\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                            }\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </div>\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    isMember:           state.client.member.isMember,\r\n    member:             state.client.member,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{deletePopulation,close})(_User);\r\n\r\nexport default User;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsCountryCcy = ({\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span className=\"text-primary text-center small mr-2\">\r\n        Thrubi is launching in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nCountry:   state.global.stats.nCountry,\r\n    nCcy:       state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStatsCountryCcy = connect(mapStateToProps,{})(_GlobalStatsCountryCcy);\r\n\r\nexport default GlobalStatsCountryCcy;","import React,{Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\nimport GlobalStatsCountryCcy from \"./GlobalStatsCountryCcy\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <Fragment>\r\n        <div className=\"d-block d-lg-none container-fluid flex-md-nowrap p-0 footer\">\r\n            <div className=\"col-lg-12 float-right m-0 py-2 pt-2 text-center bg-light\">\r\n                <div className=\"text-dark navbar-nav pb-2\">Welcome to Thrubi!</div>\r\n                <GlobalStatsUsers />\r\n                <GlobalStatsCountryCcy/>\r\n            </div>\r\n            {\r\n                !ethNetwork || !ethAddress ? \"\" :\r\n                    <div className=\"col-lg-12 float-right mx-0 my-0 mb-1 text-center bg-light\">\r\n                        <div className=\"navbar-nav small consoleFont\">\r\n                            <div>\r\n                                <span className=\"badge badge-warning\"><span className=\"\">network/</span>{ethNetwork}</span>\r\n                                <span className=\"badge badge-info\">{ethAddress}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className=\"col-lg-12 float-right mx-0 my-0 mb-1 text-center bg-light\">\r\n                <div className=\"my-2 text-center\"><a className=\"nav-link text-primary\" href=\"mailto:info@thrubi.com\">Contact: info@thrubi.com</a></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"d-none d-lg-flex flex-md-nowrap p-0 container-fluid flex-grow-1 footer\">\r\n            <div className=\"col-lg-12 float-right m-0 text-center bg-light\">\r\n                <div className=\"my-2 text-center\">\r\n                    <GlobalStatsCountryCcy/>\r\n                    <a className=\"nav-link text-primary\" href=\"mailto:info@thrubi.com\">Contact: info@thrubi.com</a>\r\n                </div> {/* • */}\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].flareType===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].flareType===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../../config/http\";\r\nimport flareBook from \"../../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../../config/server\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../../env/workers\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()               => dispatch(fetchGlobalStats()))\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary d-flex flex-column align-items-stretch\">\n                <Header />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <div className=\"w-100 py-2 pt-4 pb-1 text-center\">\n                                    <h4 className=\"display-4 d-inline-block p-2 pb-4\">Rising inequality is toxic to growth</h4>\n                                    <i className=\"d-inline-block\">&nbsp;(Nick Hanauer)</i>\n                                    <h5 className=\"m-0 px-2\">\n                                        Thrubi enables wealthy individuals to transfer money directly and simultaneously to everybody in their country\n                                    </h5>\n                                    <h4 className=\"m-0 p-2\">\n                                        Our purpose? Solve extreme poverty.\n                                    </h4>\n                                    <h5 className=\"m-0 px-2\">\n                                        Create an account now and keep yourself up to date with the latest developments!\n                                    </h5>\n                                    <p className=\"p-2 pt-4\">\n                                        Thrubi is powered by in-house social models and public <a\n                                        target=\"_blank\" className=\"text-primary\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\n                                        target=\"_blank\" className=\"text-primary\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data.\n                                    </p>\n                                </div>\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}