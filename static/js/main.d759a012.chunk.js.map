{"version":3,"sources":["reducers/customMiddleware/thunkWrap.js","config/flare.js","classes/FlareQueue.js","reducers/config/actionTypes.js","actions/flare.js","reducers/customMiddleware/flareWrap.js","reducers/session/blockchain.js","reducers/session/flare.js","reducers/session/workers.js","reducers/session/busy.js","reducers/session.js","reducers/global/market.js","reducers/global/stats.js","reducers/global/country.js","reducers/global/ccy.js","reducers/global.js","config/guest.js","reducers/client/guest.js","config/user.js","reducers/client/user.js","reducers/client/userAccess.js","reducers/client/population.js","reducers/client/member.js","reducers/client.js","reducers/reducers.js","reducers/thrubiApp.js","components/GlobalStatsUsers.js","components/EthBadges.js","components/Header.js","components/MemberInfo.js","components/_CcyRow.js","classes/Channel.js","components/_ActionButton.js","env/server.js","config/http.js","actions/server.js","config/blockchain_ethereum.js","env/blockchain_ethereum.js","actions/market.js","config/market.js","env/workers.js","config/server.js","actions/member.js","actions/population.js","config/facebook.js","config/auth.js","env/auth.js","actions/auth.js","actions/blockchain_ethereum.js","config/redirect.js","env/redirect.js","actions/s3.js","actions/user.js","components/MemberDeclareIncome.js","components/MemberBar.js","components/_RadioButtons.js","components/_KeyboardChannel.js","actions/log.js","components/Auth.js","components/GuestSuggestion.js","actions/guest.js","components/GuestFaq.js","components/Chart.js","actions/chart.js","components/UserProfilePicture.js","config/s3.js","components/UserDetails.js","components/UserView.js","components/UserActivation.js","components/UserManageDetails.js","components/UserIdentity.js","components/Claim.js","components/MemberOptions.js","components/_MemberBlue.js","components/ThrubiBlue.js","components/Transform.js","components/_MemberSilver.js","components/ThrubiSilver.js","components/_MemberGold.js","components/ThrubiGold.js","components/Populations.js","components/PopulationSelect.js","actions/adminMenu.js","components/Countries.js","components/Ccys.js","components/PopulationAdd.js","components/PopulationDelete.js","components/PopulationTune.js","components/GuestMenu.js","components/GuestInfographics.js","components/User.js","components/GlobalStatsCountryCcy.js","components/Footer.js","components/Flare.js","actions/workers/globalStats.js","components/GuestBanner.js","components/App.js","index.js"],"names":["thunkWrap","dispatch","getState","next","action","flareBook","flareType","ERROR","WARNING","INFO","flareFallback","flare","fallback","thrubiFlareId","details","infoFlare","THANK_YOU","message","CANNOT_SUBSCRIBE_NEWSLETTER","CANNOT_TOGGLE_FAQ_STATE","DETECTED_ETH_NETWORK_CHANGE","DETECTED_ETH_ADDRESS_CHANGE","DEACTIVATED_ON","DEACTIVATED_OFF","DEACTIVATED_PENDING","EMAIL_VERIFIED_ON","EMAIL_VERIFIED_OFF","EMAIL_VERIFIED_PENDING","IDENTITY_CERTIFIED_ON","IDENTITY_CERTIFIED_OFF","IDENTITY_CERTIFIED_PENDING","INCOME_APPROVED_ON","INCOME_APPROVED_OFF","INCOME_APPROVED_PENDING","errorFlare","USER_ACTIVATION","UNEXPECTED_FLARE","THRUBI_SERVER_ERROR","THRUBI_CONNECTION_FAILED","FAILED_LOGOUT","FAILED_LOGIN","EXRATE_FETCH_ERROR","FB_NOT_FOUND","ERR_FETCH_GLOBAL_STATS","ERR_RECEIVE_GLOBAL_STATS","NO_ETHEREUM_CONFIG","CANNOT_ENABLE_ETHEREUM","ERR_USER_DETAILS","ERR_USER_PROFILE_PICTURE","toFixed","S3_UPLOAD_ERROR","ERR_ACCOUNT_CLOSE","ERR_GENERIC_USERMENU","ERR_PAY_CHANNEL_UPDATE","ERR_RECEIVE_CHANNEL_UPDATE","ERR_USER_CHANNEL_FETCH","ERR_CHANNEL_FETCH","ERR_USER_FLAGS","CHANNEL_CLOSED","MESSAGE_IGNORED","ERROR_STOP_TOKEN_REFRESH","FlareQueue","f","this","queue","then","Promise","resolve","actionType","APP_SHUTDOWN","LOGOUT","SET_GUEST_SUBSCRIBED","RECEIVE_GUEST_MENU_OPTION","TOGGLE_FAQ_STATE","STOP_AUTO_LOGIN","UPDATE_ETH_NETWORK","UPDATE_ETH_ADDRESS","REFRESH_TOKENS","RECEIVE_CHANNELS","RECEIVE_USER_CHANNELS","RECEIVE_LOGIN_CHANNEL","RECEIVE_PAY_CHANNEL","RECEIVE_RECEIVE_CHANNEL","RECEIVE_FACEBOOK_LOGIN_STATUS","RECEIVE_LINKEDIN_WINDOW_AND_LISTENER","CLEAR_LINKEDIN_WINDOW_AND_LISTENER","RECEIVE_LINKEDIN_LOGIN","RECEIVE_GOOGLE_WINDOW_AND_LISTENER","CLEAR_GOOGLE_WINDOW_AND_LISTENER","RECEIVE_GOOGLE_LOGIN","RECEIVE_TWITTER_WINDOW_AND_LISTENER","CLEAR_TWITTER_WINDOW_AND_LISTENER","RECEIVE_TWITTER_LOGIN","LOGIN","RECEIVE_USER_FLAGS","SET_USER_ACTIVATED","SET_USER_DEACTIVATED","RECEIVE_USER_DETAILS","DELETE_USER_DETAILS","DELETE_PROFILE_PICTURE","ABANDON_KEYBOARD","CHOOSE_KEYBOARD","SWITCH_OPTION_LOGIN_CREATE","SWITCH_OPTION_USER_MENU","SET_OPTION_ADVANCED_MODE","SET_OPTION_VIEW_HISTORY","CHANGE_POPULATION","RECEIVE_POPULATIONS","CLEAR_POPULATION","SELECT_POPULATION","POPULATION_EXISTS","RECEIVE_THRUBI_PRICE_SILVER","RECEIVE_THRUBI_PRICE_SILVER_NEXT","RECEIVE_STATS","RECEIVE_CONFIG","CLEAR_MEMBER","RECEIVE_MEMBER","RECEIVE_CCYS","SELECT_CCY","DESELECT_CCY","RECEIVE_COUNTRIES","SELECT_COUNTRY","RECEIVE_POPULATION_FILTER","DESELECT_COUNTRY","RECEIVE_EXRATE","RECEIVE_GLOBAL_STATS","RECEIVE_THRUBI_CONTRACT","SET_BUSY","SET_NOT_BUSY","INCREASE_FLARE_NEXT","EMIT_FLARE","DELETE_FLARE","REFRESH_FLARE_TIMEOUT","RECEIVE_ETH_NETWORK_WORKER","RECEIVE_ETH_ADDRESS_WORKER","RECEIVE_REFRESH_TOKENS_WORKER","RECEIVE_GLOBAL_STATS_WORKER","RECEIVE_USER_WORKER","RECEIVE_MEMBER_WORKER","RECEIVE_MARKET_WORKER","RECEIVE_POPULATION_WORKER","STOP_ETH_NETWORK_WORKER","STOP_ETH_ADDRESS_WORKER","STOP_REFRESH_TOKENS_WORKER","STOP_GLOBAL_STATS_WORKER","STOP_USER_WORKER","STOP_MEMBER_WORKER","STOP_MARKET_WORKER","STOP_POPULATION_WORKER","Object","keys","map","key","busyPayload","BUSY_COMPONENT_APP","busyType","busyId","BUSY_COMPONENT_TITLEBAR","BUSY_COMPONENT_VIEWPORT","BUSY_COMPONENT_DASHBOARD","BUSY_COMPONENT_CLIENT","BUSY_COMPONENT_AUTH","BUSY_COMPONENT_USER","BUSY_COMPONENT_CLAIM","BUSY_COMPONENT_TRANSFORM","BUSY_COMPONENT_USERMENU","BUSY_COMPONENT_ADMINMENU","BUSY_ACTION_FETCHPOPULATIONS","BUSY_ACTION_ACTIVATION","BUSY_ACTION_CLAIM","BUSY_ACTION_TRANSFORM","BUSY_ACTION_USERDETAILS","BUSY_ACTION_ACTIVATEUSER","BUSY_ACTION_DECLAREINCOME","BUSY_ACTION_POPULATIONS","emitFlare","a","console","error","waiter","waiterResolve","index","addToQueue","value","session","type","payload","fallbackFlare","displayMessage","serverError","JSON","stringify","strDetails","displayDetails","setTimeout","deleteFlare","deleteTimeout","clearTimeout","flares","flareWrap","catch","blockchainInit","thrubiContract","blockchain","state","assign","flareInit","deactivated","length","toString","filter","workersInit","ethNetwork","ethAddress","refreshTokens","globalStats","user","member","market","population","workers","ethNetworkWorker","ethAddressWorker","refreshTokensWorker","globalStatsWorker","userWorker","memberWorker","marketWorker","populationWorker","busyInit","component","app","titlebar","viewport","dashboard","client","auth","claim","transform","userMenu","adminMenu","fetchPopulations","activation","userDetails","activateUser","declareIncome","populations","busy","combineReducers","marketInit","exrate","statsInit","nUser","nCountry","nCcy","stats","countryInit","countries","id","country","countryId","ccyInit","ccys","ccy","ccyId","global","guestMenuOption","suggestionType","IDENTITY_CERTIFICATION","INCOME_VERIFICATION","guestInit","subscribed","faqState","guest","guestSubscribed","actionValue","loggableActionType","loggableActionValue","VISION_IDENTITY","VISION_INCOME_DISCLOSE","VISION_INCOME_VERIFY","VISION_INCOME_FRAUD","VISION_UBI_MONTHLY","VISION_TAX_HAVENS","WEALTHY_GOLD","WEALTHY_COMPANY","WEALTHY_WORLDWIDE","WEALTHY_PUBLIC_INFO","WEALTHY_BUSINESS_MODEL","SOCIETIES_THRUBI_WHY","SOCIETIES_UBI_GOV","SOCIETIES_MODELS_PUBLIC","SOCIETIES_GOV_CONTRIBUTE","SOCIETIES_MODELS_ABOUT","SOCIETIES_FLAT_UBI","flags","emailVerified","identityCertified","incomeApproved","userFlags","flagFlare","newState","flag","activationState","detailName","userOptions","optionLoginCreate","CREATE","optionUserMenu","ADD","USER","PAY","MANAGE","optionKeyboardMode","UPDATE","userInit","role","name","surname","email","document","profilePicture","optionAdvancedMode","optionViewHistory","parseInt","userId","userRole","userAccessInit","autoLogin","loggedIn","loginChannel","payChannel","receiveChannel","channels","TWITTER","FACEBOOK","GOOGLE","LINKEDIN","BLOCKCHAIN_ETHEREUM","PAYPAL","KEYBOARD","facebookStatus","facebookUserId","facebookUserAccessToken","linkedInWindow","linkedInListener","linkedInCode","linkedInState","googleWindow","googleListener","googleCode","twitterWindow","twitterListener","twitterRequestToken","twitterOAuthVerifier","accessJwt","refreshJwt","userAccess","code","populationInit","exists","countryName","ccyName","ccySymbol","thrubiPriceSilver","thrubiPriceSilverNext","thrubiPriceGold","brake","mincome","equality","warperMincome","warperEquality","thrubiFees","populationId","parseFloat","config","memberInit","isMember","mCurrent","thrubiMode","thrubiBlue","thrubiBlueNext","thrubiBlueEth","thrubiBlueAward","thrubiBlueAwardTotal","thrubiBlueClaimTotal","thrubiSilver","thrubiSilverNext","thrubiSilverEth","thrubiSilverTransformTotal","thrubiGold","reducers","middlewares","push","createLogger","thrubiApp","createStore","applyMiddleware","GlobalStatsUsers","connect","className","Header","position","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundBlendMode","src","alt","height","width","EthBadges","MemberInfo","_CcyRow","text","bold","isNaN","Channel","channelMode","Math","abs","channelName","NOT_AVAILABLE","_ActionButton","props","buttonType","disabled","channel","noMargin","onClick","event","preventDefault","channelColor","includes","children","Component","uri","requestType","headers","processRequest","requestUri","json","reject","callback","response","packet","result","body","statusCode","errorPackage","options","url","request","get","post","ethEventType","THRUBI_ABI","startMarketWorker","setInterval","activity","data","amount","stopMarketWorker","clearInterval","endpoint","startMemberWorker","stopMemberWorker","selectPopulation","deselectPopulation","stopPopulationWorker","startPopulationWorker","fetchThrubiPriceSilver","fetchThrubiPriceSilverNext","fetchStats","fetchConfig","facebook","connected","unknown","not_authorized","linkedInAuthUri","linkedInRedirectUri","linkedInAppState","linkedInAppClientId","googleAuthUri","googleRedirectUri","googleAppClientId","twitterAuthUri","switchOptionLoginCreate","logout","cancelRefreshTokens","fetchChannels","stopUserWorker","FBlogout","finally","scheduleRefreshTokens","intervalTime","tokens","accessJwtExpiry","i","fetchUserChannels","deleteChannel","getPayChannel","setPayChannel","channelIsOpen","switchOptionUserMenu","newPayChannel","getReceiveChannel","setReceiveChannel","newReceiveChannel","finalizeLogin","loginData","loginError","fetchDetails","activateUserWorker","verifyBlockchainEthereum","challengeTokens","challengeJwt","hashedJwt","hash","web3","Web3","givenProvider","eth","personal","sign","signedMessage","challengeSolution","createBlockchainEthereum","solvedChallenge","loginBlockchainEthereum","addBlockchainEthereum","updateBlockchainEthereum","createKeyboardForm","username","password","loginKeyboardForm","addKeyboardForm","abandonKeyboard","updateKeyboardForm","chooseKeyboard","createKeyboard","loginKeyboard","addKeyboard","updateKeyboard","receiveFacebookLoginStatus","loginStatus","facebookLoginStatus","status","authResponse","userID","accessToken","FBgetLoginStatus","resolveFBlogin","window","FB","resolveFBgetLoginStatus","getLoginStatus","resolveFBlogout","connectFacebook","login","scope","fetchFacebookDetails","fbDetails","api","d","first_name","last_name","picture","storeDetails","overwrite","createFacebook","fbLoginPackage","loginFacebook","addFacebook","updateFacebook","processLinkedInLogin","waitingHandleResolve","origin","pjRenamed","removeEventListener","close","startupLinkedInLogin","linkedInInterval","waitingHandle","closed","openNewWindow","open","focus","addEventListener","createLinkedIn","liLoginPackage","loginLinkedIn","addLinkedIn","updateLinkedIn","processGoogleLogin","startupGoogleLogin","googleInterval","createGoogle","gLoginPackage","loginGoogle","addGoogle","updateGoogle","processTwitterLogin","startupTwitterLogin","twitterInterval","token","requestToken","createTwitter","tLoginPackage","loginTwitter","addTwitter","updateTwitter","createPayPal","loginPayPal","addPayPal","updatePayPal","sendRedirect","location","search","params","parse","decodeURI","replace","pJson","oauth_token","oauth_verifier","opener","postMessage","uploadS3","signedRequest","axios","put","e","detail","detailValue","currentFlag","incomingFlag","_MemberDeclareIncome","mDeclared","declareIncomeBusy","ref","input","placeholder","required","MemberDeclareIncome","_MemberBar","removeMembership","data-dismiss","MemberBar","_RadioButtons","columnSize","activeFilter","color","checkedFilter","elements","data-toggle","element","defaultChecked","_KeyboardChannel","abandonAction","abandonButtonType","refs","logAction","_Auth","toLowerCase","channelAuthFunctionName","keyboardChannelMessage","channelIsForLogin","channelUserFriendlyName","authFunction","disabledFilter","setter","o","channelIsForPay","mode","actions","Auth","_GuestSuggestion","transparent","submitSuggestion","suggestionText","GuestSuggestion","_GuestFaq","visionText","wealthyText","societiesText","target","rel","href","toggleFaq","buttonText","list","suggestion","image","bg","header","l","GuestFaq","_Chart","d3plot","svgChart","Chart","handleMouseOver","handleMouseOut","select","attr","circleRadius","x","y","remove","xScale","xValue","g","append","margin","right","left","yScale","yValue","bootstrapColors","thrubiBlueChart","format","thrubiSilverChart","thrubiGoldChart","svg","clientWidth","paddingLeft","xTicks","innerWidth","top","bottom","innerHeight","selectAll","m","minxValue","min","maxxValue","max","scaleLinear","domain","rangeRound","nice","n","minyValue","maxyValue","scaleLog","xAxis","axisBottom","tickSize","tickPadding","ticks","xAxisG","call","yAxis","axisLeft","tickFormat","yAxisG","enter","on","_UserProfilePicture","localProfilePicture","deleteProfilePicture","uploadProfilePicture","for","onChange","UserProfilePicture","fileRef","files","size","fileName","fileType","fileSize","awsPacket","signedPutUri","unsignedGetUri","_UserDetails","UserDetails","_UserView","UserView","UserActivation","activateUserBusy","deactivateUser","UserManageDetails","updateUserBusy","deleteDetails","fieldClassName","_UserIdentity","uploadDocument","UserIdentity","_Claim","claimProcedureActive","claimBusy","setState","Claim","_MemberOptions","advancedMode","viewHistory","MemberOptions","_MemberBlue","_ThrubiBlue","showPanel","manualPanel","ThrubiBlue","_Transform","transformEthValue","transformProcedureActive","transformBusy","transformEthRef","newValue","Transform","transformEth","transformContract","methods","send","from","once","_MemberSilver","_ThrubiSilver","ThrubiSilver","_MemberGold","_ThrubiGold","ThrubiGold","_Populations","p","Populations","_PopulationSelect","reload","populationsBusy","populationsNotAvailable","countryFilterXs","countryFilterLg","createMember","changeFilter","PopulationSelect","forEach","deletePopulation","_Countries","fetchCountries","selectCountry","deselectCountry","Countries","_Ccys","fetchCcys","selectCcy","deselectCcy","Ccys","_PopulationAdd","verifyExists","populationExists","createPopulation","PopulationAdd","_PopulationDelete","PopulationDelete","_PopulationTune","newBrake","newWarperMincome","newWarperEquality","tunePopulation","onSubmit","PopulationTune","_GuestMenu","selected","chooseGuestMenu","GuestMenu","_GuestInfographics","GuestInfographics","_User","guestOption","User","GlobalStatsCountryCcy","Footer","data-show-count","data-patreon-widget-type","title","allowTransparency","frameBorder","_Flare","refreshFlare","onMouseOver","onMouseOut","slice","Flare","long","stopGlobalStatsWorker","_GuestBanner","guestEmail","guestSubscribeNewsletter","GuestBanner","_App","startGlobalStatsWorker","enableBlockchain","all","App","results","Contract","net","getNetworkType","changed","ethereum","enable","getAccounts","accounts","store","ReactDOM","render","basename","process","exact","path","getElementById"],"mappings":"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","file":"static/js/main.d759a012.chunk.js","sourcesContent":["const thunkWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action.action === \"function\") {\r\n        return action.action(action => dispatch({action}),getState);\r\n    }\r\n\r\n    return next(action.action);\r\n};\r\n\r\nexport default thunkWrap;\r\n\r\n","import {AMAZON_S3_MAX_PICTURE_SIZE} from \"./s3\";\r\n\r\nconst flareBook = {\r\n    flareType: {\r\n        ERROR:      \"ERROR\",\r\n        WARNING:    \"WARNING\",\r\n        INFO:       \"INFO\",\r\n    },\r\n    flareFallback: (flare,fallback) => {\r\n        if (flare && flare.thrubiFlareId) {\r\n            return flare;\r\n        } else {\r\n            fallback.details=flare;\r\n            return fallback;\r\n        }\r\n    },\r\n    infoFlare: {\r\n        THANK_YOU:                  {thrubiFlareId:\"I_TY\",message:\"Thank you!\"},\r\n        CANNOT_SUBSCRIBE_NEWSLETTER:{thrubiFlareId:\"I015\",message:\"Could not subscribe you to the newsletter, please try again\"},\r\n        CANNOT_TOGGLE_FAQ_STATE:    {thrubiFlareId:\"I016\",message:\"Something went wrong with toggling the content\"},\r\n        DETECTED_ETH_NETWORK_CHANGE:{thrubiFlareId:\"I001\",message:\"Detected Ethereum network change\"},\r\n        DETECTED_ETH_ADDRESS_CHANGE:{thrubiFlareId:\"I002\",message:\"Detected Ethereum address change\"},\r\n        DEACTIVATED_ON:             {thrubiFlareId:\"I003\",message:\"User account is deactivated\"},\r\n        DEACTIVATED_OFF:            {thrubiFlareId:\"I004\",message:\"User account is now active\"},\r\n        DEACTIVATED_PENDING:        {thrubiFlareId:\"I005\",message:\"User account is now pending activation\"},\r\n        EMAIL_VERIFIED_ON:          {thrubiFlareId:\"I006\",message:\"Email address has been verified\"},\r\n        EMAIL_VERIFIED_OFF:         {thrubiFlareId:\"I007\",message:\"Unverified email address detected. Please check your inbox.\"},\r\n        EMAIL_VERIFIED_PENDING:     {thrubiFlareId:\"I008\",message:\"Email address pending verification. Please check your inbox.\"},\r\n        IDENTITY_CERTIFIED_ON:      {thrubiFlareId:\"I009\",message:\"Identity document certified\"},\r\n        IDENTITY_CERTIFIED_OFF:     {thrubiFlareId:\"I010\",message:\"Non-certified identity document detected. Please certify.\"},\r\n        IDENTITY_CERTIFIED_PENDING: {thrubiFlareId:\"I011\",message:\"Identity certification procedure pending. Please wait.\"},\r\n        INCOME_APPROVED_ON:         {thrubiFlareId:\"I012\",message:\"Declared income has been officially approved\"},\r\n        INCOME_APPROVED_OFF:        {thrubiFlareId:\"I013\",message:\"Newly declared income is not approved, please check.\"},\r\n        INCOME_APPROVED_PENDING:    {thrubiFlareId:\"I014\",message:\"Newly declared income is pending approval. Please wait.\"},\r\n    },\r\n    errorFlare: {\r\n        USER_ACTIVATION:            {thrubiFlareId:\"0021\",message:\"User activation module error\"},\r\n        UNEXPECTED_FLARE:           {thrubiFlareId:\"0009\",message:\"Flares must have an ID to be dispatched\"},\r\n        THRUBI_SERVER_ERROR:        {thrubiFlareId:\"0001\",message:\"Thrubi server returned an error\"},\r\n        THRUBI_CONNECTION_FAILED:   {thrubiFlareId:\"0002\",message:\"Thrubi server not available, please check your connection\"},\r\n        FAILED_LOGOUT:              {thrubiFlareId:\"0003\",message:\"Unable to logout\"},\r\n        FAILED_LOGIN:               {thrubiFlareId:\"0008\",message:\"Login failed\"},\r\n        EXRATE_FETCH_ERROR:         {thrubiFlareId:\"0010\",message:\"Failed fetching exchange rate from Coinbase server\"},\r\n        FB_NOT_FOUND:               {thrubiFlareId:\"0004\",message:\"Unable to connect to Facebook\"},\r\n        ERR_FETCH_GLOBAL_STATS:     {thrubiFlareId:\"0011\",message:\"Error while receiving global stats\"},\r\n        ERR_RECEIVE_GLOBAL_STATS:   {thrubiFlareId:\"0012\",message:\"Error while processing global stats\"},\r\n        NO_ETHEREUM_CONFIG:         {thrubiFlareId:\"0022\",message:\"Ethereum wallet not found, please configure or enable MetaMask\"},\r\n        CANNOT_ENABLE_ETHEREUM:     {thrubiFlareId:\"0013\",message:\"Could not enable Ethereum\"},\r\n        ERR_USER_DETAILS:           {thrubiFlareId:\"0014\",message:\"Error processing user details\"},\r\n        ERR_USER_PROFILE_PICTURE:   {thrubiFlareId:\"0023\",message:\"Please upload a JPG or PNG file, max size: \"+((AMAZON_S3_MAX_PICTURE_SIZE/1000).toFixed(0))+\" kB\"},\r\n        S3_UPLOAD_ERROR:            {thrubiFlareId:\"0024\",message:\"Could not upload picture to Amazon S3\"},\r\n        ERR_ACCOUNT_CLOSE:          {thrubiFlareId:\"0015\",message:\"Could not close user account\"},\r\n        ERR_GENERIC_USERMENU:       {thrubiFlareId:\"0016\",message:\"Internal: error with an user menu operation\"},\r\n        ERR_PAY_CHANNEL_UPDATE:     {thrubiFlareId:\"0017\",message:\"Error updating user pay channel\"},\r\n        ERR_RECEIVE_CHANNEL_UPDATE: {thrubiFlareId:\"0023\",message:\"Error updating user receive channel\"},\r\n        ERR_USER_CHANNEL_FETCH:     {thrubiFlareId:\"0018\",message:\"Error fetching user channels\"},\r\n        ERR_CHANNEL_FETCH:          {thrubiFlareId:\"0019\",message:\"Error fetching channels\"},\r\n        ERR_USER_FLAGS:             {thrubiFlareId:\"0020\",message:\"Could not update user flags\"},\r\n        CHANNEL_CLOSED:             {thrubiFlareId:\"0005\",message:\"Switching to Add Channel page, channel is not open\"},\r\n        MESSAGE_IGNORED:            {thrubiFlareId:\"0006\",message:\"Internal: message from login popup ignored\"},\r\n        ERROR_STOP_TOKEN_REFRESH:   {thrubiFlareId:\"0007\",message:\"Internal: error stopping token refresh\"},\r\n    },\r\n};\r\n\r\nexport default flareBook;\r\n\r\nexport const TIMEOUT_FLARE_DELETE = 7000;\r\nexport const TIMEOUT_FLARE_DELETE_LONG = 30000;","class FlareQueue {\r\n    static queue = Promise.resolve();\r\n\r\n    static addToQueue(f) {\r\n        this.queue = this.queue.then(f);\r\n    }\r\n}\r\n\r\nexport default FlareQueue;","let actionType = {\r\n    APP_SHUTDOWN: null,\r\n    LOGOUT: null,\r\n    SET_GUEST_SUBSCRIBED: null,\r\n    RECEIVE_GUEST_MENU_OPTION: null,\r\n    TOGGLE_FAQ_STATE: null,\r\n    STOP_AUTO_LOGIN: null,\r\n    UPDATE_ETH_NETWORK: null,\r\n    UPDATE_ETH_ADDRESS: null,\r\n    REFRESH_TOKENS: null,\r\n    RECEIVE_CHANNELS: null,\r\n    RECEIVE_USER_CHANNELS: null,\r\n    RECEIVE_LOGIN_CHANNEL: null,\r\n    RECEIVE_PAY_CHANNEL: null,\r\n    RECEIVE_RECEIVE_CHANNEL: null,\r\n    RECEIVE_FACEBOOK_LOGIN_STATUS: null,\r\n    RECEIVE_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    CLEAR_LINKEDIN_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_LINKEDIN_LOGIN: null,\r\n    RECEIVE_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    CLEAR_GOOGLE_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_GOOGLE_LOGIN: null,\r\n    RECEIVE_TWITTER_WINDOW_AND_LISTENER: null,\r\n    CLEAR_TWITTER_WINDOW_AND_LISTENER: null,\r\n    RECEIVE_TWITTER_LOGIN: null,\r\n    LOGIN: null,\r\n    RECEIVE_USER_FLAGS: null,\r\n    SET_USER_ACTIVATED: null,\r\n    SET_USER_DEACTIVATED: null,\r\n    RECEIVE_USER_DETAILS: null,\r\n    DELETE_USER_DETAILS: null,\r\n    DELETE_PROFILE_PICTURE: null,\r\n    ABANDON_KEYBOARD: null,\r\n    CHOOSE_KEYBOARD: null,\r\n    SWITCH_OPTION_LOGIN_CREATE: null,\r\n    SWITCH_OPTION_USER_MENU: null,\r\n    SET_OPTION_ADVANCED_MODE: null,\r\n    SET_OPTION_VIEW_HISTORY: null,\r\n    CHANGE_POPULATION: null,\r\n    RECEIVE_POPULATIONS: null,\r\n    CLEAR_POPULATION: null,\r\n    SELECT_POPULATION: null,\r\n    POPULATION_EXISTS: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER: null,\r\n    RECEIVE_THRUBI_PRICE_SILVER_NEXT: null,\r\n    RECEIVE_STATS: null,\r\n    RECEIVE_CONFIG: null,\r\n    CLEAR_MEMBER: null,\r\n    RECEIVE_MEMBER: null,\r\n    RECEIVE_CCYS: null,\r\n    SELECT_CCY: null,\r\n    DESELECT_CCY: null,\r\n    RECEIVE_COUNTRIES: null,\r\n    SELECT_COUNTRY: null,\r\n    RECEIVE_POPULATION_FILTER: null,\r\n    DESELECT_COUNTRY: null,\r\n    RECEIVE_EXRATE: null,\r\n    RECEIVE_GLOBAL_STATS: null,\r\n    RECEIVE_THRUBI_CONTRACT: null,\r\n    SET_BUSY: null,\r\n    SET_NOT_BUSY: null,\r\n    INCREASE_FLARE_NEXT: null,\r\n    EMIT_FLARE: null,\r\n    DELETE_FLARE: null,\r\n    REFRESH_FLARE_TIMEOUT: null,\r\n    RECEIVE_ETH_NETWORK_WORKER: null,\r\n    RECEIVE_ETH_ADDRESS_WORKER: null,\r\n    RECEIVE_REFRESH_TOKENS_WORKER: null,\r\n    RECEIVE_GLOBAL_STATS_WORKER: null,\r\n    RECEIVE_USER_WORKER: null,\r\n    RECEIVE_MEMBER_WORKER: null,\r\n    RECEIVE_MARKET_WORKER: null,\r\n    RECEIVE_POPULATION_WORKER: null,\r\n    STOP_ETH_NETWORK_WORKER: null,\r\n    STOP_ETH_ADDRESS_WORKER: null,\r\n    STOP_REFRESH_TOKENS_WORKER: null,\r\n    STOP_GLOBAL_STATS_WORKER: null,\r\n    STOP_USER_WORKER: null,\r\n    STOP_MEMBER_WORKER: null,\r\n    STOP_MARKET_WORKER: null,\r\n    STOP_POPULATION_WORKER: null,\r\n};\r\n\r\nObject.keys(actionType).map(key => actionType[key]=key);\r\n\r\nexport const busyPayload =  {\r\n    BUSY_COMPONENT_APP:             {busyType:\"component\",busyId:\"app\"},\r\n    BUSY_COMPONENT_TITLEBAR:        {busyType:\"component\",busyId:\"titlebar\"},\r\n    BUSY_COMPONENT_VIEWPORT:        {busyType:\"component\",busyId:\"viewport\"},\r\n    BUSY_COMPONENT_DASHBOARD:       {busyType:\"component\",busyId:\"dashboard\"},\r\n    BUSY_COMPONENT_CLIENT:          {busyType:\"component\",busyId:\"client\"},\r\n    BUSY_COMPONENT_AUTH:            {busyType:\"component\",busyId:\"auth\"},\r\n    BUSY_COMPONENT_USER:            {busyType:\"component\",busyId:\"user\"},\r\n    BUSY_COMPONENT_CLAIM:           {busyType:\"component\",busyId:\"claim\"},\r\n    BUSY_COMPONENT_TRANSFORM:       {busyType:\"component\",busyId:\"transform\"},\r\n    BUSY_COMPONENT_USERMENU:        {busyType:\"component\",busyId:\"userMenu\"},\r\n    BUSY_COMPONENT_ADMINMENU:       {busyType:\"component\",busyId:\"adminMenu\"},\r\n    BUSY_ACTION_FETCHPOPULATIONS:   {busyType:\"action\",busyId:\"fetchPopulations\"},\r\n    BUSY_ACTION_ACTIVATION:         {busyType:\"action\",busyId:\"activation\"},\r\n    BUSY_ACTION_CLAIM:              {busyType:\"action\",busyId:\"claim\"},\r\n    BUSY_ACTION_TRANSFORM:          {busyType:\"action\",busyId:\"transform\"},\r\n    BUSY_ACTION_USERDETAILS:        {busyType:\"action\",busyId:\"userDetails\"},\r\n    BUSY_ACTION_ACTIVATEUSER:       {busyType:\"action\",busyId:\"activateUser\"},\r\n    BUSY_ACTION_DECLAREINCOME:      {busyType:\"action\",busyId:\"declareIncome\"},\r\n    BUSY_ACTION_POPULATIONS:        {busyType:\"action\",busyId:\"populations\"},\r\n};\r\n\r\nexport default actionType;","import FlareQueue from \"../classes/FlareQueue\";\r\nimport flareBook,{TIMEOUT_FLARE_DELETE,TIMEOUT_FLARE_DELETE_LONG} from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\n\r\nexport const getFlareNext = () => async (dispatch,getState) => {\r\n    let waiterResolve;\r\n    let waiter = new Promise(resolve => waiterResolve=resolve);\r\n    let index = {};\r\n    FlareQueue.addToQueue(() => Promise.resolve()\r\n        .then(()            => index.value = getState().session.flare.next)\r\n        .then(()            => dispatch({type:actionType.INCREASE_FLARE_NEXT,payload:{}}))\r\n        .then(()            => waiterResolve(index.value))\r\n    );\r\n    return waiter;\r\n};\r\n\r\nexport const emitFlare = (flareType,flare) => async (dispatch,getState) => {\r\n    let index,fallbackFlare,displayMessage,displayDetails;\r\n    console.error(\"flare: \",flare);\r\n    return Promise.resolve()\r\n        .then(()            => dispatch(getFlareNext()))\r\n        .then(next          => index = next)\r\n        .then(()            => fallbackFlare = flareBook.flareFallback(flare,flareBook.errorFlare.UNEXPECTED_FLARE))\r\n        .then(()            => displayMessage = fallbackFlare.thrubiFlareId===flareBook.errorFlare.THRUBI_SERVER_ERROR.thrubiFlareId ? fallbackFlare.serverError : fallbackFlare.message)\r\n        .then(()            => JSON.stringify(fallbackFlare.details))\r\n        .then(strDetails    => displayDetails = typeof fallbackFlare.details === \"string\" ? fallbackFlare.details : strDetails)\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.EMIT_FLARE,payload:{index,flareType,message:displayMessage,details:displayDetails,deleteTimeout}}));\r\n};\r\n\r\nexport const deleteFlare = index => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => dispatch({type:actionType.DELETE_FLARE,payload:{index}}));\r\n};\r\n\r\nexport const refreshFlare = (index,long=false) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then(()            => clearTimeout(getState().session.flare.flares[index].deleteTimeout))\r\n        .then(()            => setTimeout(() => dispatch(deleteFlare(index)),long?TIMEOUT_FLARE_DELETE_LONG:TIMEOUT_FLARE_DELETE))\r\n        .then(deleteTimeout => dispatch({type:actionType.REFRESH_FLARE_TIMEOUT,payload:{index,deleteTimeout}}));\r\n};","import flareBook from \"../../config/flare\";\r\nimport {emitFlare} from \"../../actions/flare\";\r\n\r\nconst flareWrap = ({dispatch,getState}) => next => action => {\r\n    if (typeof action === \"function\") { //it is the outer one\r\n        return dispatch({action})       //wrap it (note: emitFlare in the catch also wrapped)\r\n            .catch(error => {dispatch({action:emitFlare(flareBook.flareType.ERROR,error)});});\r\n    }  else if (action.action) {        //it has been wrapped\r\n        return next(action);\r\n    }\r\n};\r\n\r\nexport default flareWrap;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst blockchainInit = {\r\n    thrubiContract: {},\r\n};\r\n\r\nconst blockchain = (state = blockchainInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_THRUBI_CONTRACT:\r\n            return Object.assign({},state,{thrubiContract:action.payload.thrubiContract});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default blockchain;","import actionType from \"../config/actionTypes\";\r\n\r\nconst flareInit = {\r\n    deactivated: true,\r\n    next: 0,\r\n    flares: {},\r\n};\r\n\r\nconst flare = (state = flareInit, action) => {\r\n    switch (action.type) {\r\n        case actionType.INCREASE_FLARE_NEXT:\r\n            return Object.assign({},state,{\r\n                next:           state.next+1,\r\n            });\r\n        case actionType.EMIT_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    false,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      action.payload.flareType,\r\n                        message:        action.payload.message,\r\n                        details:        action.payload.details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        case actionType.DELETE_FLARE:\r\n            return Object.assign({},state,{\r\n                deactivated:    (Object.keys(state.flares).length===1)&&(Object.keys(state.flares)[0]===action.payload.index),\r\n                flares:         Object.assign({},\r\n                    ...Object.keys(state.flares)\r\n                        .map(index => {if (index.toString()!==action.payload.index.toString()) return {[index]:state.flares[index]}; else return null;})\r\n                        .filter(flare => flare!==null)),\r\n            });\r\n        case actionType.REFRESH_FLARE_TIMEOUT:\r\n            return Object.assign({},state,{\r\n                deactivated:    state.deactivated,\r\n                flares:         Object.assign({},state.flares,{\r\n                    [action.payload.index]:{\r\n                        flareType:      state.flares[action.payload.index].flareType,\r\n                        message:        state.flares[action.payload.index].message,\r\n                        details:        state.flares[action.payload.index].details,\r\n                        deleteTimeout:  action.payload.deleteTimeout,\r\n                    }\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default flare;","import actionType from \"../config/actionTypes\";\r\n\r\nconst workersInit = {\r\n    ethNetwork: null,\r\n    ethAddress: null,\r\n    refreshTokens: null,\r\n    globalStats: null,\r\n    user: null,\r\n    member: null,\r\n    market: null,\r\n    population: null,\r\n};\r\n\r\nconst workers = (state = workersInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:action.payload.ethNetworkWorker,});\r\n        case actionType.RECEIVE_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:action.payload.ethAddressWorker,});\r\n        case actionType.RECEIVE_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:action.payload.refreshTokensWorker,});\r\n        case actionType.RECEIVE_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:action.payload.globalStatsWorker,});\r\n        case actionType.RECEIVE_USER_WORKER:\r\n            return Object.assign({},state,{user:action.payload.userWorker,});\r\n        case actionType.RECEIVE_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:action.payload.memberWorker,});\r\n        case actionType.RECEIVE_MARKET_WORKER:\r\n            return Object.assign({},state,{market:action.payload.marketWorker,});\r\n        case actionType.RECEIVE_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:action.payload.populationWorker,});\r\n        case actionType.STOP_ETH_NETWORK_WORKER:\r\n            return Object.assign({},state,{ethNetwork:null,});\r\n        case actionType.STOP_ETH_ADDRESS_WORKER:\r\n            return Object.assign({},state,{ethAddress:null,});\r\n        case actionType.STOP_REFRESH_TOKENS_WORKER:\r\n            return Object.assign({},state,{refreshTokens:null,});\r\n        case actionType.STOP_GLOBAL_STATS_WORKER:\r\n            return Object.assign({},state,{globalStats:null,});\r\n        case actionType.STOP_USER_WORKER:\r\n            return Object.assign({},state,{user:null,});\r\n        case actionType.STOP_MEMBER_WORKER:\r\n            return Object.assign({},state,{member:null,});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return Object.assign({},state,{market:null,});\r\n        case actionType.STOP_POPULATION_WORKER:\r\n            return Object.assign({},state,{population:null,});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default workers;","import actionType from \"../config/actionTypes\";\r\n\r\nconst busyInit = {\r\n    component: {\r\n        app:                false,\r\n        titlebar:           false,\r\n        viewport:           false,\r\n        dashboard:          false,\r\n        client:             false,\r\n        auth:               false,\r\n        user:               false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userMenu:           false,\r\n        adminMenu:          false,\r\n    },\r\n    action: {\r\n        fetchPopulations:   false,\r\n        activation:         false,\r\n        claim:              false,\r\n        transform:          false,\r\n        userDetails:        false,\r\n        activateUser:       false,\r\n        declareIncome:      false,\r\n        populations:        false,\r\n    }\r\n};\r\n\r\nconst busy = (state = busyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.SET_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: true\r\n                })\r\n            });\r\n        case actionType.SET_NOT_BUSY:\r\n            return Object.assign({},state,{\r\n                [action.payload.busyType]: Object.assign({}, state[action.payload.busyType], {\r\n                    [action.payload.busyId]: false\r\n                })\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default busy;","import blockchain from \"./session/blockchain\";\r\nimport flare from \"./session/flare\";\r\nimport workers from \"./session/workers\";\r\nimport busy from \"./session/busy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst session = combineReducers({\r\n    blockchain,\r\n    workers,\r\n    busy,\r\n    flare,\r\n});\r\n\r\nexport default session;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst marketInit = {\r\n    exrate: 0,\r\n};\r\n\r\nconst market = (state = marketInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_EXRATE:\r\n            return Object.assign({},state,{exrate: action.payload.exrate});\r\n        case actionType.STOP_MARKET_WORKER:\r\n            return ({exrate:0});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default market;","import actionType from \"../config/actionTypes\";\r\n\r\nconst statsInit = {\r\n    nUser: 0,\r\n    nCountry: 0,\r\n    nCcy: 0,\r\n};\r\n\r\nconst stats = (state = statsInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_GLOBAL_STATS:\r\n            return {\r\n                nUser: action.payload.globalStats.nUser,\r\n                nCountry: action.payload.globalStats.nCountry,\r\n                nCcy: action.payload.globalStats.nCcy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import actionType from \"../config/actionTypes\";\r\n\r\nconst countryInit = {\r\n    countries: [],\r\n    id: null,\r\n};\r\n\r\nconst country = (state = countryInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_COUNTRIES:\r\n            return Object.assign({},state,{\r\n                countries: action.payload.countries,\r\n            });\r\n        case actionType.SELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.countryId,\r\n            });\r\n        case actionType.DESELECT_COUNTRY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default country;","import actionType from \"../config/actionTypes\";\r\n\r\nconst ccyInit = {\r\n    ccys: [],\r\n    id: null,\r\n};\r\n\r\nconst ccy = (state = ccyInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.RECEIVE_CCYS:\r\n            return Object.assign({},state,{\r\n                ccys: action.payload.ccys,\r\n            });\r\n        case actionType.SELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: action.payload.ccyId,\r\n            });\r\n        case actionType.DESELECT_CCY:\r\n            return Object.assign({},state,{\r\n                id: null,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default ccy;","import market from \"./global/market\";\r\nimport stats from \"./global/stats\";\r\nimport country from \"./global/country\";\r\nimport ccy from \"./global/ccy\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst global = combineReducers({\r\n    market,\r\n    stats,\r\n    country,\r\n    ccy,\r\n});\r\n\r\nexport default global;\r\n","export const guestMenuOption = {\r\n    FAQ:            \"FAQ\",\r\n    INFOGRAPHICS:   \"INFOGRAPHICS\",\r\n};\r\n\r\nexport const suggestionType = {\r\n    IDENTITY_CERTIFICATION: \"IDENTITY_CERTIFICATION\",\r\n    INCOME_VERIFICATION:    \"INCOME_VERIFICATION\",\r\n};","import actionType from \"../config/actionTypes\";\r\nimport {guestMenuOption} from \"../../config/guest\";\r\n\r\nconst guestInit = {\r\n    subscribed:         false,\r\n    guestMenuOption:    guestMenuOption.FAQ,\r\n    faqState:           {},\r\n};\r\n\r\nconst guest = (state = guestInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},guestInit);\r\n        case actionType.SET_GUEST_SUBSCRIBED:\r\n            return Object.assign({},state,{\r\n                subscribed:                     action.payload.guestSubscribed,\r\n            });\r\n        case actionType.TOGGLE_FAQ_STATE:\r\n            return Object.assign({},state,{faqState:Object.assign({},state.faqState,{\r\n                [action.payload.actionValue]:   !state.faqState[action.payload.actionValue],\r\n            })});\r\n        case actionType.RECEIVE_GUEST_MENU_OPTION:\r\n            return Object.assign({},state,{\r\n                guestMenuOption:                action.payload.guestMenuOption,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default guest;\r\n","import flareBook from \"./flare\";\r\n\r\nexport const loggableActionType = {\r\n    clickChannel:       \"CLICK_CHANNEL\",\r\n    clickHomeButton:    \"CLICK_HOME_BUTTON\",\r\n    clickGuestMenu:     \"CLICK_GUEST_MENU\",\r\n};\r\nexport const loggableActionValue = {\r\n    VISION_IDENTITY:            \"VISION_IDENTITY\",\r\n    VISION_INCOME_DISCLOSE:     \"VISION_INCOME_DISCLOSE\",\r\n    VISION_INCOME_VERIFY:       \"VISION_INCOME_VERIFY\",\r\n    VISION_INCOME_FRAUD:        \"VISION_INCOME_FRAUD\",\r\n    VISION_UBI_MONTHLY:         \"VISION_UBI_MONTHLY\",\r\n    VISION_TAX_HAVENS:          \"VISION_TAX_HAVENS\",\r\n    WEALTHY_GOLD:               \"WEALTHY_GOLD\",\r\n    WEALTHY_COMPANY:            \"WEALTHY_COMPANY\",\r\n    WEALTHY_WORLDWIDE:          \"WEALTHY_WORLDWIDE\",\r\n    WEALTHY_PUBLIC_INFO:        \"WEALTHY_PUBLIC_INFO\",\r\n    WEALTHY_BUSINESS_MODEL:     \"WEALTHY_BUSINESS_MODEL\",\r\n    SOCIETIES_THRUBI_WHY:       \"SOCIETIES_THRUBI_WHY\",\r\n    SOCIETIES_UBI_GOV:          \"SOCIETIES_UBI_GOV\",\r\n    SOCIETIES_MODELS_PUBLIC:    \"SOCIETIES_MODELS_PUBLIC\",\r\n    SOCIETIES_GOV_CONTRIBUTE:   \"SOCIETIES_GOV_CONTRIBUTE\",\r\n    SOCIETIES_MODELS_ABOUT:     \"SOCIETIES_MODELS_ABOUT\",\r\n    SOCIETIES_FLAT_UBI:         \"SOCIETIES_FLAT_UBI\",\r\n};\r\n\r\nconst userOptions = {\r\n    optionLoginCreate: {\r\n        LOGIN:  \"LOGIN\",\r\n        CREATE: \"CREATE\",\r\n    },\r\n    optionUserMenu: {\r\n        ADD:    \"ADD\",\r\n        USER:   \"USER\",\r\n        PAY:    \"PAY\",\r\n        MANAGE: \"MANAGE\",\r\n    },\r\n    optionKeyboardMode: {\r\n        ADD:    \"ADD\",\r\n        UPDATE: \"UPDATE\",\r\n    },\r\n};\r\n\r\nconst flags = {\r\n    deactivated:null,\r\n    emailVerified:null,\r\n    identityCertified:null,\r\n    incomeApproved:null,\r\n};\r\n\r\nObject.keys(flags).map(key => flags[key]=key);\r\n\r\nexport const userFlags = flags;\r\n\r\nexport const flagFlare = (newState,flag) => {\r\n    if (newState<0) {\r\n        switch (flag) {\r\n            case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_PENDING;\r\n            case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_PENDING;\r\n            case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_PENDING;\r\n            case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_PENDING;\r\n            default: return null;\r\n        }\r\n    } else {\r\n        if (newState) {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_ON;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_ON;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_ON;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_ON;\r\n                default: return null;\r\n            }\r\n        } else {\r\n            switch (flag) {\r\n                case userFlags.deactivated:         return flareBook.infoFlare.DEACTIVATED_OFF;\r\n                case userFlags.emailVerified:       return flareBook.infoFlare.EMAIL_VERIFIED_OFF;\r\n                case userFlags.identityCertified:   return flareBook.infoFlare.IDENTITY_CERTIFIED_OFF;\r\n                case userFlags.incomeApproved:      return flareBook.infoFlare.INCOME_APPROVED_OFF;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const activationState = {\r\n    activated:              0,\r\n    userRequestDeactivated: 1,\r\n};\r\n\r\n\r\nexport const detailName = {\r\n    all:                \"all\",                  //special detailName used to delete all the other details\r\n    name:               \"name\",\r\n    surname:            \"surname\",\r\n    email:              \"email\",\r\n    profilePicture:     \"profilePicture\",\r\n    document:           \"document\",\r\n    submittedDocument:  \"submittedDocument\",\r\n};\r\n\r\nexport default userOptions;","import actionType from \"../config/actionTypes\";\r\nimport userOptions from \"../../config/user\";\r\n\r\nconst userInit = {\r\n    id:                 null,\r\n    role:               null,\r\n    deactivated:        null,\r\n    emailVerified:      null,\r\n    identityCertified:  null,\r\n    incomeApproved:     null,\r\n    name:               null,\r\n    surname:            null,\r\n    email:              null,\r\n    document:           null,\r\n    profilePicture:     null,\r\n    optionKeyboardMode: null,\r\n    optionLoginCreate:  userOptions.optionLoginCreate.CREATE,\r\n    optionUserMenu:     userOptions.optionUserMenu.ADD,\r\n    optionAdvancedMode: false,\r\n    optionViewHistory:  false,\r\n};\r\n\r\nconst user = (state = userInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userInit);\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.userId),\r\n                role:                   parseInt(action.payload.userRole),\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.RECEIVE_USER_FLAGS:\r\n            return Object.assign({},state,{\r\n                deactivated:            parseInt(action.payload.deactivated)        === state.deactivated       ? state.deactivated         : parseInt(action.payload.deactivated),\r\n                emailVerified:          parseInt(action.payload.emailVerified)      === state.emailVerified     ? state.emailVerified       : parseInt(action.payload.emailVerified),\r\n                identityCertified:      parseInt(action.payload.identityCertified)  === state.identityCertified ? state.identityCertified   : parseInt(action.payload.identityCertified),\r\n                incomeApproved:         parseInt(action.payload.incomeApproved)     === state.incomeApproved    ? state.incomeApproved      : parseInt(action.payload.incomeApproved),\r\n            });\r\n        case actionType.SET_USER_ACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            0,\r\n            });\r\n        case actionType.SET_USER_DEACTIVATED:\r\n            return Object.assign({},state, {\r\n                deactivated:            1,\r\n            });\r\n        case actionType.RECEIVE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   action.payload.name             ? action.payload.name           : userInit.name,\r\n                surname:                action.payload.surname          ? action.payload.surname        : userInit.surname,\r\n                email:                  action.payload.email            ? action.payload.email          : userInit.email,\r\n                document:               action.payload.document         ? action.payload.document       : userInit.document,\r\n                profilePicture:         action.payload.profilePicture   ? action.payload.profilePicture : userInit.profilePicture,\r\n            });\r\n        case actionType.DELETE_USER_DETAILS:\r\n            return Object.assign({},state,{\r\n                name:                   null,\r\n                surname:                null,\r\n                email:                  null,\r\n                document:               null,\r\n                profilePicture:         null,\r\n            });\r\n        case actionType.DELETE_PROFILE_PICTURE:\r\n            return Object.assign({},state,{\r\n                profilePicture:         null,\r\n            });\r\n        case actionType.ABANDON_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     null,\r\n            });\r\n        case actionType.CHOOSE_KEYBOARD:\r\n            return Object.assign({},state,{\r\n                optionKeyboardMode:     action.payload.optionKeyboardMode ? action.payload.optionKeyboardMode : state.optionLoginCreate,\r\n            });\r\n        case actionType.SWITCH_OPTION_LOGIN_CREATE:\r\n            return Object.assign({},state,{\r\n                optionLoginCreate:      (state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN,\r\n                optionKeyboardMode:     state.optionKeyboardMode?((state.optionLoginCreate===userOptions.optionLoginCreate.LOGIN)?userOptions.optionLoginCreate.CREATE:userOptions.optionLoginCreate.LOGIN):null,\r\n            });\r\n        case actionType.SWITCH_OPTION_USER_MENU:\r\n            return Object.assign({},state,{\r\n                optionUserMenu:         action.payload.optionUserMenu,\r\n            });\r\n        case actionType.SET_OPTION_ADVANCED_MODE:\r\n            return Object.assign({},state,{\r\n                optionAdvancedMode:     action.payload.optionAdvancedMode,\r\n                optionViewHistory:      action.payload.optionAdvancedMode ? action.payload.optionViewHistory : false,\r\n            });\r\n        case actionType.SET_OPTION_VIEW_HISTORY:\r\n            return Object.assign({},state,{\r\n                optionViewHistory:      action.payload.optionViewHistory,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst userAccessInit = {\r\n    ethNetwork:     null,\r\n    ethAddress:     null,\r\n    autoLogin:      false,\r\n    loggedIn:       false,\r\n    loginChannel:               null,\r\n    payChannel:                 null,\r\n    receiveChannel:             null,\r\n    channels: {\r\n        TWITTER:                0,\r\n        FACEBOOK:               0,\r\n        GOOGLE:                 0,\r\n        LINKEDIN:               0,\r\n        BLOCKCHAIN_ETHEREUM:    0,\r\n        PAYPAL:                 0,\r\n        KEYBOARD:               0,\r\n    },\r\n    facebookStatus:         null,\r\n    facebookUserId:         null,\r\n    facebookUserAccessToken:null,\r\n    linkedInWindow:         null,\r\n    linkedInListener:       null,\r\n    linkedInCode:           null,\r\n    linkedInState:          null,\r\n    googleWindow:           null,\r\n    googleListener:         null,\r\n    googleCode:             null,\r\n    twitterWindow:          null,\r\n    twitterListener:        null,\r\n    twitterRequestToken:    null,\r\n    twitterOAuthVerifier:   null,\r\n    accessJwt:              null,\r\n    refreshJwt:             null,\r\n};\r\n\r\nconst userAccess = (state = userAccessInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n            return Object.assign({},userAccessInit);\r\n        case actionType.LOGOUT:\r\n            return Object.assign({},userAccessInit,{\r\n                ethNetwork:             state.ethNetwork,\r\n                ethAddress:             state.ethAddress,\r\n                autoLogin:              (action.payload&&action.payload.autoLogin) ? action.payload.autoLogin : false,\r\n            });\r\n        case actionType.STOP_AUTO_LOGIN:\r\n            return Object.assign({},userAccessInit,{\r\n                autoLogin:              false,\r\n            });\r\n        case actionType.UPDATE_ETH_NETWORK:\r\n            return Object.assign({},state,{\r\n                ethNetwork:             action.payload.ethNetwork,\r\n            });\r\n        case actionType.UPDATE_ETH_ADDRESS:\r\n            return Object.assign({},state,{\r\n                ethAddress:             action.payload.ethAddress,\r\n            });\r\n        case actionType.REFRESH_TOKENS:\r\n            return Object.assign({},state,{\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n            });\r\n        case actionType.RECEIVE_CHANNELS:\r\n        case actionType.RECEIVE_USER_CHANNELS:\r\n            return Object.assign({},state,{channels:{\r\n                TWITTER:                action.payload.TWITTER              ? action.payload.TWITTER                : state.channels.TWITTER,\r\n                FACEBOOK:               action.payload.FACEBOOK             ? action.payload.FACEBOOK               : state.channels.FACEBOOK,\r\n                GOOGLE:                 action.payload.GOOGLE               ? action.payload.GOOGLE                 : state.channels.GOOGLE,\r\n                LINKEDIN:               action.payload.LINKEDIN             ? action.payload.LINKEDIN               : state.channels.LINKEDIN,\r\n                BLOCKCHAIN_ETHEREUM:    action.payload.BLOCKCHAIN_ETHEREUM  ? action.payload.BLOCKCHAIN_ETHEREUM    : state.channels.BLOCKCHAIN_ETHEREUM,\r\n                PAYPAL:                 action.payload.PAYPAL               ? action.payload.PAYPAL                 : state.channels.PAYPAL,\r\n                KEYBOARD:               action.payload.KEYBOARD             ? action.payload.KEYBOARD               : state.channels.KEYBOARD,\r\n            }});\r\n        case actionType.RECEIVE_LOGIN_CHANNEL:\r\n            return Object.assign({},state,{\r\n                loginChannel:           action.payload.loginChannel,\r\n            });\r\n        case actionType.RECEIVE_PAY_CHANNEL:\r\n            return Object.assign({},state,{\r\n                payChannel:             action.payload.payChannel,\r\n            });\r\n        case actionType.RECEIVE_RECEIVE_CHANNEL:\r\n            return Object.assign({},state,{\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        case actionType.RECEIVE_FACEBOOK_LOGIN_STATUS:\r\n            return Object.assign({},state,{\r\n                facebookStatus:         action.payload.facebookStatus,\r\n                facebookUserId:         action.payload.facebookUserId,\r\n                facebookUserAccessToken:action.payload.facebookUserAccessToken,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         action.payload.linkedInWindow,\r\n                linkedInListener:       action.payload.linkedInListener,\r\n            });\r\n        case actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                linkedInWindow:         null,\r\n                linkedInListener:       null,\r\n            });\r\n        case actionType.RECEIVE_LINKEDIN_LOGIN:\r\n            return Object.assign({},state,{\r\n                linkedInCode:           action.payload.code,\r\n                linkedInState:          action.payload.state,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           action.payload.googleWindow,\r\n                googleListener:         action.payload.googleListener,\r\n            });\r\n        case actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                googleWindow:           null,\r\n                googleListener:         null,\r\n            });\r\n        case actionType.RECEIVE_GOOGLE_LOGIN:\r\n            return Object.assign({},state,{\r\n                googleCode:             action.payload.code,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          action.payload.twitterWindow,\r\n                twitterListener:        action.payload.twitterListener,\r\n            });\r\n        case actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER:\r\n            return Object.assign({},state,{\r\n                twitterWindow:          null,\r\n                twitterListener:        null,\r\n            });\r\n        case actionType.RECEIVE_TWITTER_LOGIN:\r\n            return Object.assign({},state,{\r\n                twitterRequestToken:    action.payload.twitterRequestToken,\r\n                twitterOAuthVerifier:   action.payload.twitterOAuthVerifier,\r\n            });\r\n        case actionType.LOGIN:\r\n            return Object.assign({},state,{\r\n                loggedIn:               true,\r\n                accessJwt:              action.payload.accessJwt,\r\n                refreshJwt:             action.payload.refreshJwt,\r\n                payChannel:             action.payload.payChannel,\r\n                receiveChannel:         action.payload.receiveChannel,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userAccess;\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst populationInit = {\r\n    populations:    [],\r\n    exists:         null,\r\n    id:             null,\r\n    countryId:      null,\r\n    countryName:    null,\r\n    ccyId:          null,\r\n    ccyName:        null,\r\n    ccySymbol:      null,\r\n    filter:         null,\r\n    thrubiPriceSilver:      0,\r\n    thrubiPriceSilverNext:  0,\r\n    thrubiPriceGold:        1.5,\r\n    brake:                  0,\r\n    mincome:                0,\r\n    equality:               0,\r\n    warperMincome:          0,\r\n    warperEquality:         0,\r\n    thrubiFees:             0.005, // 0.5%\r\n};\r\n\r\nconst population = (state = populationInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n            return populationInit;\r\n        case actionType.CLEAR_POPULATION:\r\n            return Object.assign({},populationInit,{\r\n                populations:            state.populations,\r\n            });\r\n        case actionType.RECEIVE_POPULATIONS:\r\n            return Object.assign({},state,{\r\n                populations:            action.payload.populations,\r\n            });\r\n        case actionType.SELECT_POPULATION:\r\n            return Object.assign({},state,{\r\n                id:                     parseInt(action.payload.population.populationId),\r\n                countryId:              action.payload.population.countryId,\r\n                countryName:            action.payload.population.countryName,\r\n                ccyId:                  action.payload.population.ccyId,\r\n                ccyName:                action.payload.population.ccyName,\r\n                ccySymbol:              action.payload.population.ccySymbol,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilver:      action.payload.thrubiPriceSilver,\r\n            });\r\n        case actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT:\r\n            return Object.assign({},state,{\r\n                thrubiPriceSilverNext:  action.payload.thrubiPriceSilverNext,\r\n            });\r\n        case actionType.RECEIVE_STATS:\r\n            return Object.assign({},state,{\r\n                mincome:                parseFloat(action.payload.stats.mincome),\r\n                equality:               parseFloat(action.payload.stats.equality),\r\n            });\r\n        case actionType.RECEIVE_CONFIG:\r\n            return Object.assign({},state,{\r\n                brake:                  parseFloat(action.payload.config.brake),\r\n                warperMincome:          parseFloat(action.payload.config.warperMincome),\r\n                warperEquality:         parseFloat(action.payload.config.warperEquality),\r\n            });\r\n        case actionType.POPULATION_EXISTS:\r\n            return Object.assign({},state,{\r\n                exists:                 action.payload.exists,\r\n            });\r\n        case actionType.RECEIVE_POPULATION_FILTER:\r\n            return Object.assign({},state,{\r\n                filter:                 action.payload.filter,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default population;\r\n\r\n","import actionType from \"../config/actionTypes\";\r\n\r\nconst memberInit = {\r\n    isMember: false,\r\n    mCurrent: 0,\r\n    thrubiMode: -1,\r\n    thrubiBlue: 0,                  // ₿₮\r\n    thrubiBlueNext: 0,              // ₿₮\r\n    thrubiBlueEth: 0,               // Ξ\r\n    thrubiBlueAward: 0,             // local\r\n    thrubiBlueAwardTotal: 0,        // local\r\n    thrubiBlueClaimTotal: 0,        // local\r\n    thrubiSilver: 0,                // $₮\r\n    thrubiSilverNext: 0,            // $₮\r\n    thrubiSilverEth: 0,             // Ξ\r\n    thrubiSilverTransformTotal: 0,  // local\r\n    thrubiGold: 0,                  // ₲₮\r\n};\r\n\r\nconst member = (state = memberInit,action) => {\r\n    switch (action.type) {\r\n        case actionType.APP_SHUTDOWN:\r\n        case actionType.LOGOUT:\r\n        case actionType.CLEAR_MEMBER:\r\n            return memberInit;\r\n        case actionType.RECEIVE_MEMBER:\r\n            return Object.assign({},state,{\r\n                isMember:                   true,\r\n                mCurrent:                   parseFloat(action.payload.member.mCurrent),\r\n                thrubiMode:                 parseInt  (action.payload.member.thrubiMode),\r\n                thrubiBlue:                 parseFloat(action.payload.member.thrubiBlue),\r\n                thrubiBlueNext:             parseFloat(action.payload.member.thrubiBlueNext),\r\n                thrubiBlueEth:              parseFloat(action.payload.member.thrubiBlueEth),\r\n                thrubiBlueAward:            parseFloat(action.payload.member.thrubiBlueAward),\r\n                thrubiBlueAwardTotal:       parseFloat(action.payload.member.thrubiBlueAwardTotal),\r\n                thrubiBlueClaimTotal:       parseFloat(action.payload.member.thrubiBlueClaimTotal),\r\n                thrubiSilver:               parseFloat(action.payload.member.thrubiSilver),\r\n                thrubiSilverNext:           parseFloat(action.payload.member.thrubiSilverNext),\r\n                thrubiSilverEth:            parseFloat(action.payload.member.thrubiSilverEth),\r\n                thrubiSilverTransformTotal: parseFloat(action.payload.member.thrubiSilverTransformTotal),\r\n                thrubiGold:                 parseFloat(action.payload.member.thrubiGold),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default member;","import guest from \"./client/guest\";\r\nimport user from \"./client/user\";\r\nimport userAccess from \"./client/userAccess\";\r\nimport population from \"./client/population\";\r\nimport member from \"./client/member\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst client = combineReducers({\r\n    guest,\r\n    user,\r\n    userAccess,\r\n    population,\r\n    member,\r\n});\r\n\r\nexport default client;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport session from \"./session\";\r\nimport global from \"./global\";\r\nimport client from \"./client\";\r\n\r\nconst reducers = combineReducers({\r\n    session,\r\n    global,\r\n    client,\r\n});\r\n\r\nexport default reducers;\r\n\r\n","import {createStore,applyMiddleware} from \"redux\";\r\nimport createLogger from \"redux-logger\";\r\nimport thunkWrap from \"./customMiddleware/thunkWrap\";\r\nimport flareWrap from \"./customMiddleware/flareWrap\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst middlewares = [flareWrap,thunkWrap];\r\nif (process.env.NODE_ENV !== \"PRODUCTION\") {\r\n    middlewares.push(createLogger);\r\n}\r\n\r\nconst thrubiApp = () => createStore(reducers,applyMiddleware(...middlewares));\r\n\r\nexport default thrubiApp;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsUsers = ({\r\n    nUser,\r\n}) => (\r\n    <p className=\"text-primary text-center small my-0 mr-2\">\r\n        Thrubi is a {/*{nUser}-strong */}worldwide community where demand for Universal Basic Income meets supply.\r\n    </p>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nUser:      state.global.stats.nUser,\r\n});\r\n\r\nconst GlobalStatsUsers = connect(mapStateToProps,{})(_GlobalStatsUsers);\r\n\r\nexport default GlobalStatsUsers;","import React,{Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _Header = ({position,ethNetwork,ethAddress}) => (\r\n    <Fragment>\r\n        {\r\n            !ethNetwork || !ethAddress ? \"\" :\r\n                <div className={\"\"\r\n                                +(position===\"H\"?\" d-none d-lg-block\":\"\")\r\n                                +(position===\"H\"?\" col-lg-4 float-right\":\"\")\r\n                                +(position===\"H\"?\" mr-0 my-2 text-right\":\" mx-0 my-0 pb-1 text-center\")\r\n                                +\" consoleFont\"}>\r\n                    <div className={\"navbar-nav small\"+(position===\"H\"?\" alignBottom\":\"\")}>\r\n                        <div>\r\n                            <span className={\"badge badge-warning d-\"+(position===\"H\"?\"none d-xl\":\"\")+\"-inline\"}><span>network/</span>{ethNetwork}</span>\r\n                            <span className=\"badge badge-info d-inline\">{ethAddress}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        }\r\n    </Fragment>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ethNetwork: state.client.userAccess.ethNetwork,\r\n    ethAddress: state.client.userAccess.ethAddress,\r\n});\r\n\r\nconst Header = connect(mapStateToProps)(_Header);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\nimport EthBadges from \"./EthBadges\";\r\n\r\nconst _Header = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"container-fluid navbar fixed-top flex-md-nowrap p-0 titleBar bg-light\">\r\n        <div className=\"col-lg-8 d-flex justify-content-center justify-content-md-center justify-content-lg-start fullWidth text-left bg-light\"\r\n             style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                    backgroundSize: \"50%\",\r\n                    backgroundPosition: \"left\",\r\n                    backgroundRepeat:\"no-repeat\",\r\n                    backgroundBlendMode:\"color-dodge\"}}>\r\n            <img  className=\"mr-2 logoThrubi\" src={process.env.PUBLIC_URL+\"/logo.png\"} alt=\"Thrubi logo\" height=\"20px\" width=\"20px\"\r\n                  style={{filter:\"brightness(90%)\"}}  />\r\n            <span className=\"mr-2 alignBottom navbar-brand thrubiGradient\"><h4><b>Thrubi</b></h4></span>\r\n            <div className=\"d-none d-lg-block alignBottom\"><GlobalStatsUsers/></div>\r\n        </div>\r\n        <EthBadges position=\"H\" />\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst Header = connect(mapStateToProps)(_Header);\r\n\r\nexport default Header;","import React,{Fragment} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst _MemberInfo = ({\r\n    ccySymbol,\r\n    exrate,\r\n    thrubiSilver,\r\n    thrubiSilverNext,\r\n    thrubiPriceSilver,\r\n    thrubiPriceSilverNext,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <div className=\"container-fluid p-0 m-0 small consoleFont\">\r\n        <div className=\"col-sm-12 container-fluid row p-0 m-0\">\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-right\">\r\n                <div className=\"col-sm-12 p-0\">1.00Ξ</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">1.00₮S</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮S</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">1.00₮G</div> */ }\r\n            </div>\r\n            <div className=\"col-2 container-fluid p-0 m-0 text-center\">\r\n                <div className=\"col-sm-12 p-0\">=</div>\r\n                { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">=</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">=</div> */ }\r\n            </div>\r\n            <div className=\"col-5 container-fluid p-0 m-0 text-left\">\r\n                <div className=\"col-sm-12 p-0\">{exrate.toFixed(2)}{ccySymbol}</div>\r\n                    { (thrubiSilver || thrubiSilverNext) ? <div className=\"col-sm-12 p-0\">{thrubiPriceSilver.toFixed(2)}{ccySymbol}</div> : \"\" }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceSilverNext.toFixed(2)}{ccySymbol} (next month)</div> */ }\r\n                { /* <div className=\"col-sm-12 p-0\">{thrubiPriceGold.toFixed(2)}{ccySymbol}</div> */ }\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:              state.client.population.ccySymbol,\r\n    exrate:                 state.global.market.exrate,\r\n    thrubiSilver:           state.client.member.thrubiSilver,\r\n    thrubiSilverNext:       state.client.member.thrubiSilverNext,\r\n    thrubiPriceSilver:      state.client.population.thrubiPriceSilver,\r\n    thrubiPriceSilverNext:  state.client.population.thrubiPriceSilverNext,\r\n    thrubiPriceGold:        state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst MemberInfo = connect(mapStateToProps,{})(_MemberInfo);\r\n\r\nexport default MemberInfo;","import React from 'react';\r\n\r\nconst _CcyRow = ({\r\n    text,\r\n    bold,\r\n    value,\r\n    ccySymbol,\r\n}) => (\r\n    <div className=\"small row ccyRowContainer\">\r\n        <span className=\"text-left ccyRowElement col-6\">{text}</span>\r\n        <span className={\"text-right ccyRowElement col-5\"}>{isNaN(value)?\"n/a\":(bold?<b>{value.toFixed(2)}</b>:value.toFixed(2))}</span>\r\n        <span className={\"text-right ccyRowElement col-1\"}>{bold?<b>{ccySymbol}</b>:ccySymbol}</span>\r\n    </div>\r\n);\r\n\r\nexport default _CcyRow;\r\n\r\n","class Channel {\r\n    static channelIsOpen          (channelMode) {return channelMode>0;}\r\n    static channelIsForLogin      (channelMode) {return  Math.abs(channelMode)     %2;} //last bit\r\n    static channelIsForPay        (channelMode) {return (Math.abs(channelMode)>>1) %2;} //second-to-last bit\r\n\r\n    static channelName = {\r\n        NOT_AVAILABLE:          \"N/A\",\r\n        BLOCKCHAIN_ETHEREUM:    \"BLOCKCHAIN_ETHEREUM\",\r\n        KEYBOARD:               \"KEYBOARD\",\r\n        FACEBOOK:               \"FACEBOOK\",\r\n        LINKEDIN:               \"LINKEDIN\",\r\n        GOOGLE:                 \"GOOGLE\",\r\n        PAYPAL:                 \"PAYPAL\",\r\n        TWITTER:                \"TWITTER\",\r\n};\r\n    \r\n    static channelColor(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"blockchain-ethereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"linkedin\";\r\n            case Channel.channelName.GOOGLE:                return \"google\";\r\n            case Channel.channelName.PAYPAL:                return \"paypal\";\r\n            case Channel.channelName.TWITTER:               return \"twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelAuthFunctionName(channelName) {\r\n        switch (channelName) {\r\n            case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"BlockchainEthereum\";\r\n            case Channel.channelName.KEYBOARD:              return \"Keyboard\";\r\n            case Channel.channelName.FACEBOOK:              return \"Facebook\";\r\n            case Channel.channelName.LINKEDIN:              return \"LinkedIn\";\r\n            case Channel.channelName.GOOGLE:                return \"Google\";\r\n            case Channel.channelName.PAYPAL:                return \"PayPal\";\r\n            case Channel.channelName.TWITTER:               return \"Twitter\";\r\n            default:                                        return \"\";\r\n        }\r\n    }\r\n\r\n    static keyboardChannelMessage(optionKeyboardMode) {\r\n        switch (optionKeyboardMode) {\r\n            case \"LOGIN\":   return \"Sign in\";\r\n            case \"CREATE\":  return \"Sign up\";\r\n            case \"ADD\":     return \"Add credentials to my account\";\r\n            case \"UPDATE\":  return \"Update my credentials\";\r\n            default:        return \"\";\r\n        }\r\n    }\r\n\r\n    static channelUserFriendlyName(channelName,actionType) {\r\n        switch (actionType) {\r\n            case \"USE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Use my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Use my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"USING\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Using my Ethereum wallet\";\r\n                case Channel.channelName.PAYPAL:                return \"Using my PayPal account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LINK\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet to use it\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account to use it\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"LOGIN\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign in with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign in with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign in with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign in with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign in with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign in with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"CREATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Sign up with Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Sign up with username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Sign up with Facebook\";\r\n                case Channel.channelName.LINKEDIN:              return \"Sign up with LinkedIn\";\r\n                case Channel.channelName.GOOGLE:                return \"Sign up with Google\";\r\n                case Channel.channelName.TWITTER:               return \"Sign up with Twitter\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"ADD\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect an Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Enable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect a Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect a LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect a Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect a PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect a Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"DELETE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Disconnect my Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Disable username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Disconnect my Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Disconnect my LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Disconnect my Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Disconnect my PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Disconnect my Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            case \"UPDATE\": switch (channelName) {\r\n                case Channel.channelName.BLOCKCHAIN_ETHEREUM:   return \"Connect another Ethereum wallet\";\r\n                case Channel.channelName.KEYBOARD:              return \"Update username/password\";\r\n                case Channel.channelName.FACEBOOK:              return \"Connect another Facebook account\";\r\n                case Channel.channelName.LINKEDIN:              return \"Connect another LinkedIn account\";\r\n                case Channel.channelName.GOOGLE:                return \"Connect another Google account\";\r\n                case Channel.channelName.PAYPAL:                return \"Connect another PayPal account\";\r\n                case Channel.channelName.TWITTER:               return \"Connect another Twitter account\";\r\n                default:                                        return \"\";\r\n            }\r\n            default: return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Channel;","import React,{Component} from \"react\";\r\nimport Channel from \"../classes/Channel\";\r\n\r\nclass _ActionButton extends Component {\r\n    render() {\r\n        const {action,payload,text,buttonType,disabled=false,channel=false,noMargin=false} = this.props;\r\n        return (\r\n            <button disabled={disabled}\r\n                    onClick={(event) => {event.preventDefault(); action(payload); }}\r\n                    className={\"btn btn-sm btn-block rounded-0 \"+(noMargin?noMargin:(\"my-2 py-\"+(channel?\"2 \":\"2 \")))+buttonType+(channel?Channel.channelColor(channel):\"\")}>\r\n                <div className={\"container-fluid row p-0 m-0\"+(noMargin.toString().includes(\"small\")?\" small\":\"\")+(channel?\"\":\" fullWidth\")}>\r\n                    <div className={(channel?\"\":\"fullWidth\")}>\r\n                        {\r\n                            !channel ? \"\" :\r\n                                <img className=\"p-0 my-0 mx-2\" alt={channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(channel)+\".png\"} />\r\n                        }\r\n                        <div className={(channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(channel?\"left\":\"center\")}>{ text ? text : this.props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default _ActionButton;\r\n\r\n","let envUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envUri = \"https://t001002.herokuapp.com\";\r\n} else {\r\n    envUri = \"https://localhost:8443\";\r\n}\r\n\r\nexport const uri = envUri;","export const requestType = {\r\n    GET:    \"get\",\r\n    POST:   \"post\",\r\n};\r\n\r\nexport const headers = {\r\n    X_Access_Token: \"X-Access-Token\",\r\n    Bearer:         \"Bearer \",\r\n};","import request from \"request\";\r\nimport {uri} from \"../env/server\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType,headers} from \"../config/http\";\r\n\r\nexport const processRequest = (type,requestUri,json) => (dispatch,getState) => {\r\n    return new Promise((resolve,reject) => {\r\n        const callback = (error,response) => {\r\n            let packet;\r\n            let result;\r\n\r\n            if (error) {\r\n                reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n            } else {\r\n                packet = response.body;\r\n                if (response.statusCode===200) {\r\n                    result = packet.result;\r\n                    resolve(result);\r\n                } else {\r\n                    let errorPackage = flareBook.errorFlare.THRUBI_SERVER_ERROR;\r\n                    errorPackage.serverError = packet.error;\r\n                    reject(errorPackage);\r\n                }\r\n            }\r\n        };\r\n\r\n        try {\r\n            const options = {\r\n                url:uri+requestUri,\r\n                json:(json===null?{}:json),\r\n            };\r\n            if (getState().client.userAccess.loggedIn) {\r\n                options.headers={[headers.X_Access_Token]:(headers.Bearer+(getState().client.userAccess.accessJwt))};\r\n            }\r\n            if (type===requestType.GET) {\r\n                request.get(options,callback);\r\n            } else if (type===requestType.POST) {\r\n                request.post(options,callback);\r\n            }\r\n        } catch (error) {\r\n            reject(flareBook.errorFlare.THRUBI_CONNECTION_FAILED);\r\n        }\r\n    });\r\n};","export const ethEventType = {\r\n    confirmation: \"confirmation\",\r\n};","export const THRUBI_ADDRESS = \"0xeC6020cd56349ED60512c9985BdC5F3B7098315d\";\r\n\r\nexport const THRUBI_ABI = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"userCount\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x07973ccf\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x17f0f244\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x7b306690\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8da5cb5b\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xa8adb564\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"lastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xaa2ddbf1\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\",\r\n        \"signature\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"UserCreated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x0b0376a109cbb578b709f85f6a7befcdac3ac1ab251c99ede87f30c9572ac4d3\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"UserUpdated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xe5d18d6612696bff7df1db8015eac613241613297fa2ba2783993e4fd0e76f3d\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserActivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x778b37e4212438e31bb36f033dd30e024005d668a4df069a75261d4e41f4013f\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"UserDeactivated\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x1b32d41cdfc3bfbfff6b3c55227176d2d8d97ea2494e509db5d8b60d246e680b\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"ClaimSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0x3a30d1c4069e097873e77443df9683e8de5c7ba3674315b8670a0211e3130195\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"TransformSubmitted\",\r\n        \"type\": \"event\",\r\n        \"signature\": \"0xd7d9057eeb8d77c85b055fd0a383e2cbb00c462d8d90a53f7dea6493d376661d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transform\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x723ed1db\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8a3f8702\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedTransform\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x766dcc9c\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getTransform\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x21347ab1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [],\r\n        \"name\": \"signalProcessedTransforms\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x764103fc\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"claimEth\",\r\n        \"outputs\": [],\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xd8875079\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x68a825ad\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"getLastProcessedClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_lastProcessedClaim\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x8fdfde42\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_i\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getClaim\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"_userId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_populationId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"name\": \"_address\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_weiAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x5aef2447\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMe\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"foundMe\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x3223a182\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"findMyUser\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"found\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"surname\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"deactivated\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xc77489f1\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"name\": \"_surname\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x10e8b22d\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"createUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xcdd87618\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"activateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0xb4acfe1c\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_ethAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"deactivateUser\",\r\n        \"outputs\": [],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\",\r\n        \"signature\": \"0x1a47767b\"\r\n    }\r\n];","import request from \"request\";\r\nimport {uri,spotApi} from \"../config/market\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {INTERVAL_MARKET_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchExrate = ccyId => async (dispatch,getState) => {\r\n    if (ccyId) {\r\n        return new Promise((resolve,reject) => {\r\n            request.get({url:uri+ccyId+spotApi,json:{}},(error,response) => {\r\n                if (error) {\r\n                    reject(flareBook.errorFlare.EXRATE_FETCH_ERROR);\r\n                } else {\r\n                    let exrate = parseFloat(response.body.data.amount);\r\n                    dispatch({type:actionType.RECEIVE_EXRATE,payload:{exrate}});\r\n                    resolve(exrate);\r\n                }\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport const startMarketWorker = () => async (dispatch,getState) => {\r\n    let marketWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchExrate(getState().client.population.ccyId));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MARKET_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MARKET_WORKER,payload:{marketWorker}});\r\n};\r\n\r\nexport const stopMarketWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.market);\r\n    dispatch({type:actionType.STOP_MARKET_WORKER,payload:{}});\r\n};\r\n","export const uri = \"https://api.coinbase.com/v2/prices/ETH-\";\r\nexport const spotApi = \"/spot\";","export const INTERVAL_FETCH_GLOBAL_STATS_WORKER = 30000;\r\nexport const INTERVAL_ETH_NETWORK_WORKER = 1000;\r\nexport const INTERVAL_ETH_ADDRESS_WORKER = 1000;\r\nexport const INTERVAL_USER_WORKER = 1000;\r\nexport const INTERVAL_MEMBER_WORKER = 1000;\r\nexport const INTERVAL_MARKET_WORKER = 1000;\r\nexport const INTERVAL_POPULATION_WORKER = 1000;","export const endpoint = {\r\n    GUEST_SUBMITSUGGESTION:                 \"/guest/submitSuggestion\",\r\n    GUEST_SUBSCRIBENEWSLETTER:              \"/guest/subscribeNewsletter\",\r\n    ACTIONS_LOG:                            \"/actions/log\",\r\n    ACTIONS_AUTH:                           \"/actions/auth\",\r\n    AUTH_CHALLENGE_BLOCKCHAINETHEREUM:      \"/auth/challenge/blockchainEthereum\",\r\n    AUTH_LISTCHANNELS:                      \"/auth/listChannels\",\r\n    AUTH_REFRESH:                           \"/auth/refresh\",\r\n    AUTH_LOGOUT:                            \"/auth/logout\",\r\n    AUTH_CREATE_BLOCKCHAINETHEREUM:         \"/auth/create/blockchainEthereum\",\r\n    AUTH_LOGIN_BLOCKCHAINETHEREUM:          \"/auth/login/blockchainEthereum\",\r\n    AUTH_CREATE_KEYBOARD:                   \"/auth/create/keyboard\",\r\n    AUTH_LOGIN_KEYBOARD:                    \"/auth/login/keyboard\",\r\n    AUTH_CREATE_FACEBOOK:                   \"/auth/create/facebook\",\r\n    AUTH_LOGIN_FACEBOOK:                    \"/auth/login/facebook\",\r\n    AUTH_CREATE_LINKEDIN:                   \"/auth/create/linkedIn\",\r\n    AUTH_LOGIN_LINKEDIN:                    \"/auth/login/linkedIn\",\r\n    AUTH_CREATE_GOOGLE:                     \"/auth/create/google\",\r\n    AUTH_LOGIN_GOOGLE:                      \"/auth/login/google\",\r\n    AUTH_TOKEN_TWITTER:                     \"/auth/token/twitter\",\r\n    AUTH_CREATE_TWITTER:                    \"/auth/create/twitter\",\r\n    AUTH_LOGIN_TWITTER:                     \"/auth/login/twitter\",\r\n    COUNTRY_LIST:                           \"/country/list\",\r\n    CCY_LIST:                               \"/ccy/list\",\r\n    MEMBER_CREATE:                          \"/member/create\",\r\n    MEMBER_DELETE:                          \"/member/delete\",\r\n    MEMBER_REQUEST_CLAIM:                   \"/member/request/claim\",\r\n    MEMBER:                                 \"/member\",\r\n    MEMBER_REQUEST_DECLAREINCOME:           \"/member/request/declareIncome\",\r\n    REF_FETCHREF:                           \"/ref/fetchRef\",\r\n    STATS_NUSER:                            \"/stats/nUser\",\r\n    STATS_NCOUNTRY:                         \"/stats/nCountry\",\r\n    STATS_NCCY:                             \"/stats/nCcy\",\r\n    USER_GETFLAGS:                          \"/user/getFlags\",\r\n    USER_ACTIVATE:                          \"/user/activate\",\r\n    USER_DEACTIVATE:                        \"/user/deactivate\",\r\n    USER_DETAILS_FETCH:                     \"/user/details/fetch\",\r\n    USER_DETAILS_DELETE:                    \"/user/details/delete\",\r\n    USER_DETAILS_STORE:                     \"/user/details/store\",\r\n    USER_PROFILEPICTURE_SIGN:               \"/user/profilePicture/sign\",\r\n    USER_CERTIFY:                           \"/user/certify\",\r\n    USER_CLOSE:                             \"/user/close\",\r\n    USERACCESS_LISTUSERCHANNELS:            \"/userAccess/listUserChannels\",\r\n    USERACCESS_SETPAYCHANNEL:               \"/userAccess/setPayChannel\",\r\n    USERACCESS_SETRECEIVECHANNEL:           \"/userAccess/setReceiveChannel\",\r\n    USERACCESS_DELETE:                      \"/userAccess/delete\",\r\n    USERACCESS_ADD_KEYBOARD:                \"/userAccess/add/keyboard\",\r\n    USERACCESS_UPDATE_KEYBOARD:             \"/userAccess/update/keyboard\",\r\n    USERACCESS_ADD_BLOCKCHAINETHEREUM:      \"/userAccess/add/blockchainEthereum\",\r\n    USERACCESS_UPDATE_BLOCKCHAINETHEREUM:   \"/userAccess/update/blockchainEthereum\",\r\n    USERACCESS_ADD_FACEBOOK:                \"/userAccess/add/facebook\",\r\n    USERACCESS_UPDATE_FACEBOOK:             \"/userAccess/update/facebook\",\r\n    USERACCESS_ADD_LINKEDIN:                \"/userAccess/add/linkedIn\",\r\n    USERACCESS_UPDATE_LINKEDIN:             \"/userAccess/update/linkedIn\",\r\n    USERACCESS_ADD_GOOGLE:                  \"/userAccess/add/google\",\r\n    USERACCESS_UPDATE_GOOGLE:               \"/userAccess/update/google\",\r\n    USERACCESS_ADD_TWITTER:                  \"/userAccess/add/twitter\",\r\n    USERACCESS_UPDATE_TWITTER:               \"/userAccess/update/twitter\",\r\n    POPULATION_FORUSER:                     \"/population/forUser\",\r\n    POPULATION_THRUBIPRICE_SILVER:          \"/population/thrubiPrice/silver\",\r\n    POPULATION_THRUBIPRICE_SILVER_NEXT:     \"/population/thrubiPrice/silver/next\",\r\n    POPULATION_CREATE:                      \"/population/create\",\r\n    POPULATION_DELETE:                      \"/population/delete\",\r\n    POPULATION_STATS_READ:                  \"/population/stats/read\",\r\n    POPULATION_CONFIG_READ:                 \"/population/config/read\",\r\n    POPULATION_CONFIG_CHANGE:               \"/population/config/change\",\r\n    POPULATION_EXISTS:                      \"/population/exists\",\r\n};\r\n\r\n\r\n\r\n","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport {startPopulationWorker,stopPopulationWorker} from \"./population\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_MEMBER_WORKER} from \"../env/workers\";\r\n\r\nexport const createMember = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()     => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()     => dispatch(processRequest(requestType.POST,endpoint.MEMBER_CREATE+\"/\"+populationId,null)))\r\n        .then   (()     => dispatch(startMemberWorker()))\r\n        .then   (()     => dispatch(startPopulationWorker()))\r\n        .then   (()     => dispatch(startMarketWorker()))\r\n        .catch  (error  => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()     => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const fetchMember = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(processRequest(requestType.GET,endpoint.MEMBER+\"/\"+getState().client.population.id,null)))\r\n        .then (packet   => dispatch({type:actionType.RECEIVE_MEMBER,payload:{member:packet}}))\r\n        .catch(error    => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const removeMembership = () => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then (()       => dispatch(stopPopulationWorker()))\r\n        .then (()       => dispatch(stopMemberWorker()))\r\n        .then (()       => dispatch(stopMarketWorker()))\r\n        .then (()       => dispatch(processRequest(requestType.POST,endpoint.MEMBER_DELETE+\"/\"+getState().client.population.id,null)))\r\n        .then (()       => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then (()       => dispatch({type:actionType.CLEAR_MEMBER,payload:{}}));\r\n};\r\n\r\nexport const startMemberWorker = () => async (dispatch,getState) => {\r\n    let memberWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchMember());\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_MEMBER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_MEMBER_WORKER,payload:{memberWorker}});\r\n};\r\n\r\nexport const stopMemberWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.member);\r\n    dispatch({type:actionType.STOP_MEMBER_WORKER,payload:{}});\r\n};\r\n\r\nexport const claim = () => async (dispatch,getState) => {\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    return await dispatch(processRequest(requestType.GET,endpoint.MEMBER_REQUEST_CLAIM+\"/\"+ethAddress+\"/\"+populationId,null));\r\n};\r\n\r\nexport const advancedMode = optionAdvancedMode => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_ADVANCED_MODE,payload:{optionAdvancedMode}});\r\n};\r\n\r\nexport const viewHistory = optionViewHistory => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SET_OPTION_VIEW_HISTORY,payload:{optionViewHistory}});\r\n};","import {processRequest} from \"./server\";\r\nimport {startMemberWorker,stopMemberWorker} from \"./member\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {startMarketWorker,stopMarketWorker} from \"./market\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_POPULATION_WORKER} from \"../env/workers\";\r\n\r\nexport const fetchPopulations = () => async (dispatch,getState) => {\r\n    let populations;\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}))\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_FORUSER,null)))\r\n        .then   (p              => populations=p)\r\n        .then   (()             => populations.forEach(population => {if (population.isMember) {\r\n            dispatch(selectPopulation(population));\r\n            dispatch(startPopulationWorker());\r\n            dispatch(startMemberWorker());\r\n            dispatch(startMarketWorker());\r\n        }}))\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATIONS,payload:{populations}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()         => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const selectPopulation = population => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_POPULATION,payload:{population}});\r\n};\r\n\r\nexport const deselectPopulation = () => async (dispatch,getState) => {\r\n    dispatch(stopMemberWorker());\r\n    dispatch(stopPopulationWorker());\r\n    dispatch(stopMarketWorker());\r\n    dispatch({type:actionType.CLEAR_POPULATION,payload:{}});\r\n};\r\n\r\nexport const startPopulationWorker = () => async (dispatch,getState) => {\r\n    let populationWorker = setInterval((() => {\r\n        const activity = () => {\r\n            dispatch(fetchThrubiPriceSilver(getState().client.population.id));\r\n            dispatch(fetchThrubiPriceSilverNext(getState().client.population.id));\r\n            if (getState().client.user.auth) {\r\n                dispatch(fetchStats(getState().client.population.id));\r\n                dispatch(fetchConfig(getState().client.population.id));\r\n            }\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_POPULATION_WORKER);\r\n    dispatch({type:actionType.RECEIVE_POPULATION_WORKER,payload:{populationWorker}});\r\n};\r\n\r\nexport const stopPopulationWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.population);\r\n    dispatch({type:actionType.STOP_POPULATION_WORKER,payload:{}});\r\n};\r\n\r\nconst fetchThrubiPriceSilver = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER,payload:{thrubiPriceSilver:parseFloat(result.thrubiPriceSilver)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchThrubiPriceSilverNext = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_THRUBIPRICE_SILVER_NEXT+\"/\"+populationId,null)))\r\n        .then   (result         => dispatch({type:actionType.RECEIVE_THRUBI_PRICE_SILVER_NEXT,payload:{thrubiPriceSilverNext:parseFloat(result.thrubiPriceSilverNext)}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchStats = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_STATS_READ+\"/\"+populationId,null)))\r\n        .then   (stats          => dispatch({type:actionType.RECEIVE_STATS,payload:{stats}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nconst fetchConfig = populationId => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch(processRequest(requestType.GET,endpoint.POPULATION_CONFIG_READ+\"/\"+populationId,null)))\r\n        .then   (config         => dispatch({type:actionType.RECEIVE_CONFIG,payload:{config}}))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)));\r\n};\r\n\r\nexport const changeFilter = filter => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.RECEIVE_POPULATION_FILTER,payload:{filter}}));\r\n};\r\n","export const facebook = {\r\n    status: {\r\n        connected:      \"connected\",\r\n        unknown:        \"unknown\",\r\n        not_authorized: \"not_authorized\",\r\n    },\r\n    apiQuery:           \"/me?fields=first_name,last_name,email,picture.type(large)\",\r\n    apiScope:           \"email\",\r\n};","// --------\r\n// LinkedIn\r\n// --------\r\nconst linkedInScope = \"r_liteprofile%20r_emailaddress\";\r\nexport const linkedInAuthUri =  (linkedInRedirectUri,linkedInAppState,linkedInAppClientId) =>\r\n                                \"https://www.linkedin.com/oauth/v2/authorization?\" +\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+linkedInRedirectUri+\r\n                                \"&state=\"+linkedInAppState+\r\n                                \"&scope=\"+linkedInScope+\r\n                                \"&client_id=\"+linkedInAppClientId;\r\n\r\nexport const linkedInWindowName = \"Login to Thrubi using your LinkedIn account\";\r\nexport const linkedInWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// ------\r\n// Google\r\n// ------\r\nconst googleScope = \"email%20profile\";\r\nexport const googleAuthUri =    (googleRedirectUri,googleAppClientId) =>\r\n                                \"https://accounts.google.com/o/oauth2/auth?\"+\r\n                                \"response_type=code\" +\r\n                                \"&redirect_uri=\"+googleRedirectUri+\r\n                                \"&scope=\"+googleScope+\r\n                                \"&client_id=\"+googleAppClientId;\r\n\r\nexport const googleWindowName = \"Login to Thrubi using your Google account\";\r\nexport const googleWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";\r\n\r\n// -------\r\n// Twitter\r\n// -------\r\nexport const twitterAuthUri =    twitterRequestToken =>\r\n    \"https://twitter.com/oauth/authenticate?oauth_token=\"+twitterRequestToken;\r\n\r\nexport const twitterWindowName = \"Login to Thrubi using your Twitter account\";\r\nexport const twitterWindowParams = \"toolbar=no, menubar=no, width=600, height=500, top=50, left=100\";","let envLinkedInRedirectUri;\r\nlet envGoogleRedirectUri;\r\nlet envTwitterRedirectUri;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    envLinkedInRedirectUri    = \"https://www.thrubi.com\";\r\n    envGoogleRedirectUri      = \"https://www.thrubi.com\";\r\n    envTwitterRedirectUri     = \"https://www.thrubi.com\";\r\n} else {\r\n    envLinkedInRedirectUri    = \"https://localhost:3000\";\r\n    envGoogleRedirectUri      = \"https://localhost:3000\";\r\n    envTwitterRedirectUri     = \"https://localhost:3000\";\r\n}\r\n\r\nexport const linkedInRedirectUri    = envLinkedInRedirectUri;\r\nexport const linkedInAppState       = \"ec178df0ec26b9584b3702c8ee98071f76f40b11121c19ff18f674b16169a9e95fee8b82a6334152ba70565c41cf0d1a0b33ff9dda5298a34ce271008e8c09f7\";\r\nexport const linkedInAppClientId    = \"78w03u1p8bc928\";\r\n\r\nexport const googleRedirectUri      = envGoogleRedirectUri;\r\nexport const googleAppClientId      = \"627523329723-5kfvuqg068851dsf6efh911ue4v7ttur.apps.googleusercontent.com\";\r\n\r\nexport const twitterRedirectUri     = envTwitterRedirectUri; // not used","import Channel from \"../classes/Channel\";\r\nimport {processRequest} from \"./server\";\r\nimport {signMessage} from \"./blockchain_ethereum\";\r\nimport {switchOptionUserMenu,fetchDetails,storeDetails,activateUserWorker,stopUserWorker} from \"./user\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {EVENT_DATA_ORIGIN_THRUBI,EVENT_TYPE_MESSAGE} from \"../config/redirect\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {facebook} from \"../config/facebook\";\r\nimport {\r\n    linkedInAuthUri,\r\n    linkedInWindowName,\r\n    linkedInWindowParams,\r\n    googleAuthUri,\r\n    googleWindowName,\r\n    googleWindowParams,\r\n    twitterAuthUri,\r\n    twitterWindowName,\r\n    twitterWindowParams,\r\n} from \"../config/auth\";\r\nimport flareBook from \"../config/flare\";\r\nimport userOptions from \"../config/user\";\r\nimport {\r\n    linkedInRedirectUri,\r\n    linkedInAppState,\r\n    linkedInAppClientId,\r\n    googleRedirectUri,\r\n    googleAppClientId,\r\n} from \"../env/auth\";\r\nimport {REDIRECT_CLOSE_INTERVAL} from \"../env/redirect\";\r\n\r\n// ---------------\r\n// Auth menu items\r\n// ---------------\r\n\r\nexport const switchOptionLoginCreate = () => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_LOGIN_CREATE,payload:{}});\r\n};\r\n\r\n// ------\r\n// Logout\r\n// ------\r\n\r\nexport const logout = payload => async (dispatch,getState) => {\r\n    if (getState().client.userAccess.loggedIn) {\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGOUT,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (()           => dispatch({type:actionType.LOGOUT,payload}))\r\n            .then   (()           => dispatch(cancelRefreshTokens()))\r\n            .then   (()           => dispatch(fetchChannels()))\r\n            .then   (()           => dispatch(stopUserWorker()))\r\n            .then   (()           => dispatch(deselectPopulation()))\r\n            .then   (()           => dispatch(FBlogout()))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGOUT)})\r\n            .finally(()           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n    }\r\n};\r\n\r\n// ------\r\n// Tokens\r\n// ------\r\n\r\nconst cancelRefreshTokens = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => clearTimeout(getState().session.workers.refreshTokens))\r\n        .then   (()           => dispatch({type:actionType.STOP_REFRESH_TOKENS_WORKER,payload:{}}))\r\n        .catch  (()           => {throw flareBook.errorFlare.ERROR_STOP_TOKEN_REFRESH});\r\n};\r\n\r\nconst scheduleRefreshTokens = intervalTime => async (dispatch,getState) => {\r\n    const refreshTokensWorker = setTimeout(async () => {\r\n        let tokens;\r\n        return await Promise.resolve()\r\n            .then   (()           => dispatch(processRequest(requestType.POST,endpoint.AUTH_REFRESH,{refreshJwt:(getState().client.userAccess.refreshJwt)})))\r\n            .then   (result       => {tokens=result;})\r\n            .then   (()           => dispatch({type:actionType.REFRESH_TOKENS,payload:tokens}))\r\n            .then   (()           => dispatch(scheduleRefreshTokens(tokens.accessJwtExpiry)))\r\n            .catch  (error        => {throw flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN)})\r\n            .catch  (error        => {console.error(error);dispatch(logout({autoLogin:false}));});\r\n    },intervalTime/2);\r\n    dispatch({type:actionType.RECEIVE_REFRESH_TOKENS_WORKER,payload:{refreshTokensWorker}});\r\n};\r\n\r\n// --------\r\n// Channels\r\n// --------\r\n\r\nexport const fetchChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_LISTCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const fetchUserChannels = () => async (dispatch,getState) => {\r\n    let channels = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USERACCESS_LISTUSERCHANNELS,null)))\r\n        .then   (result           => result.map((channel,i) => channels[channel.channelName]=channel.channelMode))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_CHANNELS,payload:channels}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_CHANNEL_FETCH)));\r\n};\r\n\r\nexport const deleteChannel = (channelName) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()                           => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()                           => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_DELETE+\"/\"+channelName,{})))\r\n        .then   (()                           => dispatch(fetchUserChannels()))\r\n        .catch  (error                        => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .finally(()                           => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const getPayChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setPayChannel = payChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (payChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[payChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETPAYCHANNEL,{payChannel})))\r\n        .then   (newPayChannel    => dispatch({type:actionType.RECEIVE_PAY_CHANNEL,payload:{payChannel:newPayChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_PAY_CHANNEL_UPDATE)));\r\n};\r\n\r\nexport const getReceiveChannel = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const setReceiveChannel = receiveChannel => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (receiveChannel!==Channel.channelName.NOT_AVAILABLE&&!Channel.channelIsOpen(getState().client.userAccess.channels[receiveChannel])) {dispatch(switchOptionUserMenu(\"ADD\")); throw flareBook.errorFlare.CHANNEL_CLOSED;}})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_SETRECEIVECHANNEL,{receiveChannel})))\r\n        .then   (newReceiveChannel=> dispatch({type:actionType.RECEIVE_RECEIVE_CHANNEL,payload:{receiveChannel:newReceiveChannel}}))\r\n        .catch  (error            => {if (error !== flareBook.errorFlare.CHANNEL_CLOSED) throw error;})\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_RECEIVE_CHANNEL_UPDATE)));\r\n};\r\n\r\n// ----------------------\r\n// Login and verification\r\n// ----------------------\r\n\r\nconst finalizeLogin = loginData => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!loginData.userId) throw loginData.loginError;})\r\n        .then   (()               => dispatch({type:actionType.LOGIN,payload:loginData}))\r\n        .then   (()               => dispatch(scheduleRefreshTokens(loginData.accessJwtExpiry)))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .then   (()               => dispatch(activateUserWorker()))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (()               => dispatch(logout({autoLogin:false})))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst verifyBlockchainEthereum = () => async (dispatch,getState) => {\r\n    let ethNetwork = getState().client.userAccess.ethNetwork;\r\n    let ethAddress = getState().client.userAccess.ethAddress;\r\n    let challengeTokens;\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!ethNetwork || !ethAddress) throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CHALLENGE_BLOCKCHAINETHEREUM,{ethAddress})))\r\n        .then   (result           => {challengeTokens={challengeJwt:result.challengeJwt,hashedJwt:result.hashedJwt};})\r\n        .then   (()               => dispatch(signMessage(challengeTokens.hashedJwt)))\r\n        .then   (signedMessage    => ({ethAddress,challengeSolution:{challengeJwt:challengeTokens.challengeJwt,hashedJwt:challengeTokens.hashedJwt,signedMessage}}));\r\n};\r\n\r\nexport const createBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addBlockchainEthereum = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateBlockchainEthereum = () => async (dispatch, getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(verifyBlockchainEthereum()))\r\n        .then   (solvedChallenge  => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_BLOCKCHAINETHEREUM,solvedChallenge)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_KEYBOARD,{username,password})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateKeyboardForm = (username,password) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_KEYBOARD,{username,password})))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .then   (()               => dispatch(abandonKeyboard()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const abandonKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.ABANDON_KEYBOARD,payload:{}}));\r\n};\r\n\r\nexport const chooseKeyboard = (payload) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.CHOOSE_KEYBOARD,payload}));\r\n};\r\n\r\nexport const createKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const loginKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({})));\r\n};\r\n\r\nexport const addKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.ADD})));\r\n};\r\n\r\nexport const updateKeyboard = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(chooseKeyboard({optionKeyboardMode:userOptions.optionKeyboardMode.UPDATE})));\r\n};\r\n\r\nconst receiveFacebookLoginStatus = (loginStatus,resolve) => async (dispatch,getState) => {\r\n    let facebookLoginStatus = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => {\r\n            facebookLoginStatus.facebookStatus=loginStatus.status;\r\n            facebookLoginStatus.facebookUserId=loginStatus.authResponse?loginStatus.authResponse.userID:null;\r\n            facebookLoginStatus.facebookUserAccessToken=loginStatus.authResponse?loginStatus.authResponse.accessToken:null;\r\n        })\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_FACEBOOK_LOGIN_STATUS,payload:facebookLoginStatus}))\r\n        .then   (()               => resolve(facebookLoginStatus.facebookStatus));\r\n};\r\n\r\nconst FBgetLoginStatus = (resolveFBlogin) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!window.FB) throw(flareBook.errorFlare.FB_NOT_FOUND);})\r\n        .then   (()               => new Promise((resolveFBgetLoginStatus) => {window.FB.getLoginStatus(loginStatus=>dispatch(receiveFacebookLoginStatus(loginStatus,resolveFBgetLoginStatus)))}))\r\n        .then   (facebookStatus   => {if (resolveFBlogin) resolveFBlogin(facebookStatus); return facebookStatus;});\r\n};\r\n\r\nconst FBlogin = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => new Promise(resolveFBlogin => {window.FB.login(() => dispatch(FBgetLoginStatus(resolveFBlogin)),{scope:facebook.apiScope})}));\r\n};\r\n\r\nconst FBlogout = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if (facebookStatus===facebook.status.connected) return new Promise((resolveFBlogout) => {window.FB.logout(()=>{resolveFBlogout(); return false;})});});\r\n};\r\n\r\nconst connectFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {if (!window.FB) {throw (flareBook.errorFlare.FB_NOT_FOUND);}})\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => {if ((facebookStatus===facebook.status.unknown)||(facebookStatus===facebook.status.not_authorized)) return dispatch(FBlogin());})\r\n        .then   (()               => ({facebookUserId:getState().client.userAccess.facebookUserId,facebookUserAccessToken:getState().client.userAccess.facebookUserAccessToken}));\r\n};\r\n\r\nconst fetchFacebookDetails = () => async (dispatch,getState) => {\r\n    let fbDetails = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(FBgetLoginStatus(null)))\r\n        .then   (facebookStatus   => new Promise(resolve => {if (facebookStatus===facebook.status.connected) window.FB.api(facebook.apiQuery,(result => resolve(result)));}))\r\n        .then   (d                => fbDetails={name:d.first_name,surname:d.last_name,email:d.email,profilePicture:d.picture.data.url})\r\n        .then   (()               => dispatch(storeDetails(fbDetails,{overwrite:false})))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.FB_NOT_FOUND));});\r\n};\r\n\r\nexport const createFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const loginFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_FACEBOOK,fbLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)))\r\n        .then   (()               => dispatch(fetchFacebookDetails()));\r\n};\r\n\r\nexport const addFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateFacebook = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(connectFacebook()))\r\n        .then   (fbLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_FACEBOOK,fbLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (()               => dispatch(fetchFacebookDetails()))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processLinkedInLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let linkedInListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_LINKEDIN_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {linkedInListener=getState().client.userAccess.linkedInListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => getState().client.userAccess.linkedInWindow)\r\n        .then   (linkedInWindow   => {linkedInWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_LINKEDIN_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupLinkedInLogin = () => async (dispatch,getState) => {\r\n    let linkedInWindow = null;\r\n    let linkedInListener = null;\r\n    let linkedInInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {linkedInWindow = getState().client.userAccess.linkedInWindow;})\r\n        .then   (()               => ((linkedInWindow===null)||(linkedInWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) linkedInWindow = window.open(linkedInAuthUri(linkedInRedirectUri,linkedInAppState,linkedInAppClientId),linkedInWindowName,linkedInWindowParams);})\r\n        .then   (()               => linkedInWindow.focus())\r\n        .then   (()               => {linkedInInterval = setInterval(() => {if (linkedInWindow.closed) {waitingHandleResolve(); clearInterval(linkedInInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {linkedInListener = event => dispatch(processLinkedInLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,linkedInListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_LINKEDIN_WINDOW_AND_LISTENER,payload:{linkedInWindow,linkedInListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({linkedInCode:getState().client.userAccess.linkedInCode,linkedInState:getState().client.userAccess.linkedInState}));\r\n};\r\n\r\nexport const createLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_LINKEDIN,liLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateLinkedIn = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupLinkedInLogin()))\r\n        .then   (liLoginPackage   => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_LINKEDIN,liLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processGoogleLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let googleListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_GOOGLE_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {googleListener=getState().client.userAccess.googleListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => getState().client.userAccess.googleWindow)\r\n        .then   (googleWindow     => {googleWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_GOOGLE_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupGoogleLogin = () => async (dispatch,getState) => {\r\n    let googleWindow = null;\r\n    let googleListener = null;\r\n    let googleInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => {googleWindow = getState().client.userAccess.googleWindow;})\r\n        .then   (()               => ((googleWindow===null)||(googleWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) googleWindow = window.open(googleAuthUri(googleRedirectUri,googleAppClientId),googleWindowName,googleWindowParams);})\r\n        .then   (()               => googleWindow.focus())\r\n        .then   (()               => {googleInterval = setInterval(() => {if (googleWindow.closed) {waitingHandleResolve(); clearInterval(googleInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {googleListener = event => dispatch(processGoogleLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,googleListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GOOGLE_WINDOW_AND_LISTENER,payload:{googleWindow,googleListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({googleCode:getState().client.userAccess.googleCode}));\r\n};\r\n\r\nexport const createGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_GOOGLE,gLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateGoogle = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupGoogleLogin()))\r\n        .then   (gLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_GOOGLE,gLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nconst processTwitterLogin = (event,waitingHandleResolve) => async (dispatch,getState) => {\r\n    let twitterListener = null;\r\n    return await Promise.resolve()\r\n        .then   (()               => {if ((event.data.origin)&&(event.data.origin===EVENT_DATA_ORIGIN_THRUBI)) return event.data; else throw flareBook.errorFlare.MESSAGE_IGNORED;})\r\n        .then   (pjRenamed        => {dispatch({type:actionType.RECEIVE_TWITTER_LOGIN,payload:pjRenamed});})\r\n        .then   (()               => {twitterListener=getState().client.userAccess.twitterListener;})\r\n        .then   (()               => {window.removeEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => getState().client.userAccess.twitterWindow)\r\n        .then   (twitterWindow     => {twitterWindow.close();})\r\n        .then   (()               => dispatch({type:actionType.CLEAR_TWITTER_WINDOW_AND_LISTENER,payload:{}}))\r\n        .then   (()               => {waitingHandleResolve();})\r\n        .catch  (()               => null);\r\n};\r\n\r\nconst startupTwitterLogin = () => async (dispatch,getState) => {\r\n    let twitterRequestToken = null;\r\n    let twitterWindow = null;\r\n    let twitterListener = null;\r\n    let twitterInterval = null;\r\n    let waitingHandleResolve = null;\r\n    let waitingHandle = new Promise(resolve => waitingHandleResolve=resolve);\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.AUTH_TOKEN_TWITTER,{})))\r\n        .then   (token            => twitterRequestToken=token.requestToken)\r\n        .then   (()               => {twitterWindow = getState().client.userAccess.twitterWindow;})\r\n        .then   (()               => ((twitterWindow===null)||(twitterWindow.closed)))\r\n        .then   (openNewWindow    => {if (openNewWindow) twitterWindow = window.open(twitterAuthUri(twitterRequestToken),twitterWindowName,twitterWindowParams);})\r\n        .then   (()               => twitterWindow.focus())\r\n        .then   (()               => {twitterInterval = setInterval(() => {if (twitterWindow.closed) {waitingHandleResolve(); clearInterval(twitterInterval);}},REDIRECT_CLOSE_INTERVAL);})\r\n        .then   (()               => {twitterListener = event => dispatch(processTwitterLogin(event,waitingHandleResolve));})\r\n        .then   (()               => {window.addEventListener(EVENT_TYPE_MESSAGE,twitterListener);})\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_TWITTER_WINDOW_AND_LISTENER,payload:{twitterWindow,twitterListener}}))\r\n        .then   (()               => waitingHandle)\r\n        .then   (()               => ({twitterRequestToken:getState().client.userAccess.twitterRequestToken,twitterOAuthVerifier:getState().client.userAccess.twitterOAuthVerifier}));\r\n};\r\n\r\nexport const createTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_CREATE_TWITTER,tLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const loginTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.AUTH_LOGIN_TWITTER,tLoginPackage)))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .then   (loginData        => dispatch(finalizeLogin(loginData)));\r\n};\r\n\r\nexport const addTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_ADD_TWITTER,tLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const updateTwitter = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(startupTwitterLogin()))\r\n        .then   (tLoginPackage    => dispatch(processRequest(requestType.POST,endpoint.USERACCESS_UPDATE_TWITTER,tLoginPackage)))\r\n        .then   (()               => dispatch(fetchUserChannels()))\r\n        .catch  (error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.FAILED_LOGIN))); return {loginError:true};})\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};\r\n\r\nexport const createPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const loginPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const addPayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const updatePayPal = () => async (dispatch,getState) => {\r\n    return await Promise.resolve();\r\n};\r\n\r\nexport const sendRedirect = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => window.location.search)\r\n        .then   (params           => JSON.parse('{\"'+decodeURI(params).replace(\"?\",\"\").replace(/\"/g,'\\\\\"').replace(/&/g,'\",\"').replace(/=/g,'\":\"')+'\"}'))\r\n        .then   (pJson            => ({\r\n            origin:                 EVENT_DATA_ORIGIN_THRUBI,\r\n            code:                   pJson.code,\r\n            state:                  pJson.state,\r\n            twitterRequestToken:    pJson.oauth_token,\r\n            twitterOAuthVerifier:   pJson.oauth_verifier,\r\n        }))\r\n        .then   (pjRenamed        => {if (window.opener) window.opener.postMessage(pjRenamed);});\r\n};","import Web3 from \"web3\";\r\nimport {logout} from \"./auth\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {ethEventType} from \"../config/blockchain_ethereum\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport flareBook from \"../config/flare\";\r\nimport {THRUBI_ABI,THRUBI_ADDRESS} from \"../env/blockchain_ethereum\";\r\nimport {INTERVAL_ETH_ADDRESS_WORKER, INTERVAL_ETH_NETWORK_WORKER} from \"../env/workers\";\r\n\r\nexport const signMessage = hash => async (dispatch,getState) =>  {\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    return await web3.eth.personal.sign(hash,ethAddress,null);\r\n};\r\n\r\nexport const enableBlockchain = () => async (dispatch,getState) => {\r\n    // Extract injected Web3\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    // Generate contract\r\n    const thrubiContract = new web3.eth.Contract(THRUBI_ABI,THRUBI_ADDRESS);\r\n    dispatch({type:actionType.RECEIVE_THRUBI_CONTRACT,payload:{thrubiContract}});\r\n    // Fetch network type\r\n    const ethNetworkWorker = setInterval(() => {\r\n        web3.eth.net.getNetworkType()\r\n            .then(ethNetwork    => ({ethNetwork,changed:ethNetwork !== getState().client.userAccess.ethNetwork}))\r\n            .then(result        => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_NETWORK,payload:{ethNetwork:result.ethNetwork}}); return result;});\r\n            //.then(result        => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_NETWORK_CHANGE));});\r\n    },INTERVAL_ETH_NETWORK_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_NETWORK_WORKER,payload:{ethNetworkWorker}});\r\n    // Enable MetaMask and fetch account, then login with blockchain\r\n    const ethAddressWorker = setInterval(() => {\r\n        window.ethereum.enable()\r\n            .then (()           => web3.eth.getAccounts())\r\n            .catch(error        => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.CANNOT_ENABLE_ETHEREUM)))\r\n            .then (accounts     => accounts[0])\r\n            .then (ethAddress   => ({ethAddress,changed:ethAddress !== getState().client.userAccess.ethAddress}))\r\n            .then (result       => {if (result.changed) dispatch(logout({autoLogin:false})); return result;})\r\n            .then (result       => {if (result.changed) dispatch({type:actionType.UPDATE_ETH_ADDRESS,payload:{ethAddress:result.ethAddress}}); return result;});\r\n            //.then (result       => {if (result.changed) dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.DETECTED_ETH_ADDRESS_CHANGE))});\r\n    },INTERVAL_ETH_ADDRESS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_ETH_ADDRESS_WORKER,payload:{ethAddressWorker}});\r\n};\r\n\r\nexport const transform = transformEth => (dispatch,getState) => {\r\n    const transformContract = getState().session.blockchain.thrubiContract.methods.transform;\r\n    const ethAddress = getState().client.userAccess.ethAddress;\r\n    const populationId = getState().client.population.id;\r\n    const userId = getState().client.user.id;\r\n    return new Promise((resolve,reject) => {\r\n        try {\r\n            transformContract(userId,populationId,ethAddress)\r\n                .send({from:ethAddress,value:transformEth*1e18})\r\n                .once(ethEventType.confirmation,() => {\r\n                        // Thrubi will automatically process the transform via its workers on the backend\r\n                        resolve();\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            throw flareBook.errorFlare.NO_ETHEREUM_CONFIG;\r\n        }\r\n    });\r\n};\r\n\r\n\r\n","export const EVENT_DATA_ORIGIN_THRUBI=\"THRUBI\";\r\nexport const EVENT_TYPE_MESSAGE=\"message\";","export const REDIRECT_CLOSE_INTERVAL = 500;\r\n","import axios from \"axios\";\r\nimport flareBook from \"../config/flare\";\r\n\r\nexport const uploadS3 = (signedRequest,picture) => async (dispatch,getState) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\":     picture.type,\r\n        },\r\n    };\r\n    return Promise.resolve()\r\n        .then (()       => axios.put(signedRequest,picture,config))\r\n        .catch(e       => {throw flareBook.errorFlare.S3_UPLOAD_ERROR;});\r\n};","import {processRequest} from \"./server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {logout} from \"./auth\";\r\nimport {activationState,detailName,flagFlare,userFlags} from \"../config/user\";\r\nimport flareBook from \"../config/flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport actionType, {busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {INTERVAL_USER_WORKER} from \"../env/workers\";\r\nimport {AMAZON_S3_MAX_PICTURE_SIZE,MIME_TYPE_JPEG,MIME_TYPE_PNG} from \"../config/s3\";\r\nimport {uploadS3} from \"./s3\";\r\n\r\nexport const switchOptionUserMenu = optionUserMenu => async (dispatch,getState) => {\r\n    return dispatch({type:actionType.SWITCH_OPTION_USER_MENU,payload:{optionUserMenu}});\r\n};\r\n\r\nexport const fetchDetails = () => async (dispatch,getState) => {\r\n    let details = {};\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.GET,endpoint.USER_DETAILS_FETCH,null)))\r\n        .then   (result           => result.map((detail,i) => details[detail.detailName]=detail.detailValue))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_USER_DETAILS,payload:details}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)));\r\n};\r\n\r\nexport const deleteDetails = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,{userDetails:{[detailName.all]:true}})))\r\n        .then   (()               => dispatch({type:actionType.DELETE_USER_DETAILS,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const deleteProfilePicture = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_DELETE,{userDetails:{[detailName.profilePicture]:true}})))\r\n        .then   (()               => dispatch({type:actionType.DELETE_PROFILE_PICTURE,payload:{}}))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const storeDetails = (userDetails,overwrite) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_DETAILS_STORE,Object.assign({},{userDetails},overwrite))))\r\n        .then   (()               => dispatch(fetchDetails()))\r\n        .catch  (error            => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_DETAILS)))\r\n        .finally(()               => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_USERDETAILS}));\r\n};\r\n\r\nexport const uploadProfilePicture = fileRef => async (dispatch,getState) => {\r\n    let awsPacket;\r\n    let picture=fileRef.files[0];\r\n    return await Promise.resolve()\r\n        .then   (()               => {if (!(picture.type===MIME_TYPE_JPEG||picture.type===MIME_TYPE_PNG)) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => {if (picture.size>AMAZON_S3_MAX_PICTURE_SIZE) throw flareBook.errorFlare.ERR_USER_PROFILE_PICTURE;})\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_PROFILEPICTURE_SIGN,{fileName:picture.name,fileType:picture.type,fileSize:picture.size})))\r\n        .then   (packet           => awsPacket=packet)\r\n        .then   (()               => dispatch(uploadS3(awsPacket.signedPutUri,picture)))\r\n        .then   (()               => dispatch(storeDetails({[detailName.profilePicture]:awsPacket.unsignedGetUri},{overwrite:true})))\r\n        .finally(()               => fileRef.value=null);\r\n};\r\n\r\nexport const uploadDocument = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()               => dispatch(storeDetails({[detailName.submittedDocument]:true},{overwrite:true})))\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.USER_CERTIFY,{})));\r\n};\r\n\r\nconst flareUserFlags = flags => async (dispatch,getState) => {\r\n    Object.keys(userFlags).map(async flag => {\r\n            const currentFlag = getState().client.user[flag];\r\n            const incomingFlag = flags[flag];\r\n            if ((currentFlag!==null)&&(((currentFlag===0)^(incomingFlag===0))||(Math.sign(currentFlag)>0)^(Math.sign(incomingFlag)>0)))\r\n                return await dispatch(emitFlare(flareBook.flareType.INFO,flagFlare(incomingFlag,flag)));\r\n        }\r\n    );\r\n};\r\n\r\nexport const activateUserWorker = () => async (dispatch,getState) => {\r\n    let userWorker = setInterval((() => {\r\n        let userFlags;\r\n        const activity = async () => {\r\n            await Promise.resolve()\r\n                .then (()         => dispatch(processRequest(requestType.GET,endpoint.USER_GETFLAGS,null)))\r\n                .then (flags      => userFlags=flags)\r\n                .then (()         => dispatch(flareUserFlags(userFlags)))\r\n                .then (()         => dispatch({type:actionType.RECEIVE_USER_FLAGS,payload:userFlags}))\r\n                .catch(error      => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_USER_FLAGS)));\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_USER_WORKER);\r\n    dispatch({type:actionType.RECEIVE_USER_WORKER,payload:{userWorker}});\r\n};\r\n\r\nexport const stopUserWorker = () => async (dispatch,getState) => {\r\n    clearInterval(getState().session.workers.user);\r\n    dispatch({type:actionType.STOP_USER_WORKER,payload:{}});\r\n};\r\n\r\nexport const activateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_ACTIVATE,null)))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_ACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const deactivateUser = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}))\r\n        .then   (()              => dispatch({type:actionType.CLEAR_POPULATION,payload:{}}))\r\n        .then   (()              => dispatch(processRequest(requestType.POST,endpoint.USER_DEACTIVATE,{activationState:activationState.userRequestDeactivated})))\r\n        .then   (()              => dispatch({type:actionType.SET_USER_DEACTIVATED,payload:{}}))\r\n        .catch  (error           => {throw flareBook.flareFallback(error,flareBook.errorFlare.USER_ACTIVATION);})\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_ACTIVATEUSER}));\r\n};\r\n\r\nexport const declareIncome = mDeclared => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then  (()              => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}))\r\n        .then  (()              => dispatch(processRequest(requestType.POST,endpoint.MEMBER_REQUEST_DECLAREINCOME+\"/\"+getState().client.population.id+\"/\"+mDeclared,null)))\r\n        .catch (error           => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareType.ERR_GENERIC_USERMENU)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_DECLAREINCOME}));\r\n};\r\n\r\nexport const close = () => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()             => dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}))\r\n        .then   (()             => dispatch(processRequest(requestType.POST,endpoint.USER_CLOSE,{})))\r\n        .then   (()             => dispatch(logout({autoLogin:false})))\r\n        .catch  (error          => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.errorFlare.ERR_ACCOUNT_CLOSE)))\r\n        .finally(()              => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_COMPONENT_AUTH}));\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {declareIncome} from \"../actions/user\";\r\n\r\nclass _MemberDeclareIncome extends Component {\r\n    render() {\r\n        const {mCurrent,ccySymbol,declareIncomeBusy,incomeApproved} = this.props;\r\n        const {declareIncome} = this.props;\r\n        let mDeclared;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <_CcyRow text=\"Declared income\" bold={false} value={mCurrent} ccySymbol={ccySymbol}/>\r\n                                </div>\r\n                                <div className=\"col-lg-12 small py-2\">\r\n                                    Your income of {mCurrent} {ccySymbol} is currently:&nbsp;\r\n                                    <span className={\"badge \"+(incomeApproved>0?\"badge-info\":\"badge-danger\")}>{incomeApproved>0?\"Officially approved\":(incomeApproved<0?\"Pending approval\":\"Not approved\")}</span>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n                <div className=\"navbar-light col-lg-4 container-fluid row m-0\">\r\n                    {\r\n                        declareIncomeBusy?\"Busy processing income declaration\":\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"row\">\r\n                                        <input ref={input => mDeclared = input}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 m-0\"\r\n                                               placeholder={mCurrent.toFixed(2)+\" \"+ccySymbol} required/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-0 m-0\">\r\n                                    <_ActionButton text=\"Declare new income\" action={() => declareIncome(mDeclared.value)}\r\n                                                   buttonType=\"btn-primary m-0\"/>\r\n                                </div>\r\n                            </Fragment>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    mCurrent:           state.client.member.mCurrent,\r\n    incomeApproved:     state.client.user.incomeApproved,\r\n    declareIncomeBusy:  state.session.busy.action.declareIncome,\r\n});\r\n\r\nconst MemberDeclareIncome = connect(mapStateToProps,{declareIncome})(_MemberDeclareIncome);\r\n\r\nexport default MemberDeclareIncome;","import React,{Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport MemberInfo from \"./MemberInfo\";\r\nimport MemberDeclareIncome from \"./MemberDeclareIncome\";\r\nimport {removeMembership} from \"../actions/member\";\r\n\r\nclass _MemberBar extends Component {\r\n    render() {\r\n        const {countryName,ccyId,busy,loggedIn,populationId,identityCertified} = this.props;\r\n        const {removeMembership} = this.props;\r\n\r\n        return (\r\n            <div className=\"container-fluid row p-0 m-0 text-primary text-center mt-3\">\r\n                {\r\n                    busy ? \"Viewport loading...\" :\r\n                        ((!loggedIn) || (populationId<0)) ? \"\" :\r\n                            <Fragment>\r\n                                <div className=\"col-lg-12 p-2 m-0 bg-primary text-light text-center mb-3\">\r\n                                    <span className=\"mt-3\"><b>{countryName}</b>&nbsp;<small>{ccyId}&nbsp;<i>pid#{populationId}</i></small></span>\r\n                                    <button className=\"close memberPaddingX text-light\" type=\"button\" onClick={() => removeMembership()} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                </div>\r\n                                {\r\n                                    identityCertified<=0\r\n                                        ?\r\n                                            <div className=\"col-sm-12\">\r\n                                                <MemberInfo />\r\n                                            </div>\r\n                                        :\r\n                                            <Fragment>\r\n                                                <div className=\"col-sm-4\">\r\n                                                    <MemberInfo />\r\n                                                </div>\r\n                                                <MemberDeclareIncome />\r\n                                            </Fragment>\r\n                                }\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryName:        state.client.population.countryName,\r\n    ccyId:              state.client.population.ccyId,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    busy:               state.session.busy.component.viewport,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst MemberBar = connect(mapStateToProps,{removeMembership})(_MemberBar);\r\n\r\nexport default MemberBar;","import React from 'react';\r\nimport Channel from \"../classes/Channel\";\r\n\r\nconst _RadioButtons = ({columnSize,color,activeFilter,checkedFilter,action,elements}) =>\r\n    <div data-toggle=\"buttons\" className=\"btn btn-block btn-group btn-group-toggle border-0 row p-0 m-0 my-2\">\r\n        {\r\n            elements.map((element,key) =>\r\n                <button\r\n                    key={element.key}\r\n                    id={element.key}\r\n                    onClick={(event) => {event.preventDefault();action(element.key);}}\r\n                    defaultChecked={checkedFilter === element.key}\r\n                    disabled={false} //should be using disabledFilter, but having CSS issues\r\n                    className={\"btn btn-sm btn-block small rounded-0 p-0 m-0 py-2 \"+element.color+\" \"+columnSize+\"\" + (activeFilter === element.key ? \" active\" : \"\")}\r\n                >\r\n                    <div className={\"container row p-0 m-0\"+(element.channel?\"\":\" fullWidth\")}>\r\n                        <div className={(element.channel?\"\":\"fullWidth\")}>\r\n                            {\r\n                                !element.channel ? \"\" :\r\n                                    <img className=\"p-0 my-0 mx-2\" alt={element.channel} height=\"32\" width=\"32\" src={process.env.PUBLIC_URL+\"/png/\"+Channel.channelColor(element.channel)+\".png\"} />\r\n                            }\r\n                            <div className={(element.channel?\"ml-4\":\"fullWidth\")+\" d-inline-block text-\"+(element.channel?\"left\":\"center\")}>{element.text}</div>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            )\r\n        }\r\n    </div>\r\n;\r\n\r\nexport default _RadioButtons;\r\n\r\n","import React from \"react\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _KeyboardChannel = ({text,action,abandonAction,buttonType,abandonButtonType}) => {\r\n    let refs = {username:null,password:null};\r\n    return(\r\n        <div className=\"my-2\">\r\n            <span><b>Your credentials:</b></span>\r\n            <input id=\"username\" ref={input => refs.username = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"username\" required />\r\n            <input id=\"password\" ref={input => refs.password = input} type=\"text\" className=\"form-control form-control-sm rounded-0 my-2\" placeholder=\"password\" required />\r\n            <_ActionButton text={text} action={() => {action(refs.username.value,refs.password.value);}} buttonType={buttonType}/>\r\n            <_ActionButton text=\"Back\" action={abandonAction} buttonType={abandonButtonType}/>\r\n            <span className=\"small\"><i>Your password will be encrypted. We do not store plain text passwords on our servers. Verify your email address to make your account more secure.</i></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default _KeyboardChannel;","import {processRequest} from \"./server\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const logAction = (actionType,actionValue) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => dispatch(processRequest(requestType.POST,endpoint.ACTIONS_LOG,{actionType,actionValue})))\r\n};\r\n\r\nexport const logAuthAction = (actionType,actionValue) => async (dispatch,getState) => {\r\n    return await Promise.resolve()\r\n        .then   (()           => dispatch(processRequest(requestType.POST,endpoint.ACTIONS_AUTH,{actionType,actionValue})))\r\n};","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Channel from \"../classes/Channel\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport _RadioButtons from \"./_RadioButtons\";\r\nimport _KeyboardChannel from \"./_KeyboardChannel\";\r\nimport * as auth from \"../actions/auth\";\r\nimport {switchOptionUserMenu} from \"../actions/user\";\r\nimport {logAction} from \"../actions/log\";\r\nimport userOptions,{loggableActionType} from \"../config/user\";\r\n\r\nclass _Auth extends Component {\r\n    componentDidUpdate() {\r\n        const {busy,loggedIn,autoLogin,ethAddress} = this.props;\r\n        const {loginBlockchainEthereum} = this.props;\r\n\r\n        if ((!busy)&&(!loggedIn)&&(autoLogin)&&(ethAddress)) {\r\n            loginBlockchainEthereum();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        const {logout} = this.props;\r\n        logout({autoLogin:false});\r\n    };\r\n    \r\n    authFunction(actionType,channelName) {\r\n        const {logAction} = this.props;\r\n\r\n        return () => {\r\n            if (actionType===userOptions.optionLoginCreate.LOGIN||actionType===userOptions.optionLoginCreate.CREATE) {\r\n                logAction(loggableActionType.clickChannel,actionType+\"_\"+channelName);\r\n            }\r\n            this.props[actionType.toLowerCase()+Channel.channelAuthFunctionName(channelName)]();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {busy,loggedIn,optionLoginCreate,optionKeyboardMode,optionUserMenu,payChannel,receiveChannel,channels} = this.props;\r\n        const {switchOptionLoginCreate,switchOptionUserMenu,abandonKeyboard,setPayChannel,setReceiveChannel,deleteChannel,logout} = this.props;\r\n\r\n        return <div className=\"text-center small\">\r\n            {\r\n                busy?\"Auth module busy...\":\r\n                    <Fragment>\r\n                        {\r\n                            optionKeyboardMode===null?\"\":\r\n                                <_KeyboardChannel\r\n                                    text={Channel.keyboardChannelMessage(optionKeyboardMode)}\r\n                                    action={this.props[optionKeyboardMode.toLowerCase()+\"KeyboardForm\"]}\r\n                                    buttonType=\"btn btn-sm p-0 btn-primary\"\r\n                                    abandonAction={abandonKeyboard}\r\n                                    abandonButtonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode!==null)||(loggedIn)?\"\":\r\n                                <Fragment>\r\n                                    {\r\n                                        Object.keys(channels).map((key) => {    //loop on individual channel types\r\n                                            if (Channel.channelIsForLogin(channels[key]))\r\n                                                return (\r\n                                                    <_ActionButton\r\n                                                        channel={key}\r\n                                                        text={Channel.channelUserFriendlyName(key,optionLoginCreate)}\r\n                                                        key={(optionLoginCreate === userOptions.optionLoginCreate.LOGIN?\"login\":\"create\")+key}\r\n                                                        action={this.authFunction(optionLoginCreate,key)}\r\n                                                        buttonType={\"btn btn-sm p-0 btn-\"+(optionLoginCreate===userOptions.optionLoginCreate.LOGIN?\"outline-\":\"\")}/>\r\n                                                );\r\n                                            else return \"\";\r\n                                        })\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                        {\r\n                            loggedIn ? \"\" :\r\n                                <_ActionButton\r\n                                    text={optionLoginCreate === userOptions.optionLoginCreate.LOGIN ? \"Create a new Thrubi account\" : \"I already have a Thrubi account\"}\r\n                                    action={switchOptionLoginCreate}\r\n                                    buttonType=\"nav-link border-0 text-small text-primary\"/>\r\n                        }\r\n                        {\r\n                            (optionKeyboardMode !== null) || (!loggedIn) ? \"\" :\r\n                                <Fragment>\r\n                                    <_ActionButton text=\"Logout\" action={logout} payload={{autoLogin: false}}\r\n                                                   buttonType=\"btn btn-sm p-0 btn-secondary\"/>\r\n                                    <_RadioButtons columnSize=\"col-lg-6\"\r\n                                                   activeFilter={optionUserMenu}\r\n                                                   checkedFilter={optionUserMenu}\r\n                                                   action={switchOptionUserMenu}\r\n                                                   elements={[  {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.USER,    text:\"My account\",                 disabledFilter:optionUserMenu===userOptions.optionUserMenu.USER},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.PAY,     text:\"Payment\",                    disabledFilter:optionUserMenu===userOptions.optionUserMenu.PAY},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.MANAGE,  text:\"Manage login credentials\",   disabledFilter:optionUserMenu===userOptions.optionUserMenu.MANAGE},\r\n                                                                {color:\"btn-outline-primary\",key:userOptions.optionUserMenu.ADD,     text:\"Connect login credentials\",  disabledFilter:optionUserMenu===userOptions.optionUserMenu.ADD}]}/>\r\n                                    {\r\n                                        optionUserMenu === userOptions.optionUserMenu.USER ? \"\" :\r\n                                            <Fragment>\r\n                                                {\r\n                                                    optionUserMenu !== userOptions.optionUserMenu.PAY ? \"\" :\r\n                                                        [\r\n                                                            {message:\"My payment method:\",          channel:payChannel,     setter:setPayChannel,},\r\n                                                            {message:\"My inbound payment method:\",  channel:receiveChannel, setter:setReceiveChannel,}\r\n                                                        ].map(o =>\r\n                                                            <div className=\"my-4\">\r\n                                                                {o.message}\r\n                                                                <_RadioButtons columnSize=\"col-lg-12\"\r\n                                                                           activeFilter={o.channel}\r\n                                                                           checkedFilter={o.channel}\r\n                                                                           action={o.setter}\r\n                                                                           elements={Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                                if (Channel.channelIsForPay(channels[key])) return ({\r\n                                                                                    key:(key===o.channel?Channel.channelName.NOT_AVAILABLE:key),\r\n                                                                                    channel:key,\r\n                                                                                    color:\"btn-\"+(key===o.channel?\"\":\"outline-\")+Channel.channelColor(key),\r\n                                                                                    disabledFilter:(key===o.channel),\r\n                                                                                    text:Channel.channelUserFriendlyName(key,(key===o.channel?\"USING\":(Channel.channelIsOpen(channels[key])?\"USE\":\"LINK\"))),\r\n                                                                                }); else return null;\r\n                                                                           }).filter(element=>element!==null)}/>\r\n                                                            </div>\r\n                                                        )\r\n                                                }\r\n                                                <div className=\"my-4\">\r\n                                                    {\r\n                                                        [\r\n                                                            {\r\n                                                                mode:   \"UPDATE\",\r\n                                                                action: key => this.authFunction(\"UPDATE\",key),\r\n                                                                color:  \"\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"ADD\",\r\n                                                                action: key => this.authFunction(\"ADD\",key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.ADD) && (!Channel.channelIsOpen(channelMode)))\r\n                                                            },\r\n                                                            {\r\n                                                                mode:   \"DELETE\",\r\n                                                                action: key => () => deleteChannel(key),\r\n                                                                color:  \"outline-\",\r\n                                                                filter: (channelMode) => ((optionUserMenu === userOptions.optionUserMenu.MANAGE) && ((Channel.channelIsForLogin(channelMode) || (Channel.channelIsForPay(channelMode))) && (Channel.channelIsOpen(channelMode))))\r\n                                                            }\r\n                                                        ].map(actions => (\r\n                                                            <div key={actions.mode}>\r\n                                                                {\r\n                                                                    Object.keys(channels).map(key => {    //loop on individual channel types\r\n                                                                        if (actions.filter(channels[key])) return (\r\n                                                                            <_ActionButton\r\n                                                                                channel={key}\r\n                                                                                text={Channel.channelUserFriendlyName(key,actions.mode)}\r\n                                                                                action={actions.action(key)}\r\n                                                                                key={actions.mode + key}\r\n                                                                                buttonType={\"btn btn-sm p-0 btn-\" + actions.color}/>\r\n                                                                        ); else return \"\";\r\n                                                                    })\r\n                                                                }\r\n                                                            </div>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            </Fragment>\r\n                                    }\r\n                                </Fragment>\r\n                        }\r\n                    </Fragment>\r\n            }\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.auth,\r\n    ethAddress:         state.client.userAccess.ethAddress,\r\n    optionLoginCreate:  state.client.user.optionLoginCreate,\r\n    optionKeyboardMode: state.client.user.optionKeyboardMode,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    autoLogin:          state.client.userAccess.autoLogin,\r\n    payChannel:         state.client.userAccess.payChannel,\r\n    receiveChannel:     state.client.userAccess.receiveChannel,\r\n    channels:           state.client.userAccess.channels,\r\n});\r\n\r\nconst Auth = connect(mapStateToProps,Object.assign({},auth,{logAction,switchOptionUserMenu}))(_Auth);\r\n\r\nexport default Auth;","import React,{Component} from \"react\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {connect} from \"react-redux\";\r\nimport {submitSuggestion} from \"../actions/guest\";\r\nimport {suggestionType} from \"../config/guest\";\r\n\r\n\r\nclass _GuestSuggestion extends Component {\r\n    render() {\r\n        const {type,transparent} = this.props;\r\n        const {submitSuggestion} = this.props;\r\n        let refs = {country:null,suggestionText:null};\r\n        return (\r\n            <div className=\"my-2 text-center\">\r\n                <span><b>{\"Your \"+(type===suggestionType.IDENTITY_CERTIFICATION?\"digital identity platform\":\r\n                    type===suggestionType.INCOME_VERIFICATION?\"official income authority\"\r\n                        :\"\")+\" suggestion\"}</b></span>\r\n                <input id=\"country\" ref={input => refs.country = input} type=\"text\"\r\n                       className={\"form-control form-control-sm rounded-0 my-2\"+(transparent?\" bg-transparent\":\"\")}\r\n                       placeholder=\"Country\"\r\n                       required/>\r\n                <input id=\"suggestionText\" ref={input => refs.suggestionText = input} type=\"text\"\r\n                       className={\"form-control form-control-sm rounded-0 my-2\"+(transparent?\" bg-transparent\":\"\")}\r\n                       placeholder={type===suggestionType.IDENTITY_CERTIFICATION?\"Suggested digital identity platform\":\r\n                                    type===suggestionType.INCOME_VERIFICATION?\"Suggested official income authority\"\r\n                                    :\"Your suggestion\"}\r\n                       required/>\r\n                <_ActionButton text=\"Here is my suggestion\" action={() => {\r\n                    submitSuggestion(type,refs.country.value,refs.suggestionText.value);\r\n                    refs.country.value=\"\";\r\n                    refs.suggestionText.value=\"\";\r\n                }} buttonType={\"btn-primary\"+(transparent?\" bg-transparent\":\"\")} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst GuestSuggestion = connect(mapStateToProps,{submitSuggestion})(_GuestSuggestion);\r\n\r\nexport default GuestSuggestion;","import {processRequest} from \"./server\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\nimport {emitFlare} from \"./flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType from \"../reducers/config/actionTypes\";\r\nimport {logAction} from \"../actions/log\";\r\nimport {loggableActionType} from \"../config/user\";\r\n\r\nexport const submitSuggestion = (suggestionType,country,suggestionText) => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.GUEST_SUBMITSUGGESTION,{suggestionType,country,suggestionText})))\r\n        .then   (()               => dispatch(emitFlare(flareBook.flareType.INFO,flareBook.infoFlare.THANK_YOU)));\r\n};\r\n\r\nexport const chooseGuestMenu = guestMenuOption => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => dispatch(logAction(loggableActionType.clickGuestMenu,guestMenuOption)))\r\n        .then   (()               => dispatch({type:actionType.RECEIVE_GUEST_MENU_OPTION,payload:{guestMenuOption}}));\r\n};\r\n\r\nexport const toggleFaq = actionValue => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => {if (!getState().client.guest.faqState[actionValue]) dispatch(logAction(loggableActionType.clickHomeButton,actionValue));})\r\n        .then   (()               => dispatch({type:actionType.TOGGLE_FAQ_STATE,payload:{actionValue}}))\r\n        .catch  (()               => {throw flareBook.infoFlare.CANNOT_TOGGLE_FAQ_STATE;});\r\n};\r\n\r\nexport const guestSubscribeNewsletter = guestEmail => async (dispatch,getState) => {\r\n    return Promise.resolve()\r\n        .then   (()               => dispatch(processRequest(requestType.POST,endpoint.GUEST_SUBSCRIBENEWSLETTER,{guestEmail})))\r\n        .then   (()               => dispatch({type:actionType.SET_GUEST_SUBSCRIBED,payload:{guestSubscribed:true}}))\r\n        .catch  (()               => {throw flareBook.infoFlare.CANNOT_SUBSCRIBE_NEWSLETTER;});\r\n};","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GuestSuggestion from \"./GuestSuggestion\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {toggleFaq} from \"../actions/guest\";\r\nimport {loggableActionValue} from \"../config/user\";\r\nimport {suggestionType} from \"../config/guest\";\r\n\r\nclass _GuestFaq extends Component {\r\n    visionText = () => (\r\n        <Fragment>\r\n            <ul>\r\n                <li>Become a Thrubi member</li>\r\n                <li>Certify your identity</li>\r\n                <li>Declare and verify your income</li>\r\n                <li>Get your <b>Thrubi Blue</b> level assigned (the lower your income, the higher your level)</li>\r\n                <li>Receive your basic income</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n    wealthyText = () => (\r\n        <Fragment>\r\n            <ul>\r\n                <li>Become a Thrubi member</li>\r\n                <li>Certify your identity</li>\r\n                <li>Declare and verify your income</li>\r\n                <li>Get your <b>Thrubi Silver</b> level assigned (the higher your income, the higher your level)</li>\r\n                <li>Purchase <b>Thrubi Gold</b></li>\r\n                <li>The purchase proceedings will fund basic income in your country</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n    societiesText = () => (\r\n        <Fragment>\r\n            Thrubi is powered by:\r\n            <ul>\r\n                <li>In-house social models</li>\r\n                <li>Public <a\r\n                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://www.irs.gov\">IRS.gov</a> and <a\r\n                    target=\"_blank\" className=\"text-success\" rel=\"noopener noreferrer\" href=\"https://wid.world\">wid.world</a> income inequality data</li>\r\n            </ul>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    render() {\r\n        const {faqState} = this.props;\r\n        const {toggleFaq} = this.props;\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row py-2 rounded-bottom\">\r\n                    {\r\n                        [\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_IDENTITY,\r\n                                        buttonText:\"How to certify my identity?\",\r\n                                        text:\"We are considering various partners for identity certification, from \"+\r\n                                            \"official government agencies to country-agnostic services such as Veriff. \"+\r\n                                            \"Do you know a reliable identity certification entity in your country? Please \" +\r\n                                            \"let us know below. Here are the options we are currently investigating:\",\r\n                                        list:[\"United States of America: login.gov/SSN\",\"The Netherlands: iDIN/DigiD\",\"Italy: SPID\"],\r\n                                        suggestion:suggestionType.IDENTITY_CERTIFICATION,\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_DISCLOSE,\r\n                                        buttonText:\"Should I disclose my income?\",\r\n                                        text:\"Yes, Thrubi needs to be informed of your earnings in order to calculate \" +\r\n                                             \"how to distribute basic income to you and to others in your country. \" +\r\n                                             \"We will fetch and process your income information only if you explicitly \" +\r\n                                             \"allow us to.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_VERIFY,\r\n                                        buttonText:\"How will Thrubi verify my income?\",\r\n                                        text:\"We are working to collaborate with government entities in order to gather \" +\r\n                                             \"current and trustworthy information regarding your income. Do you know which \" +\r\n                                             \"agency to cooperate with in your country? Please let us know below.\",\r\n                                        suggestion:suggestionType.INCOME_VERIFICATION,\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_INCOME_FRAUD,\r\n                                        buttonText:\"What about those who declare a false income?\",\r\n                                        text:\"Our efforts will go towards reducing fraud as much as conceivable. Thrubi \" +\r\n                                             \"will work to cover the unavoidable remaining small percentage of fraudulent \" +\r\n                                             \"income declarations by an appropriate insurance policy. It should cover basic \" +\r\n                                             \"income unfairly attributed to fraudulent declarations and taken away from \" +\r\n                                             \"legitimate recipients. Those responsible would be banned from receiving \" +\r\n                                             \"basic income in the future.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_TAX_HAVENS,\r\n                                        buttonText:\"How does Thrubi deal with undeclared offshore incomes?\",\r\n                                        text:\"Tax havens are an ongoing issue for the realization of a fair universal basic \" +\r\n                                             \"income and will be until countries agree on common rules for income declaration \" +\r\n                                             \"and transparency on financial matters. It is still important to implement \" +\r\n                                             \"basic income plans to the extent of our capabilities, while governments work \" +\r\n                                             \"together to define more efficient schemes of financial cooperation.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.VISION_UBI_MONTHLY,\r\n                                        buttonText:\"Will I receive basic income every month?\",\r\n                                        text:\"No, initially you will receive basic income only whenever wealthy individuals \" +\r\n                                             \"in your country actively participate by transferring a sum of money. The \" +\r\n                                             \"periodicity of basic income payments could change in the future. We will keep \" +\r\n                                             \"you informed regarding that.\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiBlue\",    image:\"/jpg/crowd.jpg\",     bg:\"everybody\", color:\"primary\",     header:\"Vision\",                text:this.visionText(),},\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_GOLD,\r\n                                        buttonText:\"What about my Thrubi Gold?\",\r\n                                        text:\"At the moment, Thrubi Gold acquired in your country is only representative \" +\r\n                                             \"of the extent to which you have contributed towards basic income. While in the future \" +\r\n                                             \"it might become possible to freely trade Thrubi Gold, it is at the moment \" +\r\n                                             \"non-transferable. We also intend to gauge interest by government agencies \" +\r\n                                             \"to accept Thrubi Gold as a means to cover your tax duties, given that by purchasing \" +\r\n                                             \"Thrubi Gold, you will have directly contributed to growth in your society.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_COMPANY,\r\n                                        buttonText:\"I represent a company. Can I contribute?\",\r\n                                        text:\"Please get in touch at info@thrubi.com \\u2014 while at the moment Thrubi \" +\r\n                                             \"algorithms only support individuals and tax units (couples or families) \" +\r\n                                             \"that declare income together, our long-term plan is to include companies in the \" +\r\n                                             \"picture. We would be delighted to hear your intentions.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_WORLDWIDE,\r\n                                        buttonText:\"Benefiting just my country seems too restrictive. What about a worldwide basic income?\",\r\n                                        text:\"The long-term plans for Thrubi include extending our basic income scheme to the whole \" +\r\n                                             \"world's population. We have income distribution data to work towards that goal, already. \" +\r\n                                             \"Before it can become a reality, a few technicalities need to be covered first, such as \" +\r\n                                             \"ensuring universal identity certification and stronger income verification procedures.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_PUBLIC_INFO,\r\n                                        buttonText:\"I would like people to know that I contributed to Thrubi. Will my payments be made public?\",\r\n                                        text:\"Yes, all Thrubi Gold purchase proceedings go towards basic income and will be publicly \" +\r\n                                             \"available, unless you explicitly have us not reveal that information.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.WEALTHY_BUSINESS_MODEL,\r\n                                        buttonText:\"How does Thrubi make money?\",\r\n                                        text:\"We are currently working on our business model. The current possibilities are: 1) advertisements, \" +\r\n                                             \"2) a fee on Thrubi Gold purchases, 3) donations. Let us know your suggestions: info@thrubi.com\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiSilver\",  image:\"/jpg/hanauer.jpg\",   bg:\"wealthy\",   color:\"secondary\",   header:\"Wealthy individuals\",   text:this.wealthyText(),},\r\n                            {actions: [\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_UBI_GOV,\r\n                                        buttonText:\"Shouldn't universal basic income be the government's responsibility?\",\r\n                                        text:\"Probably. However, it seems a target that is hard to agree upon as a government. That leaves \" +\r\n                                             \"the wealthy who protect their own interests able to do so, and other wealthy individuals \" +\r\n                                             \"advocating basic income and even willing to actively pay towards it unable to do so, \" +\r\n                                             \"for lack of a suitable platform, and left to blame the government. Enter Thrubi.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_THRUBI_WHY,\r\n                                        buttonText:\"What is the main goal for Thrubi?\",\r\n                                        text:\"Thrubi aims to create a global community where UBI can be achieved according to shared \" +\r\n                                             \"principles and rational mathematical models. The desired result is a fair, healthy society \" +\r\n                                             \"that people love being an active part of.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_MODELS_PUBLIC,\r\n                                        buttonText:\"Are the in-house models publicly available?\",\r\n                                        text:\"The in-house models underlying all basic income calculations will be made open source \" +\r\n                                             \"in the future. For the time being, they are not public. The rationale behind that decision \" +\r\n                                             \"is we have an edge and would like to keep that advantage to gain traction around the \" +\r\n                                             \"intended goal for Thrubi, which is to achieve positive social change around financial \" +\r\n                                             \"fairness in an evolving world.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_GOV_CONTRIBUTE,\r\n                                        buttonText:\"I represent a government. How can we implement Thrubi in our country?\",\r\n                                        text:\"Please get in touch at info@thrubi.com \\u2014 The starting point would be to provide \" +\r\n                                             \"a proven way of identifying your citizens and their incomes. It would be desirable for you \" +\r\n                                             \"to start thinking whether your would accept Thrubi Gold to fulfill tax duties in your country.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_FLAT_UBI,\r\n                                        buttonText:\"Prices will rise, so basic income is useless. Right?\",\r\n                                        text:\"Wrong, you are probably assuming that everybody should be paid a flat UBI amount. That is not sustainable. \" +\r\n                                             \"What needs to be addressed in any basic income scheme is not the basic income itself, as a number, but rather \" +\r\n                                             \"a country's income distribution. Given the latter, it is possible to calculate a target income \" +\r\n                                             \"distribution whereby anyone below a (variable) income threshold gets a basic income, higher for \" +\r\n                                             \"those with lower earnings. By periodically recalculating the target distribution and the individual \" +\r\n                                             \"basic incomes, it is possible to create a scheme that does not barely provide a fixed amount of money \" +\r\n                                             \"with an inevitably decreasing purchasing power, but rather connects all individuals in an overarching social \" +\r\n                                             \"scheme. Thrubi does exactly that with its inner models. By so doing, a society keeps its selfish incentives to \" +\r\n                                             \"innovate \\u2014 its citizens are still rewarded by much higher incomes for higher contributions \\u2014 but \" +\r\n                                             \"ensures its members that they will grow together. As an additional benefit, the extreme inequalities \" +\r\n                                             \"that put institutions at risk are smoothed out.\",\r\n                                    },\r\n                                    {\r\n                                        actionValue:loggableActionValue.SOCIETIES_MODELS_ABOUT,\r\n                                        buttonText:\"I am still curious. How do the social models used to determine basic income work exactly?\",\r\n                                        text:\"Here is a short summary, but please also read the answer to the question \\\"Prices will rise...\\\" if you \" +\r\n                                             \"haven't already. Capitalism has an inherent benefit \\u2014 selfish incentives to innovate, produce \" +\r\n                                             \"better goods and provide better services go at the heart of human nature \\u2014 and an inherent dangerous \" +\r\n                                             \"mechanics \\u2014 investment principles, as opposed to consumption, if applied at scale have the ability to \" +\r\n                                             \"starve the entire system, as is seen during financial crises. Without going into the important moral \" +\r\n                                             \"considerations of workers' rights and the consequences of owning entire sectors of a society, from the \" +\r\n                                             \"bare point of view of efficiency, it is not convenient to either the poor or the rich to have an economy \" +\r\n                                             \"swinging between periods of over-exploitation and periods of stagnation. Thrubi aims with its inner models \" +\r\n                                             \"to preserve the benefit of growth while inhibiting the dangerous mechanics of starvation. It recreates an \" +\r\n                                             \"optimal distribution that allows the poor to live a healthy life and contribute to a healthy society and \" +\r\n                                             \"the rich to keep on thriving.\",\r\n                                    },\r\n                                ],\r\n                                style:\"thrubiGold\",    image:\"/jpg/futuristic.jpg\",bg:\"societies\", color:\"success\",     header:\"Thriving societies\",    text:this.societiesText(),},\r\n                        ].map(e => (\r\n                                <div className=\"col-xl-4 p-0 m-0 navbar-light\">\r\n                                    <h2 className={\"mr-0 mr-lg-3 mb-0 my-lg-0 text-center text-lg-center px-4 py-3 text-light bg-\"+e.color}\r\n                                        style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n                                            backgroundSize:\"contain\",\r\n                                            backgroundPosition:\"left\",\r\n                                            backgroundRepeat:\"no-repeat\",\r\n                                            backgroundBlendMode:\"luminosity\"}}>{e.header}</h2>\r\n                                    <div className={\"mr-0 mr-lg-3 mb-4 my-lg-0 \"+e.style}>\r\n                                        <div style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+e.image,backgroundSize:\"cover\",backgroundRepeat:\"no-repeat\"}}\r\n                                             className={\"border-0 container-fluid m-0 \"+e.bg+\" p-4 text-\"+e.color}>\r\n                                            <p>{e.text}</p>\r\n                                            {e.actions.map(a =>\r\n                                                <Fragment>\r\n                                                    <_ActionButton text={a.buttonText} buttonType={\"my-4 btn-outline-\"+e.color} action={null} />\r\n                                                    {\r\n                                                        !faqState[a.actionValue]?\"\":\r\n                                                            <Fragment>\r\n                                                                <div className=\"p-0\">{a.text}</div>\r\n                                                                {\r\n                                                                    !a.list?\"\":\r\n                                                                        <ul>\r\n                                                                            {\r\n                                                                                a.list.map(l => <li>{l}</li>)\r\n                                                                            }\r\n                                                                        </ul>\r\n                                                                }\r\n                                                                {!a.suggestion?\"\":<GuestSuggestion transparent={true} type={a.suggestion} />}\r\n                                                            </Fragment>\r\n                                                    }\r\n                                                </Fragment>)}\r\n                                        </div>\r\n                                        <div className={\"border-0 container-fluid m-0 overflow-hidden topLeft p-4 opaque text-\"+e.color}>\r\n                                            <p>{e.text}</p>\r\n                                            {e.actions.map(a =>\r\n                                                <Fragment>\r\n                                                    <_ActionButton text={a.buttonText} buttonType={\"my-4 btn-outline-\"+e.color} action={() => {toggleFaq(a.actionValue)}} />\r\n                                                    {\r\n                                                        !faqState[a.actionValue] ? \"\":\r\n                                                            <Fragment>\r\n                                                                <div className=\"p-0\">{a.text}</div>\r\n                                                                {\r\n                                                                    !a.list?\"\":\r\n                                                                        <ul>\r\n                                                                            {\r\n                                                                                a.list.map(l => <li>{l}</li>)\r\n                                                                            }\r\n                                                                        </ul>\r\n                                                                }\r\n                                                                {!a.suggestion?\"\":<GuestSuggestion transparent={false} type={a.suggestion} />}\r\n                                                            </Fragment>\r\n                                                    }\r\n                                                </Fragment>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    faqState:   state.client.guest.faqState,\r\n});\r\n\r\nconst GuestFaq = connect(mapStateToProps,{toggleFaq})(_GuestFaq);\r\n\r\nexport default GuestFaq;","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {d3plot} from \"../actions/chart\";\r\n\r\nclass _Chart extends Component {\r\n    // Chart objects\r\n    svgChart;\r\n    // -------------\r\n\r\n    componentDidMount() {\r\n        const {d3plot} = this.props;\r\n        d3plot(this.svgChart);\r\n        window.addEventListener(\"resize\", () => d3plot(this.svgChart));\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {d3plot} = this.props;\r\n        d3plot(this.svgChart);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid m-0\">\r\n                <div className=\"row mr-0\">\r\n                    <div className=\"col-lg-12\">\r\n                        <svg className=\"w-100\" ref={input => this.svgChart = input} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    //refRaw:   state.client.ref.raw,\r\n});\r\n\r\nconst Chart = connect(mapStateToProps,{d3plot})(_Chart);\r\n\r\nexport default Chart;","import {processRequest} from \"./server\";\r\nimport {select} from \"d3-selection\";\r\nimport {scaleLinear,scaleLog} from \"d3-scale\";\r\nimport {min,max} from \"d3-array\";\r\nimport {format} from \"d3-format\";\r\nimport {axisLeft,axisBottom,axisRight,axisTop} from \"d3-axis\";\r\nimport {requestType} from \"../config/http\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const d3plot = svgChart => async (dispatch,getState) => {\r\n    const bootstrapColors = {\r\n        //these are similar to Bootstrap, but not the same, until I find a way to get them directly from Bootstrap\r\n        thrubiBlueChart:    \"#3d5e73\",\r\n        thrubiSilverChart:  \"#cccccc\",\r\n        thrubiGoldChart:    \"#947a25\",\r\n    };\r\n\r\n    const ref = await dispatch(processRequest(requestType.GET,endpoint.REF_FETCHREF,{}));\r\n\r\n    const xAxisLabel = \"Income in $\";\r\n    const yAxisLabel = \"# who earn $ (or more)\";\r\n    const circleRadius = 2;\r\n\r\n    const vRatio = 0.7;\r\n    const widthLimit = 800;\r\n    const svg = select(svgChart);\r\n    let width = svgChart.clientWidth;\r\n    svgChart.style.paddingLeft = 0;\r\n    if (width>widthLimit) {\r\n        const paddingLeft = (width-widthLimit)/2;\r\n        console.error(\"width,paddingLeft: \",width,paddingLeft);\r\n        svgChart.style.paddingLeft = paddingLeft>10?paddingLeft:0;\r\n        width = widthLimit;\r\n        svgChart.style.width = width;\r\n    }\r\n    const height = width*vRatio;\r\n    svgChart.style.height = height;\r\n    const xTicks = width>550?10:width>350?5:3;\r\n\r\n    const margin = {top:15,right:25,bottom:45,left:65};\r\n    const innerWidth = width-margin.left-margin.right;\r\n    const innerHeight = height-margin.top-margin.bottom;\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    const xValue = d => d.m;\r\n    const minxValue = +min(ref,xValue);\r\n    const maxxValue = +max(ref,xValue);\r\n    const xScale = scaleLinear()\r\n        .domain([minxValue,maxxValue])\r\n        .rangeRound([margin.left,margin.left+innerWidth])\r\n        .nice();\r\n\r\n    const yValue = d => d.n;\r\n    const minyValue = +min(ref,yValue);\r\n    const maxyValue = +max(ref,yValue);\r\n    const yScale = scaleLog()\r\n        .domain([minyValue,maxyValue])\r\n        .rangeRound([margin.top+innerHeight,margin.top])\r\n        .nice();\r\n\r\n    // main viewport\r\n    const g = svg\r\n        .append(\"g\")\r\n        .attr(\"width\",innerWidth)\r\n        .attr(\"height\",innerHeight);\r\n\r\n    // x axis\r\n    const xAxis = axisBottom(xScale)\r\n        .tickSize(innerHeight)\r\n        .tickPadding(10)\r\n        .ticks(xTicks);\r\n    // x axis labels\r\n    const xAxisG = g\r\n        .append(\"g\")\r\n        .call(xAxis)\r\n        .attr(\"transform\",`translate(0,${margin.top})`)\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart); // x axis numbers\r\n    xAxisG.select(\".domain\")\r\n        .remove();\r\n    xAxisG.selectAll(\"line\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiSilverChart); // x axis vertical lines\r\n    xAxisG.append(\"text\")\r\n        .attr(\"class\",\"axis-label\")\r\n        .attr(\"y\",innerHeight+margin.top+15)\r\n        .attr(\"x\",margin.left+(innerWidth/2))\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart) // x axis label\r\n        .text(xAxisLabel);\r\n\r\n    // y axis\r\n    const yAxis = axisLeft(yScale)\r\n        .ticks(5)\r\n        .tickFormat(d => format(\".1s\")(d).replace(\"G\",\"B\"))\r\n        .tickSize(innerWidth)\r\n        .tickPadding(5);\r\n    // y axis labels\r\n    const yAxisG = g\r\n        .append(\"g\")\r\n        .call(yAxis)\r\n        .attr(\"transform\",`translate(${innerWidth+margin.left},0)`)\r\n        .attr(\"class\",\"tick\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart); // y axis numbers\r\n    yAxisG.selectAll(\".domain\")\r\n        .remove();\r\n    yAxisG.selectAll(\"line\")\r\n        .attr(\"stroke\",bootstrapColors.thrubiSilverChart); // y axis horizontal lines\r\n    yAxisG.append(\"text\")\r\n        .attr(\"class\",\"axis-label\")\r\n        .attr(\"y\",-(innerWidth+margin.left-15))\r\n        .attr(\"x\",-innerHeight/2)\r\n        .attr(\"text-anchor\",\"middle\")\r\n        .attr(\"transform\",`rotate(-90)`)\r\n        .attr(\"stroke\",bootstrapColors.thrubiBlueChart) // y axis label\r\n        .text(yAxisLabel);\r\n\r\n    // scatter data\r\n    g.selectAll(\"circle\")\r\n        .data(ref)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"cy\",d => yScale(yValue(d)))\r\n        .attr(\"cx\",d => xScale(xValue(d)))\r\n        .attr(\"r\",circleRadius)\r\n        .attr(\"fill\",bootstrapColors.thrubiGoldChart)\r\n        .attr(\"stroke\",bootstrapColors.thrubiGoldChart)\r\n        .on(\"mouseover\",handleMouseOver)\r\n        .on(\"mouseout\",handleMouseOut); // data points: dots\r\n\r\n    // Create Event Handlers for mouse\r\n    function handleMouseOver(d,i) {  // Add interactivity\r\n        // Use D3 to select element, change color and size\r\n        select(this)\r\n            .attr(\"r\",circleRadius*2);\r\n\r\n        console.error(xScale(xValue(d)),width,((xScale(xValue(d))>(width/2))?\"end\":\"start\"));\r\n\r\n        // Specify where to put label of text\r\n        g.append(\"text\")\r\n            .attr(\"id\",\"t\"+d.x+\"-\"+d.y+\"-\"+i)  // Create an id for text so we can select it later for removing on mouseout\r\n            .attr(\"text-anchor\",((xScale(xValue(d))>(width/2))?\"end\":\"start\"))\r\n            .attr(\"x\",() => (xScale(xValue(d))+((xScale(xValue(d))>(width/2))?margin.right:-margin.left)))\r\n            .attr(\"y\",() => (yScale(yValue(d))-15))\r\n            .attr(\"fill\",bootstrapColors.thrubiBlueChart)\r\n            .text(() => (format(\".2s\")(yValue(d)).replace(\"G\",\"B\")+\" people earn $\"+format(\".2s\")(xValue(d)).replace(\"G\",\"B\")+\"+\"));  // Value of the text\r\n    }\r\n\r\n    function handleMouseOut(d,i) {\r\n        // Use D3 to select element, change color back to normal\r\n        select(this)\r\n            .attr(\"r\",circleRadius);\r\n\r\n        // Select text by id and then remove\r\n        select(\"#t\"+d.x+\"-\"+d.y+\"-\"+i)\r\n            .remove();  // Remove text location\r\n    }\r\n};\r\n","import React,{Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProfilePicture,uploadProfilePicture} from \"../actions/user\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _UserProfilePicture extends Component {\r\n    render() {\r\n        let refs = {localProfilePicture:null};\r\n        const {role,deactivated,profilePicture} = this.props;\r\n        const {deleteProfilePicture,uploadProfilePicture} = this.props;\r\n\r\n        return (\r\n            <div className=\"mb-2\">\r\n                <label for=\"profilePictureInput\" className=\"m-0 p-0\">\r\n                    <img className=\"mt-3 rounded-circle\" alt=\"profilePicture\" height=\"128\" width=\"128\"\r\n                         src={profilePicture?profilePicture:(process.env.PUBLIC_URL+\"/icons/\"+role+deactivated+\".png\")}/>\r\n                </label>\r\n                <input id=\"profilePictureInput\" className=\"d-none\" ref={input => refs.localProfilePicture = input}\r\n                       type=\"file\" onChange={() => uploadProfilePicture(refs.localProfilePicture)} />\r\n                {\r\n                    profilePicture\r\n                        ?<_ActionButton noMargin=\"small m-0 mt-2 p-0\" buttonType={\"nav-link border-0 text-secondary\"} action={deleteProfilePicture} text=\"Delete my profile picture\" />\r\n                        :<div className=\"small text-secondary m-0 p-0\">Click on the user icon to upload a profile picture</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    role:               state.client.user.role          ? \"admin\"        : \"user\",\r\n    deactivated:        state.client.user.deactivated   ? \"_deactivated\" : \"\",\r\n    profilePicture:     state.client.user.profilePicture,\r\n});\r\n\r\nconst UserProfilePicture = connect(mapStateToProps,{deleteProfilePicture,uploadProfilePicture})(_UserProfilePicture);\r\n\r\nexport default UserProfilePicture;","export const AMAZON_S3_MAX_PICTURE_SIZE=500000;\r\nexport const MIME_TYPE_JPEG=\"image/jpeg\";\r\nexport const MIME_TYPE_PNG=\"image/png\";","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass _UserDetails extends Component {\r\n    render() {\r\n        const {id,name,surname,email,document,deactivated,emailVerified,identityCertified} = this.props;\r\n        return (\r\n            <div className=\"text-center mb-2\">\r\n                <div className=\"text-primary d-inline-block p-0\">\r\n                    <b>{(name || surname) ? (name ? name : \"\") + \" \" + (surname ? surname : \"\") : \"No user data\"}</b>&nbsp;\r\n                </div>\r\n                <div className=\"text-secondary d-inline-block small\">uid#{id}&nbsp;<span\r\n                    className={\"badge \"+(deactivated?\"badge-danger\":\"badge-info\")}>{deactivated?\"Deactivated\":\"Active account\"}</span></div>\r\n                <div className=\"text-secondary small\">email: {email ? email : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(emailVerified?\"badge-info\":\"badge-danger\")}>{emailVerified>0?\"Email verified\":(emailVerified<0?\"Pending verification\":\"Not verified\")}</span></div>\r\n                <div className=\"text-secondary small\">document: {document ? document : \"not found\"}&nbsp;<span\r\n                    className={\"badge \"+(identityCertified>0?\"badge-info\":\"badge-danger\")}>{identityCertified>0?\"Identity certified\":(identityCertified<0?\"Pending certification\":\"Not certified\")}</span></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    id:                 state.client.user.id,\r\n    name:               state.client.user.name,\r\n    surname:            state.client.user.surname,\r\n    email:              state.client.user.email,\r\n    document:           state.client.user.document,\r\n    deactivated:        state.client.user.deactivated,\r\n    emailVerified:      state.client.user.emailVerified,\r\n    identityCertified:  state.client.user.identityCertified,\r\n});\r\n\r\nconst UserDetails = connect(mapStateToProps)(_UserDetails);\r\n\r\nexport default UserDetails;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport UserProfilePicture from './UserProfilePicture';\r\nimport UserDetails from './UserDetails';\r\n\r\nclass _UserView extends Component {\r\n    render() {\r\n        const {busy,loggedIn} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center\">\r\n                {\r\n                    busy ? <div>Dashboard loading...</div> :\r\n                        !loggedIn ? <div>User not logged in</div> :\r\n                            <div>\r\n                                <UserProfilePicture />\r\n                                <UserDetails />\r\n                            </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    loggedIn:  state.client.userAccess.loggedIn,\r\n    role: state.client.user.role,\r\n});\r\n\r\nconst UserView = connect(mapStateToProps)(_UserView);\r\n\r\nexport default UserView;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {activateUser,deactivateUser} from \"../actions/user\";\r\n\r\nconst _UserActivation = ({deactivated,activateUserBusy,activateUser,deactivateUser}) => {\r\n    return(\r\n        <Fragment>\r\n            {\r\n                activateUserBusy ? \"Please wait, activation request in progress...\" :\r\n                    deactivated ?\r\n                        <_ActionButton text=\"Request activation\" action={activateUser} buttonType=\"btn-primary\" />\r\n                        :\r\n                        <_ActionButton text=\"Deactivate my account\" action={deactivateUser} buttonType=\"btn-secondary\" />\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated: state.client.user.deactivated,\r\n    activateUserBusy: state.session.busy.action.activateUser,\r\n});\r\n\r\nconst UserActivation = connect(mapStateToProps,{activateUser,deactivateUser})(_UserActivation);\r\n\r\nexport default UserActivation;","import React, {Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {storeDetails,deleteDetails} from \"../actions/user\";\r\n\r\nconst _UserManageDetails = ({updateUserBusy,name,surname,email,document,storeDetails,deleteDetails}) => {\r\n    let refs = {name,surname,email};\r\n    let fieldClassName = \"form-control form-control-sm rounded-0\";\r\n    return(\r\n        <Fragment>\r\n            {\r\n                updateUserBusy ?\r\n                    \"Updating user data...\"\r\n                    :\r\n                    <Fragment>\r\n                        <input id=\"inputUserName\"     ref={input => refs.name = input}      type=\"text\" className={fieldClassName} placeholder={name?name:\"Enter name\"} />\r\n                        <input id=\"inputUserSurname\"  ref={input => refs.surname = input}   type=\"text\" className={fieldClassName} placeholder={surname?surname:\"Enter surname\"} />\r\n                        <input id=\"inputUserEmail\"    ref={input => refs.email = input}     type=\"text\" className={fieldClassName} placeholder={email?email:\"Enter email address\"} />\r\n                        <input id=\"inputUserDocument\" disabled                                                     type=\"text\" className={fieldClassName} placeholder={document?document:\"Identity not verified\"} />\r\n                        <_ActionButton text=\"Update my personal data\"  buttonType=\"btn-primary\" action={() => {\r\n                            let userDetails = {};\r\n                            if (refs.name.value)        userDetails[\"name\"]=refs.name.value;\r\n                            if (refs.surname.value)     userDetails[\"surname\"]=refs.surname.value;\r\n                            if (refs.email.value)       userDetails[\"email\"]=refs.email.value;\r\n                            storeDetails(userDetails,{overwrite:true});\r\n                        }}/>\r\n                        <_ActionButton text=\"Delete my personal data\" action={deleteDetails} buttonType=\"btn-secondary\"  />\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    updateUserBusy: state.session.busy.action.userDetails,\r\n    name:           state.client.user.name,\r\n    surname:        state.client.user.surname,\r\n    email:          state.client.user.email,\r\n    document:       state.client.user.document,\r\n});\r\n\r\nconst UserManageDetails = connect(mapStateToProps,{storeDetails,deleteDetails})(_UserManageDetails);\r\n\r\nexport default UserManageDetails;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {uploadDocument} from \"../actions/user\";\r\n\r\nclass _UserIdentity extends Component {\r\n    render() {\r\n        const {identityCertified,countryName} = this.props;\r\n        const {uploadDocument} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"m-3\">You are applying to become a Thrubi member in the following country: <b>{countryName}</b></div>\r\n                <_ActionButton text={identityCertified===0?\"Upload a document to start the identity certification procedure\":\"Thrubi is certifying your identity\"}\r\n                               disabled={identityCertified!==0} buttonType=\"btn-primary\" action={uploadDocument} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    identityCertified:  state.client.user.identityCertified,\r\n    countryName:        state.client.population.countryName,\r\n});\r\n\r\nconst UserIdentity = connect(mapStateToProps,{uploadDocument})(_UserIdentity);\r\n\r\nexport default UserIdentity;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {claim} from \"../actions/member\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Claim extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            claimProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationId,claimBusy,thrubiBlueEth,ccySymbol,exrate,claim} = this.props;\r\n\r\n        return(\r\n            <div className=\"claimItem\">\r\n                {\r\n                    busy ? \"Claim loading...\" :\r\n                        populationId === -1 ? \"Please select a population, first.\" :\r\n                            claimBusy ? \"Busy processing claim\" :\r\n                                <div className=\"text-primary\">\r\n                                    {\r\n                                        !this.state.claimProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Fees will be deducted to pay for the blockchain transaction.\r\n                                                    The remaining Ξ will be credited in full, values in { ccySymbol } are just an indication.\r\n                                                </div>\r\n                                                <div className=\"container\">\r\n                                                    <_CcyRow text=\"You can claim\"             bold={false} value={thrubiBlueEth} ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Claimable in \"+ccySymbol} bold={false} value={(thrubiBlueEth * exrate)} ccySymbol={ccySymbol} />\r\n\r\n                                                </div>\r\n                                                <_ActionButton action={claim} disabled={!thrubiBlueEth}\r\n                                                               buttonType={\"btn-\"+(thrubiBlueEth?\"primary\":\"light\")}\r\n                                                               text={thrubiBlueEth?(\"Claim your \" +thrubiBlueEth.toFixed(2) + \" Ξ\"):\"Nothing to claim\"}/>\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton\r\n                                        disabled={((!thrubiBlueEth)&&(!this.state.claimProcedureActive))}\r\n                                        buttonType={\"btn-\"+(this.state.claimProcedureActive?\"\":\"outline-\")+\"primary\"+(thrubiBlueEth?\" active\":\"\")}\r\n                                        text={(this.state.claimProcedureActive?\"Close\":(thrubiBlueEth?\"Activate claim procedure\":\"Nothing to claim\"))}\r\n                                        action={() => {this.setState({claimProcedureActive: !this.state.claimProcedureActive});}} />\r\n                                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.claim,\r\n    populationId:       state.client.population.id,\r\n    claimBusy:          state.session.busy.action.claim,\r\n    thrubiBlueEth:      state.client.member.thrubiBlueEth,\r\n    ccySymbol:          state.client.population.ccySymbol,\r\n    exrate:             state.global.market.exrate,\r\n});\r\n\r\nconst Claim = connect(mapStateToProps,{claim})(_Claim);\r\n\r\nexport default Claim;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {advancedMode,viewHistory} from \"../actions/member\";\r\n\r\nclass _MemberOptions extends Component {\r\n    render() {\r\n        const {optionAdvancedMode,optionViewHistory} = this.props;\r\n        const {advancedMode,viewHistory} = this.props;\r\n        const {color} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <_ActionButton noMargin={\"small m-0 mt-2 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => advancedMode(!optionAdvancedMode)} text={optionAdvancedMode?\"Show less details\":\"Show more details...\"}/>\r\n                {\r\n                    !optionAdvancedMode ? \"\"\r\n                    : <_ActionButton noMargin={\"small m-0 p-0\"} buttonType={\"nav-link border-0 text-\"+color} action={() => viewHistory(!optionViewHistory)}  text={optionViewHistory?\"Hide history\":\"View history...\"} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    populationId: state.client.population.id,\r\n});\r\n\r\nconst MemberOptions = connect(mapStateToProps,{advancedMode,viewHistory})(_MemberOptions);\r\n\r\nexport default MemberOptions;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberBlue = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container-fluid\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Next month ₮B\"        bold={false} value={ member.thrubiBlueNext}         ccySymbol=\"₮B\" />\r\n                    <_CcyRow text=\"Claimable Ξ\"                 bold={false} value={ member.thrubiBlueEth}          ccySymbol=\"Ξ\" />\r\n                    <_CcyRow text=\"₮B awards\"                   bold={false} value={ member.thrubiBlueAward}        ccySymbol={ccySymbol} />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n            :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Blue ₮B\"    bold={false} value={ member.thrubiBlue}             ccySymbol=\"₮B\" />\r\n                    <_CcyRow text={\"Claimable in \"+ccySymbol}   bold={true}  value={(member.thrubiBlueEth*exrate)}  ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                <Fragment>\r\n                    <_CcyRow text=\"Total awards\"                bold={false} value={member.thrubiBlueAwardTotal}    ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Total claimed\"               bold={false} value={member.thrubiBlueClaimTotal}    ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        <MemberOptions color=\"primary\"/>\r\n    </div>\r\n);\r\n\r\nexport default _MemberBlue;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport Claim from \"./Claim\";\r\nimport _MemberBlue from \"./_MemberBlue\";\r\n\r\nclass _ThrubiBlue extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiBlue)&&!this.state.manualPanel) this.setState({showPanel: (member.thrubiBlue)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-primary\">\r\n                <_ActionButton text=\"Thrubi Blue\" buttonType={\"btn-outline-primary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberBlue\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Claim />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiBlue = connect(mapStateToProps)(_ThrubiBlue);\r\n\r\nexport default ThrubiBlue;","import React, {Component, Fragment} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {transform} from \"../actions/blockchain_ethereum\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _Transform extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transformEthValue: 0,\r\n            transformProcedureActive: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {busy,transformBusy,populationId,exrate,ccySymbol,thrubiSilver,thrubiPriceSilver,thrubiFees,transform} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    busy ? \"Transform loading...\" :\r\n                        populationId===-1 ? \"Please select a population, first.\" :\r\n                            transformBusy ? \"Busy processing transform request\" :\r\n                                <Fragment>\r\n                                    {\r\n                                        !this.state.transformProcedureActive ? \"\" :\r\n                                            <Fragment>\r\n                                                <div className=\"small text-justify\">\r\n                                                    Blockchain transaction costs will be paid by you upon submitting the transaction.\r\n                                                    Final transformed $₮ will depend upon Ξ exchange rates and $₮ price when your transaction is accepted.\r\n                                                    Any excess Ξ that you transform will be credited on the account and used whenever $₮ becomes available.\r\n                                                </div>\r\n                                                <div className=\"text-secondary container\">\r\n                                                    {/*<_CcyRow text=\"Your Ξ balance\"\r\n                                                             bold={false}\r\n                                                             value=0 // add a worker that constantly checks Ξ balance from blockchain for account\r\n                                                             ccySymbol=\"Ξ\" />*/}\r\n                                                    <_CcyRow text=\"Ξ to spend to transform\"\r\n                                                             bold={false}\r\n                                                             value={this.state.transformEthValue}\r\n                                                             ccySymbol=\"Ξ\" />\r\n                                                    <_CcyRow text={\"Current value in \"+ccySymbol}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text={\"Thrubi fees (\"+(thrubiFees*100).toFixed(1)+\"%)\"}\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*thrubiFees}\r\n                                                             ccySymbol={ccySymbol} />\r\n                                                    <_CcyRow text=\"You can transform\"\r\n                                                             bold={false}\r\n                                                             value={(this.state.transformEthValue*exrate)*(1-thrubiFees)*(!thrubiPriceSilver?0:(1/thrubiPriceSilver))}\r\n                                                             ccySymbol=\"$₮\" />\r\n                                                </div>\r\n                                                <input id=\"transformEth\" ref={input => this.transformEthRef = input} type=\"text\" className=\"form-control form-control-sm rounded-0\"\r\n                                                           placeholder={this.transformEthValue} required\r\n                                                           onChange={(action) => {\r\n                                                               action.preventDefault();\r\n                                                               let newValue = parseFloat(this.transformEthRef.value);\r\n                                                               if (!newValue) newValue=0;\r\n                                                               this.setState({transformEthValue: newValue});\r\n                                                           }}/>\r\n                                                <_ActionButton buttonType={\"btn-\"+(this.state.transformEthValue?\"primary\":\"light\")}\r\n                                                               disabled={!this.state.transformEthValue}\r\n                                                               action={transform}\r\n                                                               payload={this.state.transformEthValue}\r\n                                                               text={this.state.transformEthValue?\"Transform \"+this.state.transformEthValue.toFixed(2)+\" Ξ\":\"Insert an Ξ amount\"} />\r\n                                            </Fragment>\r\n                                    }\r\n                                    <_ActionButton disabled={(!thrubiSilver)&&(!this.state.transformProcedureActive)}\r\n                                                   buttonType={\"btn-\"+(this.state.transformProcedureActive?\"\":\"outline-\")+\"secondary\"+(thrubiSilver?\" active\":\"\")}\r\n                                                   text={(this.state.transformProcedureActive?\"Close\":(thrubiSilver?\"Activate transform procedure\":\"Nothing to transform\"))}\r\n                                                   action={() => this.setState({transformProcedureActive: !this.state.transformProcedureActive})} />\r\n                                </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.transform,\r\n    transformBusy: state.session.busy.action.transform,\r\n    populationId: state.client.population.id,\r\n    thrubiSilver: state.client.member.thrubiSilver,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiFees: state.client.population.thrubiFees,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n});\r\n\r\nconst Transform = connect(mapStateToProps,{transform})(_Transform);\r\n\r\nexport default Transform;","import React,{Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport MemberOptions from \"./MemberOptions\";\r\n\r\nconst _MemberSilver = ({\r\n    ccySymbol,\r\n    member,\r\n    exrate,\r\n    thrubiPriceSilver,\r\n    thrubiPriceGold,\r\n    optionViewHistory,\r\n    optionAdvancedMode,\r\n}) => (\r\n    <div className=\"container\">\r\n        {\r\n            optionAdvancedMode ?\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Next month ₮$\"           bold={false} value={ member.thrubiSilverNext} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Remaining Ξ\"             bold={false} value={ member.thrubiSilverEth} ccySymbol={\"Ξ\"} />\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <_CcyRow text=\"My Thrubi Silver ₮$\"     bold={true}  value={ member.thrubiSilver} ccySymbol={\"₮S\"} />\r\n                    <_CcyRow text=\"Conversion to gold cost\" bold={false} value={(member.thrubiSilver*thrubiPriceSilver)} ccySymbol={ccySymbol} />\r\n                    <_CcyRow text=\"Gold value\"              bold={false} value={(member.thrubiSilver*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n                </Fragment>\r\n        }\r\n        {\r\n            !optionViewHistory ? \"\" :\r\n                    <_CcyRow text=\"Total transformed\"       bold={false} value={ member.thrubiSilverTransformTotal} ccySymbol={ccySymbol} />\r\n        }\r\n        <MemberOptions color=\"secondary\" />\r\n    </div>\r\n);\r\n\r\nexport default _MemberSilver;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Transform from \"./Transform\";\r\nimport _MemberSilver from \"./_MemberSilver\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiSilver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiSilver)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiSilver)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceSilver,thrubiPriceGold,optionViewHistory,optionAdvancedMode} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-secondary\">\r\n                <_ActionButton text=\"Thrubi Silver\" buttonType={\"btn-outline-secondary\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberSilver\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceSilver={thrubiPriceSilver}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                    optionViewHistory={optionViewHistory}\r\n                                    optionAdvancedMode={optionAdvancedMode}\r\n                                />\r\n                                <Transform />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceSilver: state.client.population.thrubiPriceSilver,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n    optionViewHistory: state.client.user.optionViewHistory,\r\n    optionAdvancedMode: state.client.user.optionAdvancedMode,\r\n});\r\n\r\nconst ThrubiSilver = connect(mapStateToProps)(_ThrubiSilver);\r\n\r\nexport default ThrubiSilver;","import React, {Fragment} from 'react';\r\nimport _CcyRow from './_CcyRow';\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nconst _MemberGold = ({\r\n    ccySymbol,\r\n    member,\r\n    thrubiPriceGold,\r\n}) => (\r\n    <Fragment>\r\n        <div className=\"container-fluid\">\r\n            <_CcyRow text=\"My Thrubi Gold\"      bold={true}  value={ member.thrubiGold} ccySymbol={\"₮G\"} />\r\n            <_CcyRow text=\"Market value\"        bold={false} value={(member.thrubiGold*thrubiPriceGold)} ccySymbol={ccySymbol} />\r\n        </div>\r\n        <_ActionButton action={() => {}} text=\"Find gold Thrubi marketplace\" buttonType=\"btn-outline-success\" />\r\n    </Fragment>\r\n);\r\n\r\nexport default _MemberGold;\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _MemberGold from \"./_MemberGold\";\r\nimport _ActionButton from \"./_ActionButton\";\r\n\r\nclass _ThrubiGold extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showPanel: false,\r\n            manualPanel: false,\r\n        };\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        const {member} = this.props;\r\n        if (this.state.showPanel===(!member.thrubiGold)&&!this.state.manualPanel) this.setState({showPanel: (!!member.thrubiGold)});\r\n    }\r\n\r\n    render() {\r\n        const {busy,member,ccySymbol,exrate,thrubiPriceGold} = this.props;\r\n\r\n        return(\r\n            <div className=\"text-center text-success\">\r\n                <_ActionButton text=\"Thrubi Gold\" buttonType={\"btn-outline-success\"+(this.state.showPanel?\" active\":\"\")}\r\n                               action={() => { this.setState({manualPanel: true}); this.setState({showPanel: !this.state.showPanel});}} />\r\n                {\r\n                    !this.state.showPanel ? \"\" :\r\n                        busy ? \"Member loading...\" :\r\n                            <Fragment>\r\n                                <_MemberGold\r\n                                    member={member}\r\n                                    ccySymbol={ccySymbol}\r\n                                    exrate={exrate}\r\n                                    thrubiPriceGold={thrubiPriceGold}\r\n                                />\r\n                            </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy: state.session.busy.component.dashboard,\r\n    member: state.client.member,\r\n    ccySymbol: state.client.population.ccySymbol,\r\n    exrate: state.global.market.exrate,\r\n    thrubiPriceGold: state.client.population.thrubiPriceGold,\r\n});\r\n\r\nconst ThrubiGold = connect(mapStateToProps)(_ThrubiGold);\r\n\r\nexport default ThrubiGold;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectPopulation,deselectPopulation} from \"../actions/population\";\r\n\r\nclass _Populations extends Component {\r\n    render() {\r\n        const {populations,populationId,filter} = this.props;\r\n        const {selectPopulation,deselectPopulation} = this.props;\r\n\r\n        return (\r\n            populations\r\n                .filter(p => (\r\n                    !filter\r\n                    || p.countryId.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.countryName.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.ccyId.toLowerCase().includes(filter.toLowerCase())\r\n                    || p.ccyName.toLowerCase().includes(filter.toLowerCase())\r\n                ))\r\n                .map((population,index) => {\r\n                return (\r\n                    <div key={index} className=\"bg-light py-0 px-2 p-lg-0 my-1\">\r\n                        <button\r\n                            className={\"btn btn-sm m-0 p-0 rounded-0 border-0 btn-block btn-outline-primary\"+\r\n                                ((populationId===population.populationId)?\" active\":\"\")}\r\n                            onClick={(populationId===population.populationId) ? (() => deselectPopulation(population)) : (() => selectPopulation(population))}\r\n                        >\r\n                            <div className=\"d-none d-lg-flex container-fluid row p-3 m-0\">\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.countryId}</div>\r\n                                <div className=\"col-lg-5 col-md-10 p-0 m-0 text-left\"> {population.countryName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccyId}</div>\r\n                                <div className=\"col-lg-4 col-md-8  p-0 m-0 text-left\">{population.ccyName}</div>\r\n                                <div className=\"col-lg-1 col-md-2  p-0 m-0 text-center\">{population.ccySymbol}</div>\r\n                            </div>\r\n                            <div className=\"d-block d-lg-none my-3 py-3 text-center\">\r\n                                {population.countryName} ({population.countryId}) - {population.ccyName} ({population.ccyId} {population.ccySymbol})\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                )\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:        state.client.user.deactivated,\r\n    populationId:       state.client.population.id,\r\n    populations:        state.client.population.populations,\r\n    filter:             state.client.population.filter,\r\n});\r\n\r\nconst Populations = connect(mapStateToProps,{selectPopulation,deselectPopulation})(_Populations);\r\n\r\nexport default Populations;","import React, {Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Populations from \"./Populations\";\r\nimport {fetchPopulations} from \"../actions/population\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {createMember} from \"../actions/member\";\r\nimport {changeFilter} from \"../actions/population\";\r\n\r\nclass _PopulationSelect extends Component {\r\n    componentDidMount() {\r\n        this.reload();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.reload();\r\n    };\r\n\r\n    reload() {\r\n        const {userId,populationsBusy,populationsNotAvailable} = this.props;\r\n        const {fetchPopulations} = this.props;\r\n        if ((!populationsBusy)&&(populationsNotAvailable)) fetchPopulations(userId);\r\n    }\r\n\r\n    render() {\r\n        const {busy,populationsBusy,populationsNotAvailable,populationId} = this.props;\r\n        const {createMember,changeFilter} = this.props;\r\n        let countryFilterXs,countryFilterLg;\r\n\r\n        return (\r\n            busy ? \"Loading...\" :\r\n                populationsBusy ? \"User populations loading...\" :\r\n                    populationsNotAvailable ? \"No populations found...\" :\r\n                        <Fragment>\r\n                            <div className=\"d-none d-lg-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center wMin800\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 wMin800 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={input => countryFilterLg = input}\r\n                                               onChange={() => changeFilter(countryFilterLg.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search by country or currency\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex d-lg-none flex-column flex-grow-1 align-items-center\">\r\n                                <div className=\"m-3 d-flex flex-column flex-grow-1 align-items-center\">\r\n                                    <div className=\"d-flex flex-column flex-grow-1 bg-light\">\r\n                                        <div className=\"text-center bg-primary text-light p-2\">Please select your country and currency from the list below and confirm:</div>\r\n                                        <input ref={input => countryFilterXs = input}\r\n                                               onChange={() => changeFilter(countryFilterXs.value)}\r\n                                               type=\"text\" className=\"form-control form-control-sm rounded-0 my-3 p-3\"\r\n                                               placeholder=\"Search by country or currency\"/>\r\n                                        <Populations />\r\n                                        <_ActionButton action={createMember} payload={populationId} disabled={!populationId} text=\"Confirm\" noMargin=\"p-2\" buttonType=\" btn-primary\" />\r\n                                    </div>\r\n                                    <a className=\"nav-link text-primary text-center\" href=\"mailto:info@thrubi.com\">Not found? Let us know: info@thrubi.com</a>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:                       state.session.busy.component.userMenu,\r\n    populationsBusy:            state.session.busy.action.populations,\r\n    populationsNotAvailable:    (!state.client.population.populations || !state.client.population.populations.length),\r\n    userId:                     state.client.user.id,\r\n    populationId:               state.client.population.id,\r\n});\r\n\r\nconst PopulationSelect = connect(mapStateToProps,{fetchPopulations,createMember,changeFilter})(_PopulationSelect);\r\n\r\nexport default PopulationSelect;","import {processRequest} from \"./server\";\r\nimport {deselectPopulation} from \"./population\";\r\nimport {emitFlare} from \"./flare\";\r\nimport {requestType} from \"../config/http\";\r\nimport flareBook from \"../config/flare\";\r\nimport actionType,{busyPayload} from \"../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../config/server\";\r\n\r\nexport const fetchCcys = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.CCY_LIST,null)(dispatch,getState)\r\n        .then ((ccys) => {\r\n            dispatch({type:actionType.RECEIVE_CCYS,payload:{ccys}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const fetchCountries = () => async (dispatch,getState) => {\r\n    processRequest(requestType.GET,endpoint.COUNTRY_LIST,null)(dispatch,getState)\r\n        .then ((countries) => {\r\n            dispatch({type:actionType.RECEIVE_COUNTRIES,payload:{countries}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const selectCcy = (ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_CCY,payload:{ccyId}});\r\n};\r\n\r\nexport const deselectCcy = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_CCY,payload:{}});\r\n};\r\n\r\n\r\nexport const selectCountry = (countryId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SELECT_COUNTRY,payload:{countryId}});\r\n};\r\n\r\nexport const deselectCountry = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.DESELECT_COUNTRY,payload:{}});\r\n};\r\n\r\n\r\nexport const populationExists = (countryId,ccyId) => async (dispatch,getState) => {\r\n    return processRequest(requestType.GET,endpoint.POPULATION_EXISTS+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:result.exists}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)));\r\n};\r\n\r\nexport const createPopulation = (countryId,ccyId) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CREATE+\"/\"+countryId+\"/\"+ccyId,null)(dispatch,getState)\r\n        .then (result => {\r\n            dispatch({type:actionType.POPULATION_EXISTS,payload:{exists:1}});\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const deletePopulation = () => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_DELETE+\"/\"+getState().client.population.id,null)(dispatch,getState)\r\n        .then (result => {\r\n            deselectPopulation()(dispatch,getState);\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\nexport const tunePopulation = (brake,warperMincome,warperEquality) => async (dispatch,getState) => {\r\n    dispatch({type:actionType.SET_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS});\r\n    return processRequest(requestType.POST,endpoint.POPULATION_CONFIG_CHANGE+\"/\"+getState().client.population.id,{brake,warperMincome,warperEquality},null)(dispatch,getState)\r\n        .then (result => {})\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,error)))\r\n        .then (() => dispatch({type:actionType.SET_NOT_BUSY,payload:busyPayload.BUSY_ACTION_POPULATIONS}));\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCountries,selectCountry,deselectCountry} from \"../actions/adminMenu\";\r\n\r\nclass _Countries extends Component {\r\n    componentDidMount() {\r\n        const {fetchCountries} = this.props;\r\n        fetchCountries();\r\n    }\r\n\r\n    render() {\r\n        const {countries,countryId} = this.props;\r\n        const {selectCountry,deselectCountry} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    countries.map((country,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"country p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (countryId===country.countryId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                    onClick={(countryId===country.countryId)\r\n                                        ?((event) => {deselectCountry();})\r\n                                        :((event) => {selectCountry(country.countryId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-4 p-0 m-0 text-center\">\r\n                                            {(countryId===country.countryId)?\"Selected\":\"Select #\"+country.countryId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{country.countryId}</div>\r\n                                        <div className=\"small col-lg-6 p-0 m-0 text-left\">{country.countryName}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countries: state.global.country.countries,\r\n    countryId: state.global.country.id,\r\n});\r\n\r\nconst Countries = connect(mapStateToProps,{fetchCountries,selectCountry,deselectCountry})(_Countries);\r\n\r\nexport default Countries;","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchCcys,selectCcy,deselectCcy} from \"../actions/adminMenu\";\r\n\r\nclass _Ccys extends Component {\r\n    componentDidMount() {\r\n        const {fetchCcys} = this.props;\r\n        fetchCcys();\r\n    }\r\n\r\n    render() {\r\n        const {ccys,ccyId} = this.props;\r\n        const {selectCcy,deselectCcy} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                {\r\n                    ccys.map((ccy,index) =>{\r\n                        return (\r\n                            <div key={index} className=\"ccy p-0\">\r\n                                <button\r\n                                    className={\"btn btn-sm p-0 btn-block btn-\"+\r\n                                    (ccyId===ccy.ccyId\r\n                                            ?\"light\"\r\n                                            :\"primary\")}\r\n                                    value={(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                    onClick={(ccyId===ccy.ccyId)\r\n                                        ?((event) => {deselectCcy();})\r\n                                        :((event) => {selectCcy(ccy.ccyId);})\r\n                                    }\r\n                                >\r\n                                    <div className=\"container-fluid row p-0 m-0\">\r\n                                        <div className=\"small col-lg-3 p-0 m-0 text-center\">\r\n                                            {(ccyId===ccy.ccyId)?\"Selected\":\"Select #\"+ccy.ccyId}\r\n                                        </div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccyId}</div>\r\n                                        <div className=\"small col-lg-5 p-0 m-0 text-left\">{ccy.ccyName}</div>\r\n                                        <div className=\"small col-lg-2 p-0 m-0 text-center\">{ccy.ccySymbol}</div>\r\n                                    </div>\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ccys: state.global.ccy.ccys,\r\n    ccyId: state.global.ccy.id,\r\n});\r\n\r\nconst Ccys = connect(mapStateToProps,{fetchCcys,selectCcy,deselectCcy})(_Ccys);\r\n\r\nexport default Ccys;","import React, {Component, Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Countries from \"./Countries\";\r\nimport Ccys from \"./Ccys\";\r\nimport {populationExists,createPopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationAdd extends Component {\r\n    componentDidMount() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.verifyExists();\r\n    }\r\n\r\n    verifyExists() {\r\n        const {countryId,ccyId} = this.props;\r\n        const {populationExists} = this.props;\r\n        if (countryId&&ccyId) populationExists(countryId,ccyId);\r\n    }\r\n\r\n    render() {\r\n        const {countryId,ccyId,exists} = this.props;\r\n        const {createPopulation} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n\r\n                <button\r\n                    className={\"btn btn-sm p-0 btn-block btn-\"+(((countryId===\"\")||(ccyId===\"\"))?\"light\":(exists?\"secondary\":\"primary\"))}\r\n                    value={((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                    disabled={(countryId===\"\")||(ccyId===\"\")||exists}\r\n                    onClick={(event) => {createPopulation(countryId,ccyId);}}\r\n                >\r\n                    {((countryId===\"\")||(ccyId===\"\"))?\"Please select country and currency\":(exists?\"The selected population already exists\":\"Create population: \"+countryId+\" \"+ccyId)}\r\n                </button>\r\n                <br />\r\n                <div className=\"container-fluid row p-0 m-0\">\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Countries />\r\n                    </div>\r\n                    <div className=\"small col-lg-6 p-0 m-0 text-center\">\r\n                        <Ccys />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    countryId: state.global.country.id,\r\n    ccyId: state.global.ccy.id,\r\n    exists: state.client.population.exists,\r\n});\r\n\r\nconst PopulationAdd = connect(mapStateToProps,{populationExists,createPopulation})(_PopulationAdd);\r\n\r\nexport default PopulationAdd;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport {deletePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <_ActionButton action={deletePopulation} text=\"Delete Population\" buttonType=\"btn-secondary\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst PopulationDelete = connect(mapStateToProps,{deletePopulation})(_PopulationDelete);\r\n\r\nexport default PopulationDelete;\r\n\r\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _CcyRow from \"./_CcyRow\";\r\nimport {tunePopulation} from \"../actions/adminMenu\";\r\n\r\nclass _PopulationTune extends Component {\r\n\r\n    render() {\r\n        let newBrake;\r\n        let newWarperMincome;\r\n        let newWarperEquality;\r\n\r\n        const {brake,mincome,equality,warperMincome,warperEquality,tunePopulation} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"container\">\r\n                    <_CcyRow text=\"mincome\" bold={false} value={mincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"equality\" bold={false} value={equality} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"brake\" bold={false} value={brake} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperMincome\" bold={false} value={warperMincome} ccySymbol={\"\"}/>\r\n                    <_CcyRow text=\"warperEquality\" bold={false} value={warperEquality} ccySymbol={\"\"}/>\r\n                </div>\r\n                <form onSubmit={async (event) => {\r\n                    event.preventDefault();\r\n                    tunePopulation(newBrake.value, newWarperMincome.value, newWarperEquality.value);\r\n                }}>\r\n                    <input id=\"newBrake\" ref={input => newBrake = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={brake.toFixed(2)} required/>\r\n                    <input id=\"newWarperMincome\" ref={input => newWarperMincome = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperMincome.toFixed(2)} required/>\r\n                    <input id=\"newWarperEquality\" ref={input => newWarperEquality = input}\r\n                           type=\"text\" className=\"form-control form-control-sm\"\r\n                           placeholder={warperEquality.toFixed(2)} required/>\r\n                    <input className=\"btn btn-sm p-0 btn-block btn-primary\" type=\"submit\" value=\"Change configuration\"/>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    mincome: state.client.population.mincome,\r\n    equality: state.client.population.equality,\r\n    brake: state.client.population.brake,\r\n    warperMincome: state.client.population.warperMincome,\r\n    warperEquality: state.client.population.warperEquality,\r\n});\r\n\r\nconst PopulationTune = connect(mapStateToProps,{tunePopulation})(_PopulationTune);\r\n\r\nexport default PopulationTune;","import React,{Component,Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport _ActionButton from \"./_ActionButton\";\nimport {chooseGuestMenu} from \"../actions/guest\";\nimport {guestMenuOption} from \"../config/guest\";\n\n\nclass _GuestMenu extends Component {\n    render() {\n        const {selected} = this.props;\n        const {chooseGuestMenu} = this.props;\n        return (\n            <div className=\"container-fluid m-0 bg-white\">\n                <div className=\"row mr-lg-0 p-0\">\n                    <div className=\"col-md-6 p-0 m-0 pr-md-2 navbar-light\">\n                        <_ActionButton action={() => chooseGuestMenu(guestMenuOption.FAQ)}\n                                       buttonType={\"btn-outline-primary\"+(selected===guestMenuOption.FAQ?\" active\":\"\")}\n                                       text=\"Learn more about Thrubi\" />\n                    </div>\n                    <div className=\"col-md-6 p-0 m-0 pl-md-2 navbar-light\">\n                        <_ActionButton action={() => chooseGuestMenu(guestMenuOption.INFOGRAPHICS)}\n                                       buttonType={\"btn-outline-success\"+(selected===guestMenuOption.INFOGRAPHICS?\" active\":\"\")}\n                                       text=\"Thrubi infographics\" />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    selected: state.client.guest.guestMenuOption,\n});\n\nconst GuestMenu = connect(mapStateToProps,{chooseGuestMenu})(_GuestMenu);\n\nexport default GuestMenu;\n\n\n","import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport Chart from \"./Chart\";\n\n\nclass _GuestInfographics extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid m-0 p-3 bg-white\">\n                <br />\n                Thrubi uses the income distributions shown here to build models to calculate individual Universal Basic Income.\n                <div className=\"text-center py-3\">\n                    <br />\n                    <b>Income distribution, United States of America (USA), 2018. Public data: IRS.gov.</b>\n                    <Chart />\n                    <br />\n                    <span className=\"small\"><i>More countries coming soon</i></span>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    guestSubscribed: state.client.guest.subscribed,\n});\n\nconst GuestInfographics = connect(mapStateToProps,{})(_GuestInfographics);\n\nexport default GuestInfographics;\n\n\n","import React,{Component,Fragment} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport MemberBar from \"./MemberBar\";\r\nimport Auth from \"./Auth\";\r\nimport GuestFaq from \"./GuestFaq\";\r\nimport Chart from \"./Chart\";\r\nimport UserView from \"./UserView\";\r\nimport UserActivation from \"./UserActivation\";\r\nimport UserManageDetails from \"./UserManageDetails\";\r\nimport UserIdentity from \"./UserIdentity\";\r\nimport ThrubiBlue from \"./ThrubiBlue\";\r\nimport ThrubiSilver from \"./ThrubiSilver\";\r\nimport ThrubiGold from \"./ThrubiGold\";\r\nimport PopulationSelect from \"./PopulationSelect\";\r\nimport PopulationAdd from \"./PopulationAdd\";\r\nimport _ActionButton from \"./_ActionButton\";\r\nimport PopulationDelete from \"./PopulationDelete\";\r\nimport PopulationTune from \"./PopulationTune\"\r\nimport {close} from \"../actions/user\";\r\nimport \"./styles/User.scss\";\r\nimport GuestMenu from \"./GuestMenu\";\r\nimport {guestMenuOption} from \"../config/guest\";\r\nimport GuestInfographics from \"./GuestInfographics\";\r\n\r\nclass _User extends Component {\r\n    render() {\r\n        const {busy,optionUserMenu,loggedIn,auth,identityCertified,isMember,member,guestOption} = this.props;\r\n        const {close} = this.props;\r\n\r\n        return(\r\n            <div className=\"container-fluid row p-0 m-0 mb-5\">\r\n                {\r\n                    busy ? \"User loading...\" :\r\n                        <Fragment>\r\n                            <div className=\"col-lg-3 navbar-light\">\r\n                                {loggedIn ? <UserView /> : \"\"}\r\n                                <Auth />\r\n                                {loggedIn && optionUserMenu===\"USER\" ?\r\n                                    <div>\r\n                                        <UserManageDetails />\r\n                                        <UserActivation />\r\n                                        <_ActionButton text=\"Close my account\" action={close} buttonType=\"btn-outline-red\" />\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"col-lg-9 navbar-light p-0\">\r\n                                {\r\n                                    !loggedIn ?\r\n                                        <div className=\"\">\r\n                                            <GuestMenu />\r\n                                            { guestOption!==guestMenuOption.FAQ ? \"\" : <GuestFaq /> }\r\n                                            { guestOption!==guestMenuOption.INFOGRAPHICS ? \"\" : <GuestInfographics /> }\r\n                                        </div>\r\n                                        :\r\n                                        !isMember ?\r\n                                            <Fragment>\r\n                                                <PopulationSelect />\r\n                                                { !auth ? \"\" : <PopulationAdd /> }\r\n                                            </Fragment>\r\n                                            :\r\n                                            <div className=\"bg-light mr-2 ml-2 ml-lg-0\">\r\n                                                <MemberBar />\r\n                                                {\r\n                                                    identityCertified<=0 ?\r\n                                                        <div>\r\n                                                            <UserIdentity />\r\n                                                        </div>\r\n                                                        :\r\n                                                        <Fragment>\r\n                                                            {\r\n                                                                !auth ?\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"container-fluid row p-0 m-0\">\r\n                                                                            <div className=\"col-lg-4 thrubiBlue navbar-light\">\r\n                                                                                { (member.thrubiBlue || member.thrubiBlueNext || member.thrubiBlueEth\r\n                                                                                    || member.thrubiBlueAward || member.thrubiBlueAwardTotal || member.thrubiBlueClaimTotal)\r\n                                                                                    ? <ThrubiBlue /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiSilver navbar-light\">\r\n                                                                                { (member.thrubiSilver || member.thrubiSilverNext || member.thrubiSilverEth\r\n                                                                                    || member.thrubiSilverTransformTotal)\r\n                                                                                    ? <ThrubiSilver /> : \"\"}\r\n                                                                            </div>\r\n                                                                            <div className=\"col-lg-4 thrubiGold navbar-light\">\r\n                                                                                { (member.thrubiGold)\r\n                                                                                    ? <ThrubiGold /> : \"\"}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                    :\r\n                                                                    <Fragment>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationDelete/>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-lg-4 navbar-light\">\r\n                                                                            <PopulationTune />\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                            }\r\n                                                        </Fragment>\r\n                                                }\r\n                                            </div>\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    busy:               state.session.busy.component.user,\r\n    optionUserMenu:     state.client.user.optionUserMenu,\r\n    role:               state.client.user.role,\r\n    loggedIn:           state.client.userAccess.loggedIn,\r\n    populationId:       state.client.population.id,\r\n    isMember:           state.client.member.isMember,\r\n    member:             state.client.member,\r\n    identityCertified:  state.client.user.identityCertified,\r\n    guestOption:        state.client.guest.guestMenuOption,\r\n});\r\n\r\nconst User = connect(mapStateToProps,{close})(_User);\r\n\r\nexport default User;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst _GlobalStatsCountryCcy = ({\r\n    nCcy,\r\n    nCountry,\r\n}) => (\r\n    <span>\r\n        Thrubi is launching in {nCountry} {nCountry===1?\"country\":\"countries\"} and {nCcy} {nCcy===1?\"currency\":\"currencies\"}.\r\n    </span>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    nCountry:   state.global.stats.nCountry,\r\n    nCcy:       state.global.stats.nCcy,\r\n});\r\n\r\nconst GlobalStatsCountryCcy = connect(mapStateToProps,{})(_GlobalStatsCountryCcy);\r\n\r\nexport default GlobalStatsCountryCcy;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport GlobalStatsUsers from \"./GlobalStatsUsers\";\r\nimport GlobalStatsCountryCcy from \"./GlobalStatsCountryCcy\";\r\nimport EthBadges from \"./EthBadges\";\r\n\r\nconst _Footer = ({ethNetwork,ethAddress}) => (\r\n    <div className=\"bg-light flex-grow-1\"\r\n         style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/logo.png\",\r\n             backgroundSize: \"contain\",\r\n             backgroundPosition: \"center\",\r\n             backgroundRepeat:\"no-repeat\",\r\n             backgroundBlendMode:\"color-dodge\"}}>\r\n        <div className=\"container row m-0 p-0 p-lg-4 footer\">\r\n            <div className=\"col-lg-4 m-0 px-0 py-2 py-lg-3 text-center text-lg-left\">\r\n                <div className=\"d-block d-lg-none mt-3\">\r\n                    <GlobalStatsUsers />\r\n                    <span className=\"small d-block\"><GlobalStatsCountryCcy/></span>\r\n                </div>\r\n                <p className=\"m-0 p-0 mt-3 mt-lg-0\">Public data provided by:</p>\r\n                <a href=\"https://www.irs.gov\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"IRS.gov\" height=\"80px\" src={process.env.PUBLIC_URL+\"/jpg/IRS.gov.jpg\"} /></a>\r\n                <a href=\"https://wid.world\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"text-center d-inline mr-1 mb-1\" alt=\"wid.world\" height=\"80px\" src={process.env.PUBLIC_URL+\"/png/wid.world.png\"} /></a>\r\n                <div className=\"d-none d-lg-block mt-3\">\r\n                    <GlobalStatsCountryCcy/>\r\n                </div>\r\n                <div className=\"mt-3 px-1 py-lg-0 py-lg-1\">\r\n                    <img className=\"text-center d-inline mr-1 mb-1\" alt=\"email\" width=\"20px\" src={process.env.PUBLIC_URL+\"/png/email.png\"} style={{filter:\"opacity(.5) sepia(1) hue-rotate(180deg)\"}} />\r\n                    &nbsp;\r\n                    <a className=\"text-center text-secondary\" href=\"mailto:info@thrubi.com\">\r\n                        info@thrubi.com\r\n                    </a>\r\n                </div>\r\n                <a href=\"https://twitter.com/thrubi_org?ref_src=twsrc%5Etfw\" data-show-count=\"false\" className=\"twitter-follow-button\">Follow @thrubi_org</a>\r\n                <br/>\r\n                <a href=\"https://www.patreon.com/bePatron?u=30859926\" data-patreon-widget-type=\"become-patron-button\" className=\"mt-0 mt-lg-4\">Become a Patron!</a>\r\n                <div className=\"d-block d-lg-none mt-3\">\r\n                    <EthBadges position=\"F\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-4 m-0 px-0 pb-1 py-lg-3 text-center text-secondary\">\r\n                <a href=\"https://discord.gg/ZUHPgyt\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img className=\"text-center d-inline mx-0 my-3\" alt=\"discord\" height=\"50px\" src={process.env.PUBLIC_URL+\"/png/discord_grey.png\"} />\r\n                </a>\r\n                <div className=\"d-none d-lg-block\">\r\n                    <iframe title=\"discordFrame\" src=\"https://discordapp.com/widget?id=681677187044343841&theme=dark\" width=\"100%\" height=\"250\"\r\n                            allowTransparency=\"true\" frameBorder=\"0\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-4 m-0 p-0 py-lg-3 text-center text-lg-right text-success\">\r\n                <span className=\"d-block navbar-nav small\">\r\n                    <p className=\"d-inline-block\">Rising inequality is toxic to growth</p>\r\n                    <i className=\"d-inline-block small\">&nbsp;&mdash; Nick Hanauer</i>\r\n                </span>\r\n                <div className=\"pt-0 pb-3\">© 2020 Thrubi.com</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst Footer = connect(mapStateToProps)(_Footer);\r\n\r\nexport default Footer;","import React, {Component,Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteFlare,refreshFlare} from \"../actions/flare\";\r\nimport flareBook from \"../config/flare\";\r\nimport './styles/Flare.scss';\r\n\r\nclass _Flare extends Component {\r\n    render() {\r\n        const {deactivated,flares} = this.props;\r\n        const {deleteFlare,refreshFlare} = this.props;\r\n\r\n        return(\r\n            <Fragment>\r\n                {\r\n                    deactivated ? \"\" :\r\n                        <div className=\"fixed-bottom flareBox\">\r\n                            {\r\n                                Object.keys(flares).map((key,i) =>\r\n                                    <div key={key} role={\"alert\"} onMouseOver={() => refreshFlare(key,true)} onMouseOut={() => refreshFlare(key)}\r\n                                         className={\"alert alert-dismissible fade show \"\r\n                                                        +(flares[key].flareType===flareBook.flareType.ERROR?\"alert-red\"\r\n                                                        :(flares[key].flareType===flareBook.flareType.WARNING?\"alert-danger\"\r\n                                                        :\"alert-secondary\"))}>\r\n                                        <span>{flares[key].message?flares[key].message.slice(0,200):\"Internal error\"}</span>&nbsp;\r\n                                        <i>{flares[key].details?flares[key].details.slice(0,200):\"\"}</i>\r\n                                        <button className=\"close paddingX\" type=\"button\" onClick={() => deleteFlare(key)} data-dismiss=\"alert\"><span>&times;</span></button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    deactivated:state.session.flare.deactivated,\r\n    flares:     state.session.flare.flares,\r\n});\r\n\r\nconst Flare = connect(mapStateToProps,{deleteFlare,refreshFlare})(_Flare);\r\n\r\nexport default Flare;","import {processRequest} from \"../server\";\r\nimport {emitFlare} from \"../flare\";\r\nimport {requestType} from \"../../config/http\";\r\nimport flareBook from \"../../config/flare\";\r\nimport actionType from \"../../reducers/config/actionTypes\";\r\nimport {endpoint} from \"../../config/server\";\r\nimport {INTERVAL_FETCH_GLOBAL_STATS_WORKER} from \"../../env/workers\";\r\n\r\nconst fetchGlobalStats = () => async (dispatch,getState) => {\r\n    let globalStats = {};\r\n    return Promise.all([\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NUSER,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCOUNTRY,null)),\r\n            dispatch(processRequest(requestType.GET,endpoint.STATS_NCCY,null))\r\n        ])\r\n        .then(results => {\r\n            for (let i=0;i<=2;i++) for (let key in results[i]) globalStats[key] = results[i][key];\r\n            return globalStats;\r\n        })\r\n        .catch(error => dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_FETCH_GLOBAL_STATS))));\r\n};\r\n\r\nexport const startGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = setInterval((() => {\r\n        const activity = () => {\r\n            return Promise.resolve()\r\n                .then (()               => dispatch(fetchGlobalStats()))\r\n                .then (globalStats      => {dispatch({type:actionType.RECEIVE_GLOBAL_STATS,payload:{globalStats}});})\r\n                .catch(error            => {dispatch(emitFlare(flareBook.flareType.ERROR,flareBook.flareFallback(error,flareBook.errorFlare.ERR_RECEIVE_GLOBAL_STATS)));});\r\n        };\r\n        activity();\r\n        return activity;\r\n    })(),INTERVAL_FETCH_GLOBAL_STATS_WORKER);\r\n    dispatch({type:actionType.RECEIVE_GLOBAL_STATS_WORKER,payload:{globalStatsWorker}});\r\n};\r\n\r\nexport const stopGlobalStatsWorker = () => async (dispatch,getState) => {\r\n    let globalStatsWorker = getState().session.workers.globalStats;\r\n    clearInterval(globalStatsWorker);\r\n    dispatch({type:actionType.STOP_GLOBAL_STATS_WORKER,payload:{}});\r\n};","import React,{Component,Fragment} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./styles/App.scss\";\nimport _ActionButton from \"./_ActionButton\";\nimport {guestSubscribeNewsletter} from \"../actions/guest\";\n\n\nclass _GuestBanner extends Component {\n    componentDidMount() {\n        this.setState({guestSubscribed:false});\n    }\n\n    render() {\n        const {guestSubscribed} = this.props;\n        const {guestSubscribeNewsletter} = this.props;\n        let guestEmail;\n\n        return (\n            <Fragment>\n                <div className=\"w-100 px-2 py-4 text-center\">\n                    <p className=\"display-4 m-2 px-2\">\n                        A <span className=\"thrubiGradient\">Thrubi</span> account gets you\n                        a <span className=\"thrubiGradient\">universal basic income.</span>\n                    </p>\n                    <h4 className=\"m-2 px-2 text-secondary\">\n                        It is calculated based on your current earnings and funded by wealthy individuals.\n                    </h4>\n                    <h4 className=\"display-3 m-0 p-2\">\n                        Our purpose? <span className=\"thrubiGradient\">Solve extreme poverty.</span>\n                    </h4>\n                </div>\n                <div className=\"container-fluid row mx-0 my-4 mb-5 p-0 text-center w-100 bg-light\">\n                    <div className=\"col-lg-3 p-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 mx-lg-3 px-0 py-2 pb-4 bg-primary text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">1.</p>\n                                <p className=\"p-4\">Sign up for a Thrubi account using one of the methods below</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-6 p-0 m-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 ml-lg-0 mr-lg-3 px-0 py-2 pb-4 bg-secondary text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">2.</p>\n                                <p className=\"px-2 mb-2\">{guestSubscribed?\"Subscribed to the newsletter!\":\"Subscribe to the newsletter\"}</p>\n                                {\n                                    guestSubscribed?\"\":\n                                        <Fragment>\n                                            <br className=\"d-lg-none\" />\n                                            <input ref={input => guestEmail = input}\n                                               type=\"text\" className=\"d-inline-block form-control form-control-sm rounded-0 m-0 w-75\"\n                                               placeholder=\"My email address\" required/>\n                                            <br className=\"d-lg-none\" />\n                                            <_ActionButton buttonType=\" d-inline-block w-75 btn-outline-light mx-2 \" noMargin=\"px-2\" text=\"Keep me up to date\"\n                                                            action={() => guestSubscribeNewsletter(guestEmail.value)} />\n                                        </Fragment>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-3 p-0 d-flex flex-column\">\n                        <div className=\"mx-md-0 ml-lg-0 mr-lg-3 px-0 py-2 pb-4 bg-success text-light d-flex flex-grow-1\">\n                            <div className=\"w-100 h-100\">\n                                <p className=\"display-1\">3.</p>\n                                <p className=\"p-4\">Learn more about Thrubi in the sections below</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    guestSubscribed: state.client.guest.subscribed,\n});\n\nconst GuestBanner = connect(mapStateToProps,{guestSubscribeNewsletter})(_GuestBanner);\n\nexport default GuestBanner;\n\n\n","import React,{Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport User from \"./User\";\nimport Footer from \"./Footer\";\nimport Flare from \"./Flare\";\nimport {enableBlockchain} from \"../actions/blockchain_ethereum\";\nimport {startGlobalStatsWorker,stopGlobalStatsWorker} from \"../actions/workers/globalStats\";\nimport {fetchChannels,sendRedirect} from \"../actions/auth\";\nimport \"./styles/App.scss\";\nimport GuestBanner from \"./GuestBanner\";\n\n\nclass _App extends Component {\n    componentDidMount() {\n        const {sendRedirect} = this.props;\n        if (window.location.search) {\n            sendRedirect();\n        } else {\n            this.reload();\n        }\n    };\n\n    componentWillUnmount() {\n        stopGlobalStatsWorker();\n    };\n\n    reload() {\n        const {startGlobalStatsWorker,fetchChannels,enableBlockchain} = this.props;\n        return Promise.all([\n            startGlobalStatsWorker(),\n            fetchChannels(),\n            // enableBlockchain(),\n        ]);\n    };\n\n    render() {\n        const {busy,loggedIn} = this.props;\n        return (\n            <div className=\"thrubiApp text-primary d-flex flex-column align-items-stretch\">\n                <Header />\n                {\n                    <div className=\"mainView\">\n                        {\n                            loggedIn ? \"\" :\n                                <GuestBanner />\n                        }\n                        {\n                            !busy ? <User /> :\n                                <div className=\"text-center\">\n                                    App loading... or\n                                    Ethereum config not found. Please authorize Thrubi in MetaMask.\n                                    Not sure what this means? Find out how to enable Thrubi <b>here</b>!\n                                </div>\n                        }\n                    </div>\n                }\n                <Footer />\n                <Flare />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = state => ({\n    busy:               state.session.busy.component.app,\n    loggedIn:           state.client.userAccess.loggedIn,\n});\n\nconst App = connect(mapStateToProps,{startGlobalStatsWorker,stopGlobalStatsWorker,fetchChannels,enableBlockchain,sendRedirect})(_App);\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Route} from \"react-router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport thrubiApp from \"./reducers/thrubiApp\"\nimport App from \"./components/App\";\nimport \"./styles/customBootstrap.scss\";\n\nconst store = thrubiApp();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\"                   component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}